<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Codesections</title>
        <link>https://www.codesections.com</link>
        <description>The personal website and blog of Daniel Long Sockwell, a lawyer-turned-programmer with an interest in web development, open source, and making things as simple as possible.</description>
        <generator>Gutenberg</generator>
        <language>en</language>
        <atom:link href="https://www.codesections.com/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Sun, 24 Feb 2019 00:00:00 +0000</lastBuildDate>
        
            <item>
                <title>Screenshots from arch&#x2F;stumpwm&#x2F;tmux&#x2F;vim&#x2F;qutebrowser setup</title>
                <pubDate>Sun, 24 Feb 2019 00:00:00 +0000</pubDate>
                <link>https://www.codesections.com/blog/sunday-screenshot-feb-2019/</link>
                <guid>https://www.codesections.com/blog/sunday-screenshot-feb-2019/</guid>
                <description>&lt;p&gt;I recently made a number of pretty significant change to the look and feel of my
Linux desktop environment, and I&#x27;m pretty happy with how my setup looks now.
It&#x27;s not for everyone, but I thought at least some of y&#x27;all might be interested
in seeing how it looks.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;what-i-changed&quot;&gt;What I changed&lt;&#x2F;h2&gt;
&lt;p&gt;I was previously using &lt;a href=&quot;https:&#x2F;&#x2F;dwm.suckless.org&#x2F;&quot;&gt;dwm&lt;&#x2F;a&gt; as my display manager—and, if you haven&#x27;t tried it, I highly recommend it.  But I just
switched to &lt;a href=&quot;https:&#x2F;&#x2F;stumpwm.github.io&#x2F;&quot;&gt;stumpwm&lt;&#x2F;a&gt;, which sacrifices a bit in
minimalism but makes up for it in configurability.  That change deserves—and
will get—it&#x27;s own blog post.  But, for now, you&#x27;ll just get to see the
pictures.&lt;&#x2F;p&gt;
&lt;p&gt;At the same time, I&#x27;ve changed from a standard &lt;a href=&quot;https:&#x2F;&#x2F;ethanschoonover.com&#x2F;solarized&#x2F;&quot;&gt;Solarized&lt;&#x2F;a&gt; color scheme for vim to the &lt;a href=&quot;https:&#x2F;&#x2F;www.robertmelton.com&#x2F;posts&#x2F;syntax-highlighting-off&#x2F;&quot;&gt;nofrils&lt;&#x2F;a&gt; color scheme as part of an experiment with removing (almost) all syntax highlight from my code.  That &lt;strong&gt;also&lt;&#x2F;strong&gt; deserves its own post; again, all you get right now is the
screenshots.&lt;&#x2F;p&gt;
&lt;p&gt;The result of all of these changes is a highly &lt;strong&gt;minimalist&lt;&#x2F;strong&gt;, &lt;strong&gt;distraction-free&lt;&#x2F;strong&gt;, and &lt;strong&gt;keyboard-centric&lt;&#x2F;strong&gt; window setup—and I&#x27;m very happy with it for now.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;screenshots&quot;&gt;Screenshots&lt;&#x2F;h2&gt;
&lt;p&gt;(In each case, click for a bigger image—and most of these really need it.)&lt;&#x2F;p&gt;
&lt;p&gt;My main desktop, when I log in:
&lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;sunday-screenshot-feb-2019&#x2F;desktop.png&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;sunday-screenshot-feb-2019&#x2F;desktop.png&quot; alt=&quot;screenshot of my default desktop&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;A full-screen terminal session open:
&lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;sunday-screenshot-feb-2019&#x2F;terminal.png&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;sunday-screenshot-feb-2019&#x2F;terminal.png&quot; alt=&quot;screenshot of my terminal&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If I&#x27;m relaxing, I might be sending toots from &lt;a href=&quot;https:&#x2F;&#x2F;fosstodon.org&quot;&gt;fosstodon&lt;&#x2F;a&gt;—and this setup lets me do this right from vim.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;sunday-screenshot-feb-2019&#x2F;quebrowser.png&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;sunday-screenshot-feb-2019&#x2F;qutebrowser.png&quot; alt=&quot;screenshot of qutebrowser&#x2F;vim&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Of course, I&#x27;m never more than a key press away from a terminal—including a drop-down terminal if that breaks the workflow less&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;sunday-screenshot-feb-2019&#x2F;quebrowser_dropdown.png&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;sunday-screenshot-feb-2019&#x2F;qutebrowser_dropdown.png&quot; alt=&quot;screenshot of dropdown terminal&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Enough relaxing—time to get some real work done:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;sunday-screenshot-feb-2019&#x2F;work.png&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;sunday-screenshot-feb-2019&#x2F;work.png&quot; alt=&quot;screenshot of tmux with multiple windows open&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;And, if I ever need a reminder about the keys I&#x27;ve set up, stumpwm&#x27;s built-in
help is always there for me.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;sunday-screenshot-feb-2019&#x2F;keys.png&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;sunday-screenshot-feb-2019&#x2F;keys.png&quot; alt=&quot;screenshot of stumpwm&#x27;s help&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Using Vim to take time-stamped notes</title>
                <pubDate>Thu, 14 Feb 2019 00:00:00 +0000</pubDate>
                <link>https://www.codesections.com/blog/vim-timestamped/</link>
                <guid>https://www.codesections.com/blog/vim-timestamped/</guid>
                <description>&lt;p&gt;I frequently find myself needing to take time-stamped notes.  Specifically, I&#x27;ll
be in a call, meeting, or interview and need to take notes that show how long
it&#x27;s been since the meeting started.  Basically, I want something that looks
like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;vim-timestamped&#x2F;result.jpg&quot; alt=&quot;Screenshot of time stamps generated in vim&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;My first thought was that there&#x27;s be a plugin to add time stamps, but a quick
search didn&#x27;t turn anything up.  However, I little digging &lt;strong&gt;did&lt;&#x2F;strong&gt; turn up the
fact that vim has the built-in ability to tell time.&lt;&#x2F;p&gt;
&lt;p&gt;This means that writing a bit of vimscript to insert a time stamp is pretty
easy.  After a bit of fiddling, I came up with something that serves my needs, and I decided it might be useful enough to others to be worth sharing.  Here&#x27;s what I came up with:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;g:time_stamp_enabled&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;g:time_stamp_start&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;command&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;! TimeStampToggle call &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;TimeStampToggle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;TimeStampToggle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;g:time_stamp_enabled&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; = !&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;g:time_stamp_enabled
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;g:time_stamp_start&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;strftime&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&amp;quot;%s&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;) 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;quot; Time in seconds since the Unix epoch
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;endfunction
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;inoremap &amp;lt;expr&amp;gt; &amp;lt;CR&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;g:time_stamp_enabled&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; ?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;quot;\&amp;lt;ESC&amp;gt;:call TimeStamp()\&amp;lt;CR&amp;gt;a&amp;quot;\: &amp;quot;\&amp;lt;CR&amp;gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;! &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;TimeStamp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_sec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&amp;quot;%02d&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;strftime&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&amp;quot;%s&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;) - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;g:time_stamp_start&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_min&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_hr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_sec &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;60
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_sec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; -= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;60
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_min&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; += &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;endwhile
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_min &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;60
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_min&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; -= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;60
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;       &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_hr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  += &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;endwhile
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_sec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&amp;quot;%02d&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_sec&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_min&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&amp;quot;%02d&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_min&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_hr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;printf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&amp;quot;%02d&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_hr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;quot; Go to the beginning of the line,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;quot; print the current zero-padded time,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;quot; print &#96;  -  &#96; as a separator
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;quot; and move the cursor over for the next line (with separator)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;execute &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;quot;normal! 0i\&amp;lt;SPACE&amp;gt;\&amp;lt;ESC&amp;gt;0dwi\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;           &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\&amp;lt;C-R&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_hr&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\&amp;lt;CR&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\&amp;lt;C-R&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_min&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\&amp;lt;CR&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\&amp;lt;C-R&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_sec &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\&amp;lt;CR&amp;gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;           &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;—&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;ESC&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;           &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;endfunction
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This is made &lt;em&gt;slightly&lt;&#x2F;em&gt; more complicated than it needs to be by my desire for a
relative time stamp.  If you&#x27;d prefer an absolute time stamp, you could simplify it considerably:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;g:time_stamp_enabled&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;command&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;! TimeStampToggle &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;g:time_stamp_enabled&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; = !&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;g:time_stamp_enabled
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;inoremap &amp;lt;expr&amp;gt; &amp;lt;CR&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;g:time_stamp_enabled&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; ? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&amp;quot;\&amp;lt;ESC&amp;gt;:call TimeStamp()\&amp;lt;CR&amp;gt;a&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; : &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&amp;quot;\&amp;lt;CR&amp;gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;! &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;TimeStamp&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_time&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;strftime&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&amp;quot;%H:%M:%S&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;execute &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;quot;normal! 0i\&amp;lt;SPACE&amp;gt;\&amp;lt;ESC&amp;gt;0dwi\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\&amp;lt;C-R&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;l:current_time&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\&amp;lt;CR&amp;gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;—&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;ESC&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;\&amp;lt;SPACE&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;endfunction
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This produces time stamps like &lt;code&gt;14:21:55&lt;&#x2F;code&gt;—and, of course, you can customize the time stamp to your own needs with the normal arguments to &lt;code&gt;strftime&lt;&#x2F;code&gt; (basically the same ones as &lt;code&gt;date&lt;&#x2F;code&gt;, but check &lt;code&gt;:help strftime()&lt;&#x2F;code&gt; for full details.)&lt;&#x2F;p&gt;
&lt;aside&gt;
I thought about packaging this up as a plugin, but decided it&#x27;s a bit too simple.  But feel free to copy this code into your own .vimrc—like the other code samples on this site, it&#x27;s released under an MIT license
&lt;&#x2F;aside&gt;
&lt;p&gt;So, vimscript will probably never win any beauty contests—and will &lt;strong&gt;definitely&lt;&#x2F;strong&gt; never be my favorite language.  But it can be pretty handy for wiping together quick utilities.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Thinking about moving the site away from Netlify</title>
                <pubDate>Tue, 12 Feb 2019 00:00:00 +0000</pubDate>
                <link>https://www.codesections.com/blog/leaving-netlify/</link>
                <guid>https://www.codesections.com/blog/leaving-netlify/</guid>
                <description>&lt;p&gt;I&#x27;m very strongly considering moving this site away from Netlify.  In fact, I&#x27;d go so far as saying that I&#x27;m planning to unless writing this post—or hearing from y&#x27;all—changes my mind.&lt;&#x2F;p&gt;
&lt;p&gt;Before I launch into why, though, I want to clarify: I&#x27;ve been very happy with Netlify.  They&#x27;ve delivered exactly what they promised: fast, free, static hosting backed by a global CDN.  Deploying is as easy as running &lt;code&gt;git push&lt;&#x2F;code&gt; in the terminal; if you&#x27;re thinking about using them, you probably shouldn&#x27;t let this post dissuade you.&lt;&#x2F;p&gt;
&lt;p&gt;So, given all those positives, why am I still thinking about migrating the site?&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-problem-my-complexity-budget&quot;&gt;The Problem: My Complexity Budget&lt;&#x2F;h2&gt;
&lt;p&gt;Basically, I&#x27;m starting to feel that my site is more complex than is justified by how simple my goals are.  Serving this simple, static site involves three separate CDNs: Netlify has their own CDN, they use the Akamai CDN, and they serve images from Amazon&#x27;s Cloudfront CDN.  That&#x27;s a lot of interconnected systems to depend on, and I could see it making debugging performance issues harder.&lt;&#x2F;p&gt;
&lt;p&gt;(On the other hand, I haven&#x27;t &lt;em&gt;had&lt;&#x2F;em&gt; any performance issues, so maybe I&#x27;m borrowing trouble by thinking through debugging them?)&lt;&#x2F;p&gt;
&lt;p&gt;Somewhat relatedly, I&#x27;m not &lt;em&gt;thrilled&lt;&#x2F;em&gt; with the idea that Amazon is involved in serving my site—there&#x27;s not a &lt;em&gt;ton&lt;&#x2F;em&gt; they can do with data from serving images (there aren&#x27;t any cookies on my site, for example) but it does still feed a bit more data their way.&lt;&#x2F;p&gt;
&lt;p&gt;Perhaps more concretely, the complexity inherent in Netlify&#x27;s setup means that I can&#x27;t access simple server logs.  I&#x27;m a bit curious about how many readers my various posts get, but I&#x27;ve been reluctant to add any JavaScript tracking to my site.  I flatly refuse to add Google Analytics—the privacy implications are just too extreme.  I&#x27;ve considered adding &lt;a href=&quot;https:&#x2F;&#x2F;usefathom.com&#x2F;&quot;&gt;Fathom&lt;&#x2F;a&gt;, but Fathom &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;usefathom&#x2F;fathom&#x2F;issues&#x2F;40&quot;&gt;still uses cookies&lt;&#x2F;a&gt; and has tagged the issue requesting a change with &lt;code&gt;wontfix&lt;&#x2F;code&gt;.  Besides, self-hosting Fathom actually be &lt;em&gt;more&lt;&#x2F;em&gt; complex than just hosting the site itself: their recommended installation procedure involves installing Fathom, Postgres, and Nginx.  (In contrast, since the site is built into flat files, it can be hosted without a database—all it would need is Nginx).&lt;&#x2F;p&gt;
&lt;p&gt;That&#x27;s just one example, of course, but it brings something into focus: using Netlify for hosting means buying in to their system—if something (here, accessing logs) isn&#x27;t supported by their API, then there&#x27;s just not anything you can do about it.  And there&#x27;s no long-term guarantee that their API won&#x27;t change in ways that might impact me; after all, I&#x27;m not a paying customer.  I wouldn&#x27;t even blame them if they change their service in a way that hurts me at the expense of the people actually paying to keep the lights on (or, more to the point, paying to deliver the sort of returns their venture-capitalist investors expect).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-solution-a-simple-vps&quot;&gt;The Solution: A Simple VPS&lt;&#x2F;h2&gt;
&lt;p&gt;The solution to all this is simple (or, The solution to all this is simplicity).  Since the site is just static files, I could throw it up behind a super simple Nginx server on basically any VPS.  (I&#x27;d probably go with Digital Ocean, but the point is that I could move it anywhere if DO didn&#x27;t work out—it&#x27;d be simple enough to work with any server rather than tied into a specific API).  I could even roll my own server in Rust, which I&#x27;ve tested as providing &lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;rust&#x2F;comments&#x2F;a82w9b&#x2F;can_a_rust_web_server_beat_nginx_in_serving&#x2F;&quot;&gt;similar performance to Nginx&lt;&#x2F;a&gt;.  Though if I went that route, I&#x27;d need to add in my own logging).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-problem-with-the-solution-global-speed&quot;&gt;The Problem with The Solution: Global Speed&lt;&#x2F;h2&gt;
&lt;p&gt;I really love the idea of moving to simplicity, but there&#x27;s one hangup.  All those CDNs Netlify was running my site through &lt;em&gt;did&lt;&#x2F;em&gt; have a purpose—they allow my site&#x27;s assets to be served globally.  This doesn&#x27;t much matter for visitors located near me—ironically enough, running &lt;code&gt;tracepath&lt;&#x2F;code&gt; showed that my site is &lt;em&gt;already&lt;&#x2F;em&gt; served from Digital Ocean servers for visitors from my location, so it wouldn&#x27;t matter &lt;em&gt;at all&lt;&#x2F;em&gt;.  But my site currently (according to &lt;a href=&quot;https:&#x2F;&#x2F;www.webpagetest.org&#x2F;&quot;&gt;webpagetest.org&lt;&#x2F;a&gt;, anyway) has essentially the same performance in Mumbai that it has in the U.S.  And I&#x27;d give that up if I hosted from a single server.&lt;&#x2F;p&gt;
&lt;p&gt;Of course, there are ways I could add a CDN back into my site—but that would be adding back in some of the complexity that I&#x27;m stripping away.  And doing so in a privacy-respecting way would probably get a bit pricy.&lt;&#x2F;p&gt;
&lt;p&gt;So, at least for the short term, I think I&#x27;d probably just accept that ditching Netlify would mean accepting slower site speeds for visitors that are half a world a way.  I &lt;em&gt;think&lt;&#x2F;em&gt; that trade off is worth it, but I feel bad saying so given that &lt;em&gt;I&lt;&#x2F;em&gt; wouldn&#x27;t be the one dealing with the slower load times.&lt;&#x2F;p&gt;
&lt;p&gt;Anyway, that&#x27;s what I&#x27;m thinking at the moment.  But I&#x27;m open to changing my mind—please let me know if I&#x27;m thinking about this all wrong.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Comparing Rust and JavaScript Ergonomics with a Simple Linked List</title>
                <pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate>
                <link>https://www.codesections.com/blog/javascript-vs-rust-linked-list/</link>
                <guid>https://www.codesections.com/blog/javascript-vs-rust-linked-list/</guid>
                <description>&lt;p&gt;My day-to-day work involves writing a fair bit of JavaScript but, lately, I&#x27;ve gotten really interested in Rust.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;m into the idea of building lightweight programs that can run with lower resource consumption than is typically required for a JS runtime, and Rust&#x27;s speed, memory safety, and &lt;a href=&quot;https:&#x2F;&#x2F;insights.stackoverflow.com&#x2F;survey&#x2F;2018&#x2F;#most-loved-dreaded-and-wanted&quot;&gt;status as the most loved programming language&lt;&#x2F;a&gt; was enough to get my attention.  Add in Rust&#x27;s strong type system and support for many functional-programming features—both areas I&#x27;ve long wanted to dig into—and it&#x27;s fair to say that I&#x27;m Rust-curious at the least.  Curious enough to work through the &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;book&#x2F;index.html&quot;&gt;Rust book&lt;&#x2F;a&gt; and the first half of &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;rust-by-example&#x2F;index.html&quot;&gt;Rust By Example&lt;&#x2F;a&gt; (both of which are great, by the way!).  I&#x27;m certainly enjoying the process so far.&lt;&#x2F;p&gt;
&lt;p&gt;But, the other day, I decided to take a slightly different approach: I decided to take a simple linked list program—the type can and do ask my students to implement in JavaScript in ~20 minutes—and re-implement it in Rust.  Specifically, I decided to build a queue implemented with a singly linked list.&lt;&#x2F;p&gt;
&lt;p&gt;Going in, I expected the Rust version to be much more verbose than the JavaScript version, far faster, and moderately difficult to write.  As it turns out, though, the Rust version is hardly any more verbose than the JavaScript version, but was virtually impossible to write—at least in safe Rust.  (I was right about it being faster, though).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;In this post, I provide a function-by-function comparison of the two very similar programs and discuss the trade offs inherent in Rust&#x27;s syntax.  Along the way, we&#x27;ll learn about &lt;em&gt;unsafe&lt;&#x2F;em&gt; Rust, and I&#x27;ll write my very first unsafe block.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-code&quot;&gt;The Code&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;setup&quot;&gt;Setup&lt;&#x2F;h3&gt;
&lt;p&gt;In either language, our first task is to set up our overall data structure:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;&#x2F; JavaScript
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;LinkedList &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;() {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d33682;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.head &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d33682;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.tail &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;&#x2F;&#x2F; Rust
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;#[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(Debug)]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;pub &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;struct &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;LinkedList {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: Option&amp;lt;Box&amp;lt;Node&amp;gt;&amp;gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;tail&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: Option&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;*mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; Node&amp;gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;#[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;derive&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(Debug)]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;struct &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Node {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;next&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: Option&amp;lt;Box&amp;lt;Node&amp;gt;&amp;gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;impl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;LinkedList {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;pub &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;new&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;() -&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;Self &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;LinkedList {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;head: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;tail: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;In some ways, this is the biggest difference between the two programs—and the biggest difference between the two languages.  In JavaScript, all wee need to do is tell the interpreter that we&#x27;re building a data structure that will have a &amp;quot;head&amp;quot; field and a &amp;quot;tail&amp;quot; field.  In Rust, however, we also need to specify the types of those fields—here, we tell the compiler that the head will &lt;em&gt;either&lt;&#x2F;em&gt; be &lt;code&gt;None&lt;&#x2F;code&gt; (no value at all) or will be a &lt;code&gt;Node&lt;&#x2F;code&gt; allocated on the heap.  Since &lt;code&gt;Node&lt;&#x2F;code&gt; is also a custom type, we also tell the complier that a &lt;code&gt;Node&lt;&#x2F;code&gt; will have a numerical value and another field—which, itself will be either &lt;code&gt;None&lt;&#x2F;code&gt; or another heap-allocated &lt;code&gt;Node&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, we also need to tell the complier how to build a new &lt;code&gt;LinkedList&lt;&#x2F;code&gt;—something that JavaScript already knows with the &lt;code&gt;new&lt;&#x2F;code&gt; keyword.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;adding-a-node-to-our-tail&quot;&gt;Adding a node to our tail&lt;&#x2F;h3&gt;
&lt;p&gt;Now that we have a data structure, it&#x27;d be great if we could add a node to the end of our queue.  Here&#x27;s how that looks in both languages:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;&#x2F;JavaScript
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;LinkedList&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.prototype.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;addToTail &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;newTail &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{ value, next: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;null &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d33682;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.tail) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d33682;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.tail.next &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;newTail;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d33682;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.head &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;newTail;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d33682;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.tail &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;newTail;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;&#x2F; Rust
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;pub &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;add_to_tail&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;amp;mut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;value&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; new_tail &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;= Box&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;::new(Node { value, next: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;None &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;});
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; raw_tail: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;*mut _ = &amp;amp;mut *&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;new_tail;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.tail.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;is_some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;() {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;unsafe &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{ (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.tail.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;()).next &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;= Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(new_tail) };
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.head &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;= Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(new_tail);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.tail &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;= Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(raw_tail);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This code was probably the biggest shock of the whole exercise.  First, I was surprised by just how &lt;em&gt;similar&lt;&#x2F;em&gt; it is.  In both languages, we create a new tail node with the input value.  If the linked list already had a tail, we make that tail point to the new tail; if it didn&#x27;t have an old tail, we get our list started by having the head point to the tail.  Either way, we update the tail pointer for our list to point to the new tail.  Other than a bit of superficial syntax, the whole thing looks pretty much identical across the two languages.&lt;&#x2F;p&gt;
&lt;p&gt;… with one giant exception—that &lt;code&gt;unsafe&lt;&#x2F;code&gt; block right in the middle of the Rust code.  What in the world is up with that? Why do we need unsafe code in the middle of what seems like a simple data structure, and how can we trust our code at all once part of it is unsafe?&lt;&#x2F;p&gt;
&lt;p&gt;These sort of questions actually held me up for quite a while—I was convinced that there must be a simple, performant way to write a linked-list-based queue in Rust that &lt;em&gt;didn&#x27;t&lt;&#x2F;em&gt; need to be unsafe—and, as a beginner Rustacean, I was frightened enough of &lt;code&gt;unsafe&lt;&#x2F;code&gt; code that I was reluctant to write any.&lt;&#x2F;p&gt;
&lt;p&gt;After banging my head against this wall for a bit, I finally found my way to &lt;a href=&quot;https:&#x2F;&#x2F;cglab.ca&#x2F;%7Eabeinges&#x2F;blah&#x2F;too-many-lists&#x2F;book&#x2F;README.html&quot;&gt;Learning Rust With Entirely Too Many Linked Lists&lt;&#x2F;a&gt; which—as the name suggests—is provides rather comprehensive coverage of linked lists for the Rust novice.  There, I learned that my little toy queue wasn&#x27;t quite as simple as I was thinking: instead of being in Chapter 1 or 2, this sort of queue didn&#x27;t make an appearance until Chapter &lt;em&gt;6&lt;&#x2F;em&gt; (the second-to-last chapter of the book).&lt;&#x2F;p&gt;
&lt;p&gt;What&#x27;s more, according to that book, &lt;a href=&quot;https:&#x2F;&#x2F;cglab.ca&#x2F;%7Eabeinges&#x2F;blah&#x2F;too-many-lists&#x2F;book&#x2F;fifth-layout.html&quot;&gt;there simply &lt;em&gt;isn&#x27;t&lt;&#x2F;em&gt; a good way to implement this structure in safe Rust&lt;&#x2F;a&gt;.  The way to go is to venture into unsafe Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Specifically, what we do in that code up above is to store a raw pointer—that is, a pointer without any of Rust&#x27;s normal safety guarantees—as our &lt;code&gt;tail&lt;&#x2F;code&gt; field.  Then, when we need to get at the contents of the &lt;code&gt;tail&lt;&#x2F;code&gt;, we dereference the raw pointer—which is what requires that &lt;code&gt;unsafe&lt;&#x2F;code&gt; block.&lt;&#x2F;p&gt;
&lt;p&gt;But isn&#x27;t that &lt;code&gt;unsafe&lt;&#x2F;code&gt; block well, you know, &lt;em&gt;unsafe&lt;&#x2F;em&gt;?  As it turns out, no, not at all.  Yeah, sure, dereferencing raw pointers &lt;em&gt;can&lt;&#x2F;em&gt; be unsafe—Rust has reason to limit the times in which you can do so.  If the contents that pointer points to aren&#x27;t initialized or have been dropped, you can wind up with exactly the sort of error that Rust&#x27;s memory safety protects us from.&lt;&#x2F;p&gt;
&lt;p&gt;So, why isn&#x27;t that an issue here—why is this &lt;code&gt;unsafe&lt;&#x2F;code&gt; code actually perfectly safe?  Well, let&#x27;s take another look at that &lt;code&gt;unsafe&lt;&#x2F;code&gt; block:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;&#x2F; Rust
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.tail.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;is_some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;() {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;unsafe &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{ (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.tail.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;unwrap&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;()).next &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;= Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(new_tail) };
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We dereference the raw point in self.tail—which means we need to worry about two situations: 1) if the pointed-to memory hasn&#x27;t yet been initialized, and 2) if the pointed-to memory has already been freed.  Let&#x27;s take those one at a time:&lt;&#x2F;p&gt;
&lt;p&gt;On 1), we know that we set up &lt;code&gt;self.tail&lt;&#x2F;code&gt; to start off as &lt;code&gt;None&lt;&#x2F;code&gt;—and we wrap our dereference inside an &lt;code&gt;if self.tail.is_some()&lt;&#x2F;code&gt; block.  Accordingly, if we correctly initialize the memory &lt;code&gt;self.tail&lt;&#x2F;code&gt; points to at the same time we change &lt;code&gt;self.tail&lt;&#x2F;code&gt; to be &lt;code&gt;Some&lt;&#x2F;code&gt;, then we don&#x27;t need to worry about dereferencing &lt;code&gt;self.tail&lt;&#x2F;code&gt; too early.  And that&#x27;s exactly what we do inside this function: we initialize the memory that &lt;code&gt;self.tail&lt;&#x2F;code&gt; points to right before getting it to point there.  So 1) is taken care of.&lt;&#x2F;p&gt;
&lt;p&gt;For 2), we have to handle the flip side: we have to ensure that we don&#x27;t have a raw pointer left in &lt;code&gt;self.tail&lt;&#x2F;code&gt; &lt;em&gt;after&lt;&#x2F;em&gt; we&#x27;ve thrown away the pointed-to value.  So let&#x27;s turn to that function now.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;removing-the-head-node&quot;&gt;Removing the head node&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;&#x2F; JavaScript
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;LinkedList&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.prototype.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;removeHead &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;() {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;currentHead &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d33682;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.head;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;newHead &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d33682;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.head.next;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(newHead &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d33682;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.tail &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d33682;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.head &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;newHead;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;currentHead &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;currentHead.value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;&#x2F; Rust
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;pub &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;remove_head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;amp;mut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;) -&amp;gt; Option&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;gt; {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(head) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;= &amp;amp;mut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.head {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; old_value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;= Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(head.value);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; new_head &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; head.next.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;take&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; new_head.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;is_none&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;() {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.tail &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;= None&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.head &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; new_head;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;old_value
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;else &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;None
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Finally, we&#x27;re getting somewhere where the Rust and JavaScript implementations don&#x27;t look like straight copy-paste jobs.  Let&#x27;s walk though the two implementations and then we&#x27;ll circle back to how the Rust version protects us from memory-safety issues.&lt;&#x2F;p&gt;
&lt;p&gt;First, the JavaScript:  we&#x27;re saving the current value of the &lt;code&gt;head&lt;&#x2F;code&gt; field, then updating that field to point to the next node in our list.  If there &lt;em&gt;isn&#x27;t&lt;&#x2F;em&gt; a next node, that means our list is now empty and so we point our &lt;code&gt;tail&lt;&#x2F;code&gt; field to &lt;code&gt;null&lt;&#x2F;code&gt; as well.  Finally, we return the value of our head node, which we get either with the &lt;code&gt;value&lt;&#x2F;code&gt; field of a head node or by directly returning &lt;code&gt;null&lt;&#x2F;code&gt; if there &lt;em&gt;isn&#x27;t&lt;&#x2F;em&gt; a head node.&lt;&#x2F;p&gt;
&lt;p&gt;The Rust code approaches the same problem slightly differently:  First, if there is a head node, then it stores the former value of that node, points &lt;code&gt;head&lt;&#x2F;code&gt; to the next node in the list and, if the new head is &lt;code&gt;None&lt;&#x2F;code&gt;, points &lt;code&gt;tail&lt;&#x2F;code&gt; to &lt;code&gt;None&lt;&#x2F;code&gt; as well.  Otherwise—if &lt;code&gt;head&lt;&#x2F;code&gt; was &lt;code&gt;None&lt;&#x2F;code&gt; to begin with, it just returns &lt;code&gt;None&lt;&#x2F;code&gt; without doing anything at all.&lt;&#x2F;p&gt;
&lt;p&gt;Two paths to the same point but, to my eyes at least, neither is clearer or more expressive than the other.  &lt;em&gt;Maybe&lt;&#x2F;em&gt; JavaScript ekes out a technical victory by having equally expressive code in a couple fewer lines, but it&#x27;s not by much.&lt;&#x2F;p&gt;
&lt;p&gt;But what about the &lt;code&gt;unsafe&lt;&#x2F;code&gt; block—how does this function relate to it?  (And &lt;em&gt;why&lt;&#x2F;em&gt; does it relate, given that we don&#x27;t have any &lt;code&gt;unsafe&lt;&#x2F;code&gt; blocks here?)&lt;&#x2F;p&gt;
&lt;p&gt;Well, as we said above, we only get into trouble with that &lt;code&gt;unsafe&lt;&#x2F;code&gt; code if we don&#x27;t deal with our &lt;code&gt;tail&lt;&#x2F;code&gt; pointer correctly when we deallocate the memory it&#x27;s pointing to.  This is the function that does that deallocation, so we need to be sure to deal with &lt;code&gt;tail&lt;&#x2F;code&gt; correctly here.&lt;&#x2F;p&gt;
&lt;p&gt;Fortunately, we do: as soon as &lt;code&gt;new_head&lt;&#x2F;code&gt; is &lt;code&gt;None&lt;&#x2F;code&gt;, we set &lt;code&gt;tail&lt;&#x2F;code&gt; to equal &lt;code&gt;None&lt;&#x2F;code&gt; as well.  This guarantees that we won&#x27;t have any memory safety issues with our raw pointer; our &lt;code&gt;unsafe&lt;&#x2F;code&gt; code is rendered safe after all.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;checking-inside-our-linked-list&quot;&gt;Checking inside our linked list&lt;&#x2F;h3&gt;
&lt;p&gt;Now that we have the basic API for our linked list, lets get a way to see whats in it.  Not only will this make our API more complete, it will also make it easier to test our first couple of methods.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;&#x2F; JavaScript
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;LinkedList&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.prototype.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;contains &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;node &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d33682;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.head;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(node) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(node.value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;target) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;node &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;node.next;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;&#x2F; Rust
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;pub &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;contains&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;amp;mut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;target&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;i32&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;) -&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;bool &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; node &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;= &amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.head;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(old_node) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; node {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;match &amp;amp;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; node {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(node) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; node.value &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; target &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;=&amp;gt; return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;_ =&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(),
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;node &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;= &amp;amp;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;old_node.next;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And now we&#x27;re back to nearly identical code.  In both cases, the code stores the value of the head node in a variable and then checks the value of that node to see if it&#x27;s equal to the &lt;code&gt;target&lt;&#x2F;code&gt; node.  If it is, the function returns early with true; if not, it goes on to check the next node.  If the function runs out of nodes to check, it returns false.  Two languages, but basically the same code.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;testing-and-benchmarking&quot;&gt;testing and benchmarking&lt;&#x2F;h3&gt;
&lt;p&gt;The &amp;quot;test&amp;quot; code is nearly identical—the only difference is that Rust has full support for test code that&#x27;s excluded from the compiled binary whereas JavaScript would need a separate test framework (like Jest or Mocha) to get the same results.  I&#x27;m not going to display that code here, but it&#x27;s part of the full code I&#x27;ll link at the end.&lt;&#x2F;p&gt;
&lt;p&gt;In terms of actually &lt;em&gt;using&lt;&#x2F;em&gt; the API for benchmark purposes, the two languages are again pretty similar:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;&#x2F; JavaScript
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;list &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;LinkedList&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;250000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;; i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;++&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;list.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;addToTail&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(i);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;console&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;log&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(list.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;contains&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;300000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;));
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;&#x2F; Rust
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; list &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;LinkedList::new();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;..&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;250_000 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;list.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;add_to_tail&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(i);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;println!(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;{:?}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;, list.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;contains&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;300_000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;));
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The only meaningful difference is that Rust uses a range (&lt;code&gt;0..250_000&lt;&#x2F;code&gt;), the way Python and many other languages do, instead of the C-style for loop favored by JavaScript.  Well, that and that Rust allows non-significant &lt;code&gt;_&lt;&#x2F;code&gt; characters in its numbers, which help break up long numbers.&lt;&#x2F;p&gt;
&lt;p&gt;Of course, the &lt;strong&gt;other&lt;&#x2F;strong&gt; difference was the speed at which these two loops executed.  Rust took about 15 milliseconds to build a linked list with 250,000 nodes and then to search that list for a node that didn&#x27;t exist.  In contrast, Node took around 75 milliseconds for the same task.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;takeaways-surprises-and-conclusions&quot;&gt;Takeaways, Surprises, and Conclusions&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;rust-is-pretty&quot;&gt;Rust is pretty&lt;&#x2F;h3&gt;
&lt;p&gt;Of course, you might feel differently, but one of my biggest takeaways from all of this side-by-side code is that Rust is clear, expressive, and not nearly as verbose as I was afraid it might be.  The overall Rust program was a bit longer than the JavaScript one, but much of that length came from setting up the type system—many of the individual functions were nearly even with their JS counterparts.&lt;&#x2F;p&gt;
&lt;p&gt;All in all, this exercise definitely left me impressed with Rust&#x27;s eloquence.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;unsafe-isn-t-scary&quot;&gt;Unsafe Isn&#x27;t Scary&lt;&#x2F;h3&gt;
&lt;p&gt;I came into this exercise thinking that &lt;code&gt;unsafe&lt;&#x2F;code&gt; was something I wouldn&#x27;t touch for months, if at all, in my Rust experience.  I was thinking that it was something people might need in building deep, low-level code but not something I&#x27;d need (or be prepared to deal with!) in day-to-day programming.  I thought it was the sort of code only applicable to projects that could afford to have their code audited by reliable outsiders.&lt;&#x2F;p&gt;
&lt;p&gt;This simple exercise changed those thoughts.  Here, we wrote a single line of unsafe code (OK, two lines counting the test) and were able to build an entirely safe program by guarding the values that can interact with that &lt;code&gt;unsafe&lt;&#x2F;code&gt; code.  Even better, we wrote our API in such a way that no user of our code could ever cause memory-safety errors with the code we provided. What&#x27;s more, if we dove a bit more into Rust&#x27;s privacy rules, we could probably write an entirely safe public API so that users of our linked list never needed to write a single &lt;code&gt;unsafe&lt;&#x2F;code&gt; line.&lt;&#x2F;p&gt;
&lt;p&gt;Yes, I&#x27;m still going to think of &lt;code&gt;unsafe&lt;&#x2F;code&gt; as a tool of last resort, but it&#x27;s one that I&#x27;m going to study and going to keep in my tool belt—and sooner rather than later.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;bonus-lesson-manual-memory-management-means-stack-management&quot;&gt;Bonus Lesson: Manual Memory Management Means Stack Management&lt;&#x2F;h3&gt;
&lt;p&gt;I expected Rust to blow JavaScript away in the benchmark, as it did.  One thing I &lt;em&gt;didn&#x27;t&lt;&#x2F;em&gt; expect was that I&#x27;d need to limit the benchmark linked list to ~250,000 nodes because lists longer than that triggered a stack overflow in the Rust code.  Coming from a JavaScript, I&#x27;ve gotten used to seeing stack overflows pretty much just with infinite recursion.  More specifically, in JS you get a stack overflow when you have too many function calls on the stack—but that&#x27;s it.  If you don&#x27;t push too many functions only the call stack, you&#x27;re not going to overflow the stack.&lt;&#x2F;p&gt;
&lt;p&gt;So I was initially a bit flummoxed when I ran into a stack overflow with no recursion in sight.&lt;&#x2F;p&gt;
&lt;p&gt;But then I remembered: Of course! Rust is different—in Rust, you decide whether a variable is stack allocated or heap allocated; if I use too much stack memory, then I&#x27;ll overflow the stack—and it makes no difference at all that we&#x27;re in a single function invocation.&lt;&#x2F;p&gt;
&lt;p&gt;Since that wasn&#x27;t the point of this exercise, I just scaled back the size of the linked list in the benchmark and went on with my day, but it&#x27;s a good lesson to remember for the future.  (Incidentally, if any more experienced Rustaceans can tell me how I&#x27;d avoid a stack overflow with this code, I&#x27;d love to hear it.  And, no, putting the whole linked list in a &lt;code&gt;box&lt;&#x2F;code&gt; isn&#x27;t enough to solve it.)&lt;&#x2F;p&gt;
&lt;aside&gt;
  &lt;p&gt;&lt;strong&gt;Edit&lt;&#x2F;strong&gt;: Thanks to &lt;a href=&quot;https:&#x2F;&#x2F;mastodon.technology&#x2F;@bugaevc&quot;&gt;Sergey Bugaev&lt;&#x2F;a&gt; for pointing out that the stack overflow was caused Rust attempting to &lt;em&gt;resursivly&lt;&#x2F;em&gt; drop all of the nodes in the linked list when the list goes out of scope.  I really should have caught this, since the Too Many Linked List book &lt;a href=&quot;https:&#x2F;&#x2F;cglab.ca&#x2F;%7Eabeinges&#x2F;blah&#x2F;too-many-lists&#x2F;book&#x2F;first-drop.html&quot;&gt;covered it&lt;&#x2F;a&gt;—and even called out that the default implementation would lead to a stack overflow.&lt;&#x2F;p&gt;
&lt;p&gt;Fortunately, the fix is simple: just write our own non-recursive &lt;code&gt;drop&lt;&#x2F;code&gt; method:&lt;&#x2F;p&gt;
&lt;&#x2F;aside&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#268bd2;&quot;&gt;fn &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;drop&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;amp;mut &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;) {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; node &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;self&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.head.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;take&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;while &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;Some&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;mut&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; next_node) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; node {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;node &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; next_node.next.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;take&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;()
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;aside&gt;
  &lt;p&gt;And, just like that, no more stack overflows!  A revised benchmark shows that the Rust code can generate, search, and drop a 10-million item list in ~440 ms (with &lt;code&gt;--release&lt;&#x2F;code&gt; optimizations on, of course); the equivalent number for JavaScript is 800 ms.&lt;&#x2F;p&gt;
&lt;&#x2F;aside&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;So, I hope y&#x27;all enjoyed this blow-by-blow comparison of Rust and JavaScript—at least with regards to this one toy problem.  I know I learned a lot, and pretty much everything I learned made me more enthusiastic about continuing to my journey with Rust.&lt;&#x2F;p&gt;
&lt;p&gt;Full code is on GitHub:
&lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;codesections&#x2F;117a984f733d8d1ee4c3612e0307ab10&quot;&gt;JavaScript&lt;&#x2F;a&gt; code;
&lt;a href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;codesections&#x2F;bef7f95973ea5bb2d0046ab99270928b&quot;&gt;Rust&lt;&#x2F;a&gt; code.&lt;&#x2F;p&gt;
&lt;p&gt;If you have any comments or suggestions, I&#x27;d love to hear from you.  You can reach me on &lt;a href=&quot;https:&#x2F;&#x2F;fosstodon.org&#x2F;@codesections&quot;&gt;Mastodon&lt;&#x2F;a&gt; or via any of the contact methods listed on my &lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;about#contact&quot;&gt;About&lt;&#x2F;a&gt; page.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Generating placeholder images with Pixabay, jq, and curl</title>
                <pubDate>Tue, 13 Nov 2018 00:00:00 +0000</pubDate>
                <link>https://www.codesections.com/blog/guide-to-placeholder-images/</link>
                <guid>https://www.codesections.com/blog/guide-to-placeholder-images/</guid>
                <description>&lt;p&gt;Just recently, I found myself in need of several hundred pictures.  I&#x27;m working on a fairly large-scale app, and I want to be able to test its server infrastructure under load.  In my case, that means uploading a decent number of images to Amazon&#x27;s S3 servers and testing how the app&#x27;s performs holds up.&lt;&#x2F;p&gt;
&lt;p&gt;So, where to get several hundred reasonably decent pictures, preferably with as little work as possible?&lt;&#x2F;p&gt;
&lt;h2 id=&quot;licensing-difficulties&quot;&gt;Licensing Difficulties&lt;&#x2F;h2&gt;
&lt;p&gt;I asked around, and several of my colleagues recommended &lt;a href=&quot;https:&#x2F;&#x2F;unsplash.com&#x2F;&quot;&gt;Unsplash&lt;&#x2F;a&gt;.  In a lot of ways, that would be perfect—they have gorgeous photos, and an easy-to-use API.  There&#x27;s just one problem: The Unsplash API &lt;a href=&quot;https:&#x2F;&#x2F;medium.com&#x2F;unsplash&#x2F;unsplash-api-guidelines-hotlinking-images-6c6b51030d2a&quot;&gt;expressly requires&lt;&#x2F;a&gt; all images to be hotlinked back to their servers.  As they explain:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Downloads and views are one of the main motivations for many Unsplash contributors. By opening up the Unsplash API to 3rd party applications their photography is seen and used by more users which inspires them to contribute more, new contributors to join, and an even better library for you and your community of creatives.&lt;&#x2F;p&gt;
&lt;p&gt;When displaying Unsplash images, you should use the urls property returned by the API on all of the API photo objects.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;That makes a certain amount of sense.  (I suspect they might also be harvesting the data for advertising purposes too, based on a closer reading of their ToS—but, either way, it&#x27;s their product and they make the rules.)&lt;&#x2F;p&gt;
&lt;p&gt;So, if Unsplash is out, what does that leave us with?&lt;&#x2F;p&gt;
&lt;h2 id=&quot;other-options&quot;&gt;Other Options&lt;&#x2F;h2&gt;
&lt;p&gt;Well, there&#x27;s always &lt;a href=&quot;placekitten.com&#x2F;&quot;&gt;placekitten&lt;&#x2F;a&gt;.  But, just for the sake of argument, let&#x27;s assume that we&#x27;d like somewhat realistic data in our app and that we&#x27;re building an app that &lt;em&gt;isn&#x27;t&lt;&#x2F;em&gt; kitten-centric (I know, what is the Internet coming to!).&lt;&#x2F;p&gt;
&lt;p&gt;I investigated a few other options, but none of them quite worked.  I looked at &lt;a href=&quot;https:&#x2F;&#x2F;tools.wmflabs.org&#x2F;magnus-toolserver&#x2F;commonsapi.php&quot;&gt;Wikimedia Commons&lt;&#x2F;a&gt; (limited API, no way to programmatically filter based on license); &lt;a href=&quot;https:&#x2F;&#x2F;www.pexels.com&#x2F;&quot;&gt;Pexels&lt;&#x2F;a&gt; (no public access to API—only after requesting access); &lt;a href=&quot;https:&#x2F;&#x2F;www.flickr.com&#x2F;creativecommons&#x2F;&quot;&gt;Flicker CC&lt;&#x2F;a&gt; (API is exclusively non-commercial); &lt;a href=&quot;http:&#x2F;&#x2F;placeimg.com&#x2F;&quot;&gt;PlaceImage&lt;&#x2F;a&gt; and &lt;a href=&quot;http:&#x2F;&#x2F;lorempixel.com&#x2F;&quot;&gt;LoremPixel&lt;&#x2F;a&gt; (Good APIs but very limited image selection).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-best-choice&quot;&gt;The Best Choice&lt;&#x2F;h2&gt;
&lt;p&gt;After sorting through the contenders, I finally found a site that would work perfectly: &lt;a href=&quot;https:&#x2F;&#x2F;pixabay.com&#x2F;&quot;&gt;Pixabay&lt;&#x2F;a&gt;, which has a great (although not 100% user-friendly) API and allows full use of their images on external server.  And everything there is perfectly open-source.  Thanks to &lt;a href=&quot;https:&#x2F;&#x2F;fosstodon.org&#x2F;@colomar&quot;&gt;Thomas Pfeiffer&lt;&#x2F;a&gt; for pointing me in the right direction, by the way.&lt;&#x2F;p&gt;
&lt;p&gt;Having settled on the source of our images, how do we actually go about pulling some down?  Let&#x27;s code!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;how-to-use-pixabay&quot;&gt;How To Use Pixabay&lt;&#x2F;h2&gt;
&lt;p&gt;First, we need to grab a Pixabay API key as described in &lt;a href=&quot;https:&#x2F;&#x2F;pixabay.com&#x2F;api&#x2F;docs&#x2F;&quot;&gt;their docs&lt;&#x2F;a&gt;.  This does require registering for a (free) account, but shouldn&#x27;t take more than a minute.&lt;&#x2F;p&gt;
&lt;p&gt;Next, we&#x27;ll query the API, and return some JSON describing our images.  To do this, we&#x27;ll use the &lt;code&gt;https:&#x2F;&#x2F;pixabay.com&#x2F;api&#x2F;&lt;&#x2F;code&gt; route with the &lt;code&gt;curl&lt;&#x2F;code&gt; command.  For example, you could do this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#268bd2;&quot;&gt;curl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;https:&#x2F;&#x2F;pixabay.com&#x2F;api&#x2F;?key=YOUR_API_KEY&amp;amp;image_type=photo&amp;amp;category=buildings&amp;amp;per_page=200&amp;amp;page=1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; response.json
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As you can probably tell, that query filters based on the &amp;quot;building&amp;quot; category.  You can filter on whatever category you&#x27;d like, or even perform a search if you want more detailed results.  Check out the &lt;a href=&quot;https:&#x2F;&#x2F;pixabay.com&#x2F;api&#x2F;docs&#x2F;&quot;&gt;API docs&lt;&#x2F;a&gt; for full details on the available fields.&lt;&#x2F;p&gt;
&lt;p&gt;That will save a fairly long string of JSON to your the &lt;code&gt;response.json&lt;&#x2F;code&gt; file.  It gives you all the data you need to pull the images, but it&#x27;s a bit much to work with.&lt;&#x2F;p&gt;
&lt;p&gt;Fortunately, there&#x27;s a great command-line tool called &lt;a href=&quot;https:&#x2F;&#x2F;stedolan.github.io&#x2F;jq&#x2F;&quot;&gt;jq&lt;&#x2F;a&gt; that can help you filter this response—if you don&#x27;t already know about it, now&#x27;s a great time to learn.&lt;&#x2F;p&gt;
&lt;p&gt;Jq has several powerful filters, but right now we&#x27;ll just be using a basic one:
we want the &lt;code&gt;webformatURL&lt;&#x2F;code&gt; value for each of the images, and we want to save that into a separate file.  To do this, all we need is:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#268bd2;&quot;&gt;jq &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;.hits[]webformatURL&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;#39; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; images.json &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; urls.json
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This gets us a file full of lines like:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;pixabay.com&#x2F;get&#x2F;ea32b70e2df5043ed1584d05fb1d4796e57fe6d01eb40c4090f4c378a2e9b1b1df_640.jpg&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Each line links to a particular image just like this one:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;guide-to-placeholder-images&#x2F;img.jpg&quot; alt=&quot;Placeholder image&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;For our next step, however, we&#x27;ll need the bare URLs, so let&#x27;s quickly strip out the quotation marks.  Just open up your favorite text editor and remove the quotes—in my case that means firing up Vim and running &lt;code&gt;:%s&#x2F;&amp;quot;&#x2F;&#x2F;g&lt;&#x2F;code&gt;, but use whatever you&#x27;re comfortable with.&lt;&#x2F;p&gt;
&lt;p&gt;After all that, we just need to loop through the list and make a curl request for each line—and then save each file with a unique name.  We can do that with a bit of bash:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#268bd2;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;while read&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; LINE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;do &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;curl &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;LINE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; img&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.jpg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;i&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;done &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; urls.json
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And that should get you 200 files—rinse and repeat for as many files as as you need!&lt;&#x2F;p&gt;
&lt;p&gt;And, with just a few minutes and a few lines of code, you have a full selection of placeholder images on whatever topic you&#x27;d like.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Mastodon Mobs and Mastodon Mods: Dealing with Outside Groups Pressuring Instance Administrators</title>
                <pubDate>Sat, 01 Sep 2018 00:00:00 +0000</pubDate>
                <link>https://www.codesections.com/blog/mastodon-mobs-and-mastodon-mobs/</link>
                <guid>https://www.codesections.com/blog/mastodon-mobs-and-mastodon-mobs/</guid>
                <description>&lt;aside&gt;
  &lt;p&gt;This post is a focused on issues of community governance within &lt;a href=&quot;https:&#x2F;&#x2F;www.joinmastodon.org&quot;&gt;Mastodon&lt;&#x2F;a&gt; and the fediverse more broadly.  If you&#x27;re not involved in the fediverse, this might not be as relevant to you.&lt;&#x2F;p&gt;
&lt;&#x2F;aside&gt;
&lt;p&gt;The fediverse recently had an incident after a minor celebrity created an account.  I very much do &lt;strong&gt;not&lt;&#x2F;strong&gt; want to talk about the details&#x2F;merits of that incident¸ but I do want to use it as a prompt for thinking about how the fediverse should deal with some related issues.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Here are the &lt;em&gt;very&lt;&#x2F;em&gt; basics of what happened, just as context: A large group of people on separate instances did not like the celebrity; that group of people made many hostile statements directed to the celebrity (with the &lt;code&gt;@&lt;&#x2F;code&gt; feature) and filed reports against the celebrity, alleging that the celebrity was engaging&#x2F;had engaged in inappropriate conduct.  The administrator of the celebrity&#x27;s instance felt that these allegations were untrue, but nevertheless decided to ask the celebrity to leave the instance because the administrator could not deal with the volume of reports.  If you would like more details about the facts, I refer you to the &lt;a href=&quot;https:&#x2F;&#x2F;www.theverge.com&#x2F;2018&#x2F;8&#x2F;31&#x2F;17801404&#x2F;mastodon-harassment-wil-wheaton-mobs-twitter&quot;&gt;media coverage&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Now, I have &lt;em&gt;absolutly&lt;&#x2F;em&gt; no interest in getting into the merits of this particular case—maybe the administrator was wrong to view the reports as unfounded; maybe they were right.  Maybe it&#x27;s good that the celebrity is off Mastodon; maybe it&#x27;s bad.  No interest in getting into any of that at all.&lt;&#x2F;p&gt;
&lt;p&gt;What I &lt;strong&gt;do&lt;&#x2F;strong&gt; want to get in to is the meta issue: How should we set up the fediverse so that instance admins can make decisions on their merits, and not be &lt;em&gt;forced&lt;&#x2F;em&gt; into certain actions because they are overwhelmed by outside pressures?&lt;&#x2F;p&gt;
&lt;h2 id=&quot;stating-the-problem-more-clearly&quot;&gt;Stating the problem more clearly&lt;&#x2F;h2&gt;
&lt;p&gt;Here&#x27;s the problem: at the moment it&#x27;s pretty easy for a coordinated group of individuals to file numerous reports and otherwise harass an individual (such as by sending them messages with the &lt;code&gt;@&lt;&#x2F;code&gt; function).  The group can generate a high number of reports and @ messages—such a high number, in fact, that it overwhelms the resources of the recipient&#x27;s instance admins.  Overwhelmed admins might then either allow the situation to continue without being able to protect their users or—as happened in this case—might ask the targeted user to leave the instance.&lt;&#x2F;p&gt;
&lt;p&gt;So, how can we prevent instance admins from being overwhelmed in cases like this?&lt;&#x2F;p&gt;
&lt;h2 id=&quot;a-big-problem-with-at-least-three-parts-to-the-solution&quot;&gt;A big problem with (at least) three parts to the solution&lt;&#x2F;h2&gt;
&lt;p&gt;Solving a problem this large will likely require a solution that comes at the issue from multiple directions.  I can think of at least three ways to prevent admins from being overwhelmed by outside groups.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;First&lt;&#x2F;strong&gt;, we can give the admins more powerful moderation software that allows a small group of administrators&#x2F;mods to deal with a large number of accounts at once.  This might include allowing the moderators to take action related to a group of accounts at once, or it might require opining up the moderation API to third-party apps that could be more powerful.  Whatever form this takes, the basic idea is to magnify the power of admins&#x2F;mods through better software tools.  A number of people have already &lt;a href=&quot;https:&#x2F;&#x2F;nolanlawson.com&#x2F;2018&#x2F;08&#x2F;31&#x2F;mastodon-and-the-challenges-of-abuse-in-a-federated-system&#x2F;&quot;&gt;discussed this strategy&lt;&#x2F;a&gt; and I suspect it&#x27;s already being worked on.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Second&lt;&#x2F;strong&gt;, we can take steps to reduce the ability of outside groups to generate a huge volume of work for admins in the first place through some sort of rate limit on messages.  There are technical challenges to implementing a rate limit in ways that wouldn&#x27;t impose too much work on the instance servers, but &lt;a href=&quot;https:&#x2F;&#x2F;superfloppies.tk&#x2F;writeup&#x2F;on-rate-limiting-and-abuse&#x2F;&quot;&gt;people are already coming up with creative solutions&lt;&#x2F;a&gt; for workable ways to impose rate limits.  This seems likely to play a key role in the solution.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Third&lt;&#x2F;strong&gt;, we can take steps to make sure that moderators aren&#x27;t stretched too thin to begin with.  If a moderator or admin is &lt;em&gt;right at the edge&lt;&#x2F;em&gt; of their capacity to handle more traffic, then it&#x27;s easy for an outside group to push them over the edge.  We should thus take steps to avoid a situation in which admins are stretched to the edge of their capacity.&lt;&#x2F;p&gt;
&lt;p&gt;I haven&#x27;t seen as much discussion of this third point, so it&#x27;s what I want to talk about here.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;preventing-moderators-from-being-stretched-too-thin&quot;&gt;Preventing moderators from being stretched too thin&lt;&#x2F;h2&gt;
&lt;p&gt;The first thing we should recognize is that moderators vary &lt;em&gt;tremendously&lt;&#x2F;em&gt; in how busy they currently are, but there&#x27;s &lt;em&gt;absolutly&lt;&#x2F;em&gt; no visibility into that from the outside.  For example, we can measure busyness by how many registered users each moderator needs to deal with.  By this measure, there&#x27;s significant variance, to say the least.  Take a look at this chart:&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt; Instance              &lt;&#x2F;th&gt;&lt;th align=&quot;right&quot;&gt; Users &lt;&#x2F;th&gt;&lt;th align=&quot;right&quot;&gt; Mods &lt;&#x2F;th&gt;&lt;th align=&quot;right&quot;&gt; Users per Mod &lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt; &lt;a href=&quot;https:&#x2F;&#x2F;fosstodon.org&#x2F;about&quot;&gt;fosstodon.org&lt;&#x2F;a&gt;     &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt;   1,138 &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt;  4  &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt;     285  &lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;a href=&quot;https:&#x2F;&#x2F;toot.cafe&quot;&gt;toot.cafe&lt;&#x2F;a&gt;                   &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt;   2,033 &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt;  1  &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt;   2,033  &lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;a href=&quot;https:&#x2F;&#x2F;mastodon.cloud&#x2F;about&quot;&gt;mastodon.cloud&lt;&#x2F;a&gt;   &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt;  48,939 &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt;  1  &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt;  48,939  &lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt; &lt;a href=&quot;https:&#x2F;&#x2F;mastodon.social&#x2F;about&quot;&gt;mastodon.social&lt;&#x2F;a&gt; &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt; 225,831 &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt;  4* &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt;  56,458  &lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;*mastodon.social is a bit of a special case, because it—unlike the other instances on this chart—pays its moderators.  So it&#x27;s reasonable to think that each moderator may be able to handle a slightly larger number of users.&lt;&#x2F;p&gt;
&lt;p&gt;As you can see, some instances are &lt;em&gt;already&lt;&#x2F;em&gt; asking moderators to deal with 100× more users than other instances are—some moderators are stretched much more thinly than others are.&lt;&#x2F;p&gt;
&lt;p&gt;I wish I could make that point with a longer chart, but I can&#x27;t—there&#x27;s absolutely no public information about the number of moderators per instance.&lt;&#x2F;p&gt;
&lt;p&gt;In a way, the brevity of this chart makes my second point for me: users should be able to determine how many moderation resources an instance has &lt;em&gt;before&lt;&#x2F;em&gt; they join an instance but cannot.  An instance with 100 users&#x2F;mod will provide a very different environment than an instance with 100,000 users&#x2F;mod—and the instance-picking UI should give users the ability to determine what sort of instance they might be joining &lt;em&gt;before&lt;&#x2F;em&gt; they sign up for an account.&lt;&#x2F;p&gt;
&lt;p&gt;This wouldn&#x27;t be hard: the Mastodon software already &amp;quot;knows&amp;quot; how many mods an instance has—it give mods a nice little badge on their profile page.  All it would need to do is add this info to the About page for each instance.  And that&#x27;s exactly what I propose:&lt;&#x2F;p&gt;
&lt;aside&gt;
  &lt;p&gt;&lt;strong&gt;Proposal:&lt;&#x2F;strong&gt; The About page for each instance should be modified to show the current number of moderators underneath the current number of registered users.  This would help vulnerable users select instances that have sufficient moderation resources available.&lt;&#x2F;p&gt;
&lt;&#x2F;aside&gt;
&lt;p&gt;I created an &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tootsuite&#x2F;mastodon&#x2F;issues&#x2F;8557&quot;&gt;issue&lt;&#x2F;a&gt; suggesting this as a feature.  If you agree that it would be useful, please feel free to (respectfully) join the discussion surrounding that issue.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dealing-with-growth&quot;&gt;Dealing with growth&lt;&#x2F;h2&gt;
&lt;p&gt;The change suggested above would go a long way to helping direct users to instances with a greater ability to moderate their community.  However, it wouldn&#x27;t address the issue of communities that simply outgrow their current moderation ability.&lt;&#x2F;p&gt;
&lt;p&gt;However, growth in the community can—and should—lead to growth in the community&#x27;s ability to self-regulate, at least in most cases.  For example, my home instance (&lt;a href=&quot;https:&#x2F;&#x2F;fostodon.org&quot;&gt;fosstodon.org&lt;&#x2F;a&gt;) has grown from ~300 users when I joined to over 1,100 users now. But, during that same time, we also increased from 2 mods to 4 (each in a significantly different timezone).&lt;&#x2F;p&gt;
&lt;p&gt;I don&#x27;t want to praise my home instance &lt;strong&gt;too&lt;&#x2F;strong&gt; much, but I believe that this provides a good model for how growth ought to be handled—an increase in the population of the instance ought to also increase the number of responsible users who will volunteer to serve as instance moderators.&lt;&#x2F;p&gt;
&lt;p&gt;But there&#x27;s a huge flaw in this model: what if the instance doesn&#x27;t grow because there&#x27;s a gradual increase in users (some of whom will become mods)?  What if the instance grows because a &lt;em&gt;single&lt;&#x2F;em&gt; user joins the instance, but that user has a huge number of followers?  Specifically, what happens when (not if) celebrities decide to join relatively small fediverse instances?&lt;&#x2F;p&gt;
&lt;p&gt;I believe that instance should all give some thought to that issue, because the answer might be different for each one.  Some instances might be large enough—or interested enough in growth—that they&#x27;d welcome celebrities.  For example, if some major figure in the Free Software world were to join fosstodon.org, I imagine that we would welcome them with open arms—it would be great to grow our community and I imagine that we&#x27;d have more than enough responsible users who are willing to step up to handle any increase in the amount of moderation needed.&lt;&#x2F;p&gt;
&lt;p&gt;Other instances, however, might be so small or niche that they would prefer celebrities chose another instance.  It that &lt;em&gt;is&lt;&#x2F;em&gt; the case, then the instance should clearly state in the Code of Conduct that high-follower accounts are not supported by their instance.  Although I&#x27;m glad that fosstodon is widely welcoming, I don&#x27;t believe that instances have a &lt;em&gt;duty&lt;&#x2F;em&gt; to be that welcoming, and it seems entirely permissible for an instance to state that it&#x27;s not designed to accommodate users with extremely large numbers of followers.  However, I think it&#x27;s &lt;em&gt;essential&lt;&#x2F;em&gt; that this be spelled out in a code of conduct &lt;em&gt;in advance&lt;&#x2F;em&gt;—we should never get into a situation where a user signs up in a way that doesn&#x27;t violate the CoC, uses the instance in a way that doesn&#x27;t violate the CoC, and then is told that they&#x27;re not welcome because of something that was true about them all along.&lt;&#x2F;p&gt;
&lt;p&gt;Those are the two ends of the spectrum—welcoming celebrities and banning them entirely.  But, of course, there&#x27;s also a middle ground—and, I suspect that many instances might fall into that middle ground.  For example, instances might state in their Code of Conduct that they would be open to celebrities &lt;em&gt;if&lt;&#x2F;em&gt; those celebrities recognize that they&#x27;re creating more work and are willing to contribute in some way—either financially or otherwise.  For example, a CoC could state&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;High-Follower Accounts&lt;&#x2F;strong&gt;:  Moderating this instance requires significant expenditures of time and effort from our moderators and administrators, all of whom are volunteers.  Moreover, the amount of effort moderation requires is a function not only of the number of users on this instance but also a function of the number of followers those users have.  Accordingly, any users who have a disproportionately high number of followers (e.g., significantly more followers than the total number of users in this instance) will be asked to contribute to the health of the instance.  High follower users who cannot or will not contribute to the health of the instance may be asked to leave the instance.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;No matter where instances fall on this spectrum between allowing high-follower accounts without restriction and banning them entirely, it is &lt;em&gt;imparative&lt;&#x2F;em&gt; that instances think about these issues &lt;em&gt;in advance&lt;&#x2F;em&gt;.  If we think about how to handle the situation, then we can make sure we have the resources to handle it, and we can make any changes to the Code of Conduct that might be necessary.  We can also calmly discuss the issue as a group without passions being inflamed by the particulars of a certain situation.&lt;&#x2F;p&gt;
&lt;p&gt;This leads to my second proposal:&lt;&#x2F;p&gt;
&lt;aside&gt;
  &lt;p&gt;&lt;strong&gt;Proposal&lt;&#x2F;strong&gt;: Instances should think carefully—in advance—about how to handle any celebrity&#x2F;high-follower accounts that might be opened in their instance.  If necessary, instances should update their Codes of Conduct to address the issue of high-follower accounts.&lt;&#x2F;p&gt;
&lt;&#x2F;aside&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;Protecting our communities from organized groups outside the instance isn&#x27;t an easy problem.  I think that technical solutions that give admins a more powerful set of tools will be part of the solution.  And I think that technical changes that impose rate limits on abusive actions by groups will also be part of the solution.&lt;&#x2F;p&gt;
&lt;p&gt;But I strongly believe that we should also do more to direct new users to those instances that have more moderation bandwidth—and we can do that by listing the number of mods on the instance About page.  I also believe that each instance should give more thought to how to handle sudden growth—particularly the sudden growth that comes from a high-follower account joining the instance.  Because this isn&#x27;t going to be the last time the fediverse confronts the issue, and we need good mechanisms to deal with it when it comes up again.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Gtypist Lesson Focusing on Programming Keys</title>
                <pubDate>Wed, 29 Aug 2018 00:00:00 +0000</pubDate>
                <link>https://www.codesections.com/blog/gtypist/</link>
                <guid>https://www.codesections.com/blog/gtypist/</guid>
                <description>&lt;p&gt;Just published a &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;codesections&#x2F;gtypist_programming_characters&quot;&gt;gtypist lesson&lt;&#x2F;a&gt;.
The README is below.&lt;&#x2F;p&gt;
&lt;p&gt;GNU&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;gtypist&#x2F;&quot;&gt;gtypist program&lt;&#x2F;a&gt; is a great
way for Linux users to improve their typing speed right from the command
line, and is widely available for every distribution. I personally used
it extensively when I switched from practicing law to programming and
discovered that the keyboard was full of keys I&#x27;d basically never needed
before.  (If you need convincing of the importance of typing speed to
programming, please see the post&lt;a href=&quot;https:&#x2F;&#x2F;steve-yegge.blogspot.com&#x2F;2008&#x2F;09&#x2F;programmings-dirtiest-little-secret.html&quot;&gt;Programming&#x27;s Dirtiest Little
Secret&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;However, despite fitting so perfectly into a programming&#x2F;command-line
workflow, gtypist doesn&#x27;t actually have a lot of content focused on
programmer-specific keys.  This lesson fills that gap.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This series of eleven lessons focuses on special character keys that
are not covered much in the previous lessons but that are useful for
programming.  Specifically, it reviews the following keys (which were
previously covered):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;! @ # $ % ^ &amp;amp; * ( ) ? &#x2F; &amp;quot; &#x27; :&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;and it introduces the following keys:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;+ - _ = &amp;gt; &amp;lt; { } ] [ &#96; ~ \ |&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;The first two lessons are review; the next six introduce the new keys,
and the final three provide long-form practice.  Where possible, the
lessons that introduce new keys include typing exercises consisting of
actual code, since that is where these characters will see the most use.&lt;br &#x2F;&gt;
The three long-form practice exercises contain, respectively, a serries
of &amp;quot;Hello, World!&amp;quot; programs in a variety of languages, an excerpt from
a malloc program (written in C) and the entirety of a very simple
compiler (written in JavaScript).&lt;&#x2F;p&gt;
&lt;p&gt;At the moment, the programming samples are biased towards languages with
C-like syntax—please feel free to submit a pull request if you would
like other languages to be featured more prominently.&lt;&#x2F;p&gt;
&lt;p&gt;I submitted this lesson as a patch to the gtypist mailing list and received
positive feedback; it is possible that it will be included in the base
installation at some point.  However, gtypist is not under extremely
active development, so I decided to post it here in the meantime.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;&#x2F;h1&gt;
&lt;p&gt;Running this lesson requires gtypist, which is available from nearly all
package managers of directly from the &lt;a href=&quot;https:&#x2F;&#x2F;www.gnu.org&#x2F;software&#x2F;gtypist&#x2F;&quot;&gt;gtypist website&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;After installing gtypist, you can run this file by following gtypist&#x27;s
directions for running an external typing script.  Specifically, download
the &lt;code&gt;p.typ&lt;&#x2F;code&gt; file to a directory of your choice and then add
the path to the file as a final argument to gtypist.  If you would
prefer not to type the full path to the script file, you can copy it
to the same directory that holds gtypist&#x27;s other lessons (usually
&lt;code&gt;&#x2F;usr&#x2F;share&#x2F;gtypist&lt;&#x2F;code&gt; or &lt;code&gt;&#x2F;usr&#x2F;local&#x2F;share&#x2F;gtypist&lt;&#x2F;code&gt;).  After doing so,
you can run the lesson by supplying just the filename as a final argument
to gtypist.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Sending Keybase Chats Using Vim</title>
                <pubDate>Fri, 24 Aug 2018 00:00:00 +0000</pubDate>
                <link>https://www.codesections.com/blog/sending-keybase-chats-with-vim/</link>
                <guid>https://www.codesections.com/blog/sending-keybase-chats-with-vim/</guid>
                <description>&lt;p&gt;I cannot spell.  Like, was-sent-to-special-classes-as-a-child-and-they-gave-up-on-me cannot spell.  Luckily, this isn&#x27;t an issue 99% of the time as an adult, because I&#x27;m never asked to operate in an environment without a spellcheck.  Except … I just started using keybase.io&#x27;s chat program, and it doesn&#x27;t check spelling.  Clearly, this needed to be fixed.&lt;&#x2F;p&gt;
&lt;p&gt;I found a way to fix it: I now write my chat messages in Vim and then pipe them to keybase chat.  I thought this would be a pretty rare use case (how many other people &lt;em&gt;really&lt;&#x2F;em&gt; care about spelling, or want to edit one-line chat messages in Vim?)  But a number of people expressed interest, so I decided to write this post as a how-to.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ll give you the tl;dr how-to version quickly, and then I&#x27;ll walk though what we&#x27;re doing in a little more detail and talk about how you could customize it for your use-case.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;how-to&quot;&gt;How To&lt;&#x2F;h2&gt;
&lt;p&gt;First, you&#x27;ll need to have the keybase app installed, which will automatically install their command-line client.  If you don&#x27;t have it, you can get it from &lt;a href=&quot;https:&#x2F;&#x2F;keybase.io&#x2F;download&quot;&gt;their website&lt;&#x2F;a&gt;. And you&#x27;ll obviously need vim&#x2F;neovim installed too.&lt;&#x2F;p&gt;
&lt;p&gt;Next, add this bit of code to your &lt;code&gt;.vimrc&lt;&#x2F;code&gt; file (or &lt;code&gt;~&#x2F;.config&#x2F;nvim&#x2F;init.vim&lt;&#x2F;code&gt; file for Neovim users).&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#859900;&quot;&gt;augroup&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; keybase
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;autocmd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;!
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;autocmd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;BufNewFile,BufRead &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;keybase-outbox&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;* let&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; conversation = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;expand&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&amp;#39;%:e&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;autocmd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;BufNewFile,BufRead &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;keybase-outbox&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;* inoremap &amp;lt;CR&amp;gt; &amp;lt;esc&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;:w&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;lt;CR&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;:!keybase chat send &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;lt;C-R&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=conversation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;lt;CR&amp;gt; &amp;lt; %&amp;lt;CR&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;ddi
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;autocmd &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;BufNewFile,BufRead &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;keybase-outbox&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;* nnoremap &amp;lt;leader&amp;gt;&amp;lt;CR&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; :w&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;lt;CR&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;:!keybase chat send &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;lt;C-R&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=conversation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;lt;CR&amp;gt; &amp;lt; %&amp;lt;CR&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;ddi
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;augroup&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; END
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Then, to send a chat message to a keybase use vim to open a file with the filename &lt;code&gt;keybase-outbox.&amp;lt;USERNAME&amp;gt;&lt;&#x2F;code&gt; (so, if you wanted to message me, you&#x27;d type &lt;code&gt;vim keybase-outbos.codesections&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;Type your message and then (while still in insert mode) hit enter to send it (just like you would in a chat client).  Or, if you&#x27;re in normal mode, hit &lt;code&gt;&amp;lt;leader&amp;gt;&lt;&#x2F;code&gt; and then enter.  This will send your chat, clear the file, and drop you back into insert mode, ready to type your next message.&lt;&#x2F;p&gt;
&lt;aside&gt;
  &lt;p&gt;Note that this doesn&#x27;t display your chat messages in vim&#x2F;the terminal.  I&#x27;m sure you could do that if you really want to live in the terminal (using the &lt;code&gt;keybase chat read&lt;&#x2F;code&gt; in a loop should do the trick) but that&#x27;s not the exercise here.  I still have the keybase app up in a split-screen window with Vim next to it.&lt;&#x2F;p&gt;
&lt;&#x2F;aside&gt;
&lt;h2 id=&quot;the-details&quot;&gt;The Details&lt;&#x2F;h2&gt;
&lt;p&gt;How does this work?  Well, I don&#x27;t claim to be a vimsrcipt master (I&#x27;m still halfway through &lt;a href=&quot;http:&#x2F;&#x2F;learnvimscriptthehardway.stevelosh.com&#x2F;&quot;&gt;Learn Vimscript the Hard Way&lt;&#x2F;a&gt; and probably won&#x27;t get around to finishing it for quite some time).  But here&#x27;s what&#x27;s going on:&lt;&#x2F;p&gt;
&lt;p&gt;First, we create a group of commands to be run automatically, and we tell Vim to run those commands whenever the filename includes the string &amp;quot;keybase-outbox&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;What does this command do?  Well, first, the command looks at the current file (&lt;code&gt;%&lt;&#x2F;code&gt;) and grabs its extension (&lt;code&gt;:e&lt;&#x2F;code&gt;).  It then saves this extension to the variable &lt;code&gt;conversation&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Next, these commands cause Vim to remap enter in insert mode and &lt;code&gt;&amp;lt;leader&amp;gt;&lt;&#x2F;code&gt; enter in normal mode.  Each of these keys now saves the current file (&lt;code&gt;:w&amp;lt;CR&amp;gt;&lt;&#x2F;code&gt;) and then runs a terminal command (&lt;code&gt;:!&lt;&#x2F;code&gt;).  That terminal command invokes the keybase cli and tells it to send a chat message (&lt;code&gt;keybase chat send&lt;&#x2F;code&gt;).&lt;&#x2F;p&gt;
&lt;p&gt;At this point, we need to specify the target of the chat message.  To do that, we
need to get at the variable we&#x27;ve saved—but we can&#x27;t access it directly within the ex command we&#x27;re running.  So, instead, we invoke the &lt;a href=&quot;http:&#x2F;&#x2F;vimcasts.org&#x2F;episodes&#x2F;simple-calculations-with-vims-expression-register&#x2F;&quot;&gt;expression register&lt;&#x2F;a&gt; (&lt;code&gt;&amp;lt;C-R&amp;gt;=&lt;&#x2F;code&gt;) and give it the name of our variable.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, we pipe in the contents of the current file (&lt;code&gt;&amp;lt; %&lt;&#x2F;code&gt;) and enter our command.  This sends the message.&lt;&#x2F;p&gt;
&lt;p&gt;After this, we&#x27;re just dealing with some cleanup.  We clear the current line (&lt;code&gt;dd&lt;&#x2F;code&gt;) and drop back into insert mode (&lt;code&gt;i&lt;&#x2F;code&gt;) so that we can send our next message.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;potential-tweaks&quot;&gt;Potential Tweaks&lt;&#x2F;h2&gt;
&lt;p&gt;This setup is optimized for sending one-line chat messages: since we&#x27;ve remapped enter in insert mode, it&#x27;s very difficult to send multi-line messages. If you prefer to send longer messages, you might want to remove the insert-mode mapping and change the script to delete the whole message instead of just the current line. (&lt;code&gt;ggdG&lt;&#x2F;code&gt; should do the trick).&lt;&#x2F;p&gt;
&lt;p&gt;Conversely, you might want to keep your sent message until you manually delete it, in which case you can just cut the part of autocmd that deletes the current line.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;notes&quot;&gt;Notes&lt;&#x2F;h2&gt;
&lt;p&gt;A few important notes.  Less importantly: because this command saves the file, it will leave behind a file with the name you gave it.  This doesn&#x27;t bother me; I just keep them in a &lt;code&gt;keybase-chat&lt;&#x2F;code&gt; directory and can then tab-complete to open them again later.  But if they annoy you, just remember to delete them.&lt;&#x2F;p&gt;
&lt;p&gt;More importantly, depending on your threat model, their could be security risks to using this approach.  Keybase doesn&#x27;t lack a spellcheck because the devs are &lt;em&gt;lazy&lt;&#x2F;em&gt;—they kept it out because they were concerned about security risks of sending keystrokes outside the program.  Here, we&#x27;re definitely doing that, and even keeping them in Vim&#x27;s swap files (if you haven&#x27;t changed that setting).  So, if you&#x27;re at all concerned about the security of your local machine, this may not be the best approach for sensitive content.&lt;&#x2F;p&gt;
&lt;p&gt;But, with those caveats, this should let you use Vim to edit your chat messages.  Hope this is helpful!&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Mastodon Is Better than Twitter: Elevator Pitch</title>
                <pubDate>Thu, 26 Jul 2018 00:00:00 +0000</pubDate>
                <link>https://www.codesections.com/blog/mastodon-elevator-pitch/</link>
                <guid>https://www.codesections.com/blog/mastodon-elevator-pitch/</guid>
                <description>&lt;p&gt;Mastodon is a newcomer social media platform that is a lot like Twitter—short
messages, followers, hashtags, all that.  But Mastodon is much better than Twitter,
and not just because being totally ad-free and keeping chronological timelines make
it far more enjoyable to use (though that certainly helps!).&lt;&#x2F;p&gt;
&lt;p&gt;All that is nice, but the real advantage Mastodon has over Twitter is that
Mastodon is &lt;strong&gt;not&lt;&#x2F;strong&gt; an &lt;a href=&quot;http:&#x2F;&#x2F;shamusyoung.com&#x2F;twentysidedtale&#x2F;?p=41853&quot;&gt;outrage machine that&#x27;s corroding our ability to view
our politic opponents as real humans, deserving of sympathy and
understanding&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;To explain how much better Mastodon is, I&#x27;m going to give you three examples of
&lt;strong&gt;how&lt;&#x2F;strong&gt; Mastodon is better, and then I&#x27;ll step back and talk about &lt;strong&gt;why&lt;&#x2F;strong&gt;
Mastodon is better.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;from-retweets-to-boosts&quot;&gt;From Retweets to Boosts&lt;&#x2F;h2&gt;
&lt;p&gt;One of the most pernicious parts of Twitter is how people will retweet something
dumb, offensive, or awful that an opponent said, along with a message mocking that
opponent.  Over time, this leads people on all sides of an issue to see only a
distorted caricature of their opponents, comprised of an amalgam of all the worst
features of that group.  (This phenomenon of cherry-picking the worst bits of an
opposing group &lt;a href=&quot;http:&#x2F;&#x2F;slatestarcodex.com&#x2F;2014&#x2F;05&#x2F;12&#x2F;weak-men-are-superweapons&#x2F;&quot;&gt;exists independently of
Twitter&lt;&#x2F;a&gt;, but
Twitter makes it much, much worse.)&lt;&#x2F;p&gt;
&lt;p&gt;How does Mastodon solve this issue?  Well, Mastodon doesn&#x27;t have retweets; it has
&amp;quot;boosts&amp;quot;.  Boosts are essentially like retweets, with one key difference: there&#x27;s
no option to add your own commentary.  You simply &lt;em&gt;can&#x27;t&lt;&#x2F;em&gt; post something awful with
a message saying how awful it is—all you can do is boost something awful without
commentary.  What&#x27;s more, the name itself—&amp;quot;boost&amp;quot;—draws attention to a fact that
Twitter does its best to obscure: by boosting something you disagree with, you&#x27;re
ultimately giving that viewpoint &lt;em&gt;more&lt;&#x2F;em&gt; exposure, not less.&lt;&#x2F;p&gt;
&lt;p&gt;As a result, Mastodon users basically never boost toots to say how wrong they are,
and there isn&#x27;t an issue with armies of followers descending on the original author.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;mastodon-is-local-while-still-being-global&quot;&gt;Mastodon Is Local (while still being global)&lt;&#x2F;h2&gt;
&lt;p&gt;With Twitter, everyone belongs to a single, global Twitter, with a single set of
moderation policies spanning every group individual on the service.  If you get
banned from Twitter, you&#x27;re banned from &lt;em&gt;all&lt;&#x2F;em&gt; of Twitter.&lt;&#x2F;p&gt;
&lt;p&gt;With Mastodon, you don&#x27;t really join Mastodon itself.  Instead, you join a particular
server (called an &amp;quot;instance&amp;quot;).  Your instance might have a few hundred people and a
moderator or two—just the right scale to keep the discussion civil without degenerating
into bureaucratic rules-lawyering.  And, because you get a &amp;quot;local&amp;quot; feed of all posts
on your instance in addition to posts from people you follow, your instance really
can start to feel like a community.  Finally, with instances, you keep control: if you
find that you don&#x27;t like the moderation policies or culture of a particular instance,
you&#x27;re always free to pick up and move to a different one.&lt;&#x2F;p&gt;
&lt;p&gt;This neatly solves Twitter&#x27;s huge problem with moderation—as Mastodon grows, the
number of mods will inherently scale with that growth.  Yet, even as their number
grows, they&#x27;ll stay part of (and accountable to) a relatively small community on their
home instance.&lt;&#x2F;p&gt;
&lt;p&gt;Of course, Mastodon would be pretty useless if it only let you talk to a few hundred
people, so it doesn&#x27;t impose that limit at all.  You can follow &lt;em&gt;anyone&lt;&#x2F;em&gt;, regardless
of what instance they call home.  The only difference is that if you have a problem
with them, then you&#x27;d complain to &lt;em&gt;their&lt;&#x2F;em&gt; instance&#x27;s moderators rather than to your
own.&lt;&#x2F;p&gt;
&lt;p&gt;So what stops people from setting up instances that allow for any sort of awful content
and then pestering the rest of us?  Well, they &lt;em&gt;can&lt;&#x2F;em&gt;, but Mastodon lets you or your
moderators decide to block entire instances.  If a particular instance won&#x27;t mind its
own users, then it will likely find that few other instances want anything to do with
it—or at least that it&#x27;s limited to equally laissez-faire instances.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;a-user-interface-that-encourages-thoughtfulness&quot;&gt;A User Interface that Encourages Thoughtfulness&lt;&#x2F;h2&gt;
&lt;p&gt;Mastodon&#x27;s user interface provides the very prominent option to hide a portion of
a post behind a screen that is only removed when and if the user chooses.  This is a
great format for hiding the punchline in jokes or concealing spoilers.  More
importantly, it&#x27;s also commonly used to hide controversial posts—including posts about
politics.&lt;&#x2F;p&gt;
&lt;p&gt;What this comes down to is &lt;strong&gt;control&lt;&#x2F;strong&gt;.  This pattern of tagging politics and letting
the reader decide whether they want to engage with them puts the reader back in control;
they can chose to engage with politics—and many do!  But if they don&#x27;t want to (or
don&#x27;t want to right now), they also have the option not to view those posts.  And
that&#x27;s not the only way the Mastodon UI puts the reader back in control; for example,
it also has very powerful options for hiding toots based on keywords to give you a
middle ground between unfollowing someone and seeing every toot they ever make.&lt;&#x2F;p&gt;
&lt;p&gt;Now, I acknowledge that some of this is just a cultural practice; having political toots
hidden is dependent on Mastodon users recognizing how corrosive political discussions
can be and opting to give their readers control over when and if they see those toots.
But it&#x27;s a cultural practice that the technology nudges people towards with good
user-interface design, and it&#x27;s a cultural practice that, at this point, is firmly
established.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-why-twitter-is-in-the-outrage-business-mastodon-isn-t-a-business&quot;&gt;The Why: Twitter Is in the Outrage Business; Mastodon Isn&#x27;t a Business&lt;&#x2F;h2&gt;
&lt;p&gt;Twitter is a business that makes money (… er, &lt;em&gt;tries&lt;&#x2F;em&gt; to make money) by selling ads.
To maximize ad revenue, they want to keep you on Twitter for as long as they possibly
can, which means making sure their content is as engaging as possible.&lt;&#x2F;p&gt;
&lt;p&gt;But often, tweets are at their most engaging when they&#x27;re at their most enraging.
Any tweet that keeps people clicking and talking—even if they&#x27;re talking about how
awful the other side is—is a tweet that keeps people around to view ads.  Outrage
is good for Twitter&#x27;s bottom line.&lt;&#x2F;p&gt;
&lt;p&gt;And that&#x27;s why Twitter isn&#x27;t—and will never be—as healthy a community as Mastodon is.
Mastodon&#x27;s innovations aren&#x27;t &lt;em&gt;technologically&lt;&#x2F;em&gt; that challenging (I mean, a lot of the
tech is pretty cool, but it&#x27;s nothing Twitter couldn&#x27;t copy if they really wanted to).
No, the reason that Mastodon has all these advantages is that they &lt;em&gt;aren&#x27;t&lt;&#x2F;em&gt; advantages
from Twitter&#x27;s perspective.  From Twitter&#x27;s perspective, anything that makes people
less likely to angrily retweet a rival&#x27;s obnoxious view is a loss, pure and simple.&lt;&#x2F;p&gt;
&lt;p&gt;And Twitter doesn&#x27;t have any choice in the matter, either.  Even if they wanted to
sacrifice their ad revenues out of a desire to improve the quality of public discourse,
they couldn&#x27;t.  Twitter is a public company, funded by investor money; they thus owe
a legal duty to make as much money for their investors as they can.  Twitter can&#x27;t,
and won&#x27;t, stop prioritizing ad revenue.&lt;&#x2F;p&gt;
&lt;p&gt;Mastodon, on the other hand, isn&#x27;t profit motivated and never will be.  At the top,
Mastodon is a small, open-source project &lt;a href=&quot;https:&#x2F;&#x2F;www.patreon.com&#x2F;mastodon&quot;&gt;funded on
Patreon&lt;&#x2F;a&gt;.  Mastodon can afford to stay small, because
it&#x27;s not trying to be centralized—the vast bulk of the work is being done by thousands
of small sys-admins across the globe running small instances of a few dozen or a few
hundred users.  And that part is sustainable too—running a small instance costs only a
few dollars a month, and is a rewarding gig: it comes with a lot of control, and a
privileged position to help craft a healthy community.  Mastodon&#x27;s entire model gets
its incentives right.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;joining&quot;&gt;Joining&lt;&#x2F;h2&gt;
&lt;p&gt;If this sounds at all appealing to you, I encourage you to check out Mastodon.  It&#x27;s
not perfect, and it might not fully replace Twitter if you&#x27;re a heavy user—if for no
other reason than that people you like to follow won&#x27;t (yet) have switched.  But the
community is really great, and growing quickly.  And I&#x27;ve had a blast with it since I
got involved. If you&#x27;d like to join, the main website,
&lt;a href=&quot;https:&#x2F;&#x2F;joinmastodon.org&#x2F;&quot;&gt;joinmastodon.org&lt;&#x2F;a&gt;, is full of good info.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;joinmastodon.org&#x2F;&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;mastodon-elevator-pitch&#x2F;mastodon_homepage.png&quot; alt=&quot;joinmastodon.org&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;You certainly don&#x27;t need to understand the details of how Mastodon works, but
if you would like a bit better understanding of how Mastodon works under the
hood, Mastodon user &lt;a href=&quot;https:&#x2F;&#x2F;fosstodon.org&#x2F;@kev&quot;&gt;@kev&lt;&#x2F;a&gt; wrote
&lt;a href=&quot;https:&#x2F;&#x2F;kevq.uk&#x2F;how-does-mastodon-work&#x2F;&quot;&gt;an excellent guide to Mastodon&lt;&#x2F;a&gt;.&lt;br &#x2F;&gt;
And, when you&#x27;re ready to pick an instance, there&#x27;s a great tool that
lets you search available instances at
&lt;a href=&quot;https:&#x2F;&#x2F;instances.social&#x2F;&quot;&gt;instances.social&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;My recommendation is to use that tool to find a few relatively small instances with
names that sound interesting to you. Then, click through and read about the culture
and moderation policies of each instance and maybe scan through the public posts to
get a sense of the local vibe.  And then dive right in—you can always change your
mind later.&lt;&#x2F;p&gt;
&lt;p&gt;On a personal note, if you happen to be interested in FOSS (Free and Open Source
Software), then I can personally vouch for the community at
&lt;a href=&quot;https:&#x2F;&#x2F;fosstodon.org&quot;&gt;fosstodon.org&lt;&#x2F;a&gt;.  And, on an even more personal note, whatever
instance you join, please feel free to look me up.  I&#x27;m
&lt;a href=&quot;https:&#x2F;&#x2F;fosstodon.org&#x2F;@codesections&quot;&gt;@codesections@fosstodon.org&lt;&#x2F;a&gt; and would love for
you to say hi.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Gutenberg quickstart 2: From &quot;Hello, World&quot; to macros</title>
                <pubDate>Tue, 24 Jul 2018 00:00:00 +0000</pubDate>
                <link>https://www.codesections.com/blog/gutenberg-quickstart-2/</link>
                <guid>https://www.codesections.com/blog/gutenberg-quickstart-2/</guid>
                <description>&lt;p&gt;When we left of, we&#x27;d just created a &amp;quot;Hello, World&amp;quot; website—nothing that fancy,
but enough to get a feel for the basic structure of Gutenberg&#x27;s templating
system.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;give-border&quot;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;v05--gutenberg-simple-demo.netlify.com&#x2F;&quot;&gt;&lt;img src=&quot;&#x2F;blog&#x2F;gutenberg-quickstart-1&#x2F;v5.png&quot; alt=&quot;v5 screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;codesections&#x2F;gutenberg-simple-demo&#x2F;tree&#x2F;v05&quot;&gt;source code&lt;&#x2F;a&gt;, as always, in the GitHub repo.)&lt;&#x2F;p&gt;
&lt;p&gt;Today, we&#x27;re going to dive in a bit deeper and take a look how we can use
Gutenberg&#x27;s templates to support a multi-page site.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;an-about-page&quot;&gt;An About page&lt;&#x2F;h2&gt;
&lt;p&gt;First, let&#x27;s create an About page for our demo site.  Before we do, though,
lets add a link to our new page from our homepage.  Add the following HTML to
your &lt;code&gt;index.html&lt;&#x2F;code&gt; file just after the body begins:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;nav&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Home&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;about&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;About&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;nav&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now that we have a link, lets make the page.  To do that, we&#x27;ll need a
template that applies to pages—right now, we only have the &lt;code&gt;index.html&lt;&#x2F;code&gt; template
but, as we talked about last time, that template &lt;em&gt;only&lt;&#x2F;em&gt; applies to the home page.&lt;&#x2F;p&gt;
&lt;p&gt;By default, all other pages are governed by the &lt;code&gt;page.html&lt;&#x2F;code&gt; template.  (Note
that I said &lt;em&gt;pages&lt;&#x2F;em&gt;, which are distinct from &lt;em&gt;sections&lt;&#x2F;em&gt;.  We&#x27;ll get to sections
next time.)  So, if we&#x27;re going to have an About page, we&#x27;re going to need a
&lt;code&gt;pages.html&lt;&#x2F;code&gt; template.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Next, we&#x27;ll need some content.  To create that content, navigate to your
&lt;code&gt;content&lt;&#x2F;code&gt; directory and create a new &lt;code&gt;about&lt;&#x2F;code&gt; folder.  Inside this folder, create
a file called &lt;code&gt;index.md&lt;&#x2F;code&gt; and give it this content (or something similar if you
want to experiment):&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#839496;&quot;&gt;+++
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;title = &amp;quot;About&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;+++
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Some details about this site.
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;aside&gt;
  You could skip creating the &#96;about&#96; folder and just create the file as
  &#96;about.md&#96; in your &#96;content&#96; directory.  Either way would create a page on 
  your site that lives at &#96;[BASE_URL]&#x2F;about&#96;.  The advantage of creating the
  &#96;about&#96; folder is that you can put images or other related files in that 
  folder and then easily link to them, which will be helpful as your site grows.
&lt;&#x2F;aside&gt;
&lt;p&gt;And that&#x27;s all it takes to have a second page up and running.  Fire up your
local server with &lt;code&gt;gutenberg serve&lt;&#x2F;code&gt; and you should get something like this,
with working links:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;give-border&quot;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;v06--gutenberg-simple-demo.netlify.com&#x2F;&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;gutenberg-quickstart-2&#x2F;v06.png&quot; alt=&quot;v06 screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;(&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;codesections&#x2F;gutenberg-simple-demo&#x2F;tree&#x2F;v06&quot;&gt;Source code&lt;&#x2F;a&gt;)&lt;&#x2F;p&gt;
&lt;h2 id=&quot;first-refactor&quot;&gt;First refactor&lt;&#x2F;h2&gt;
&lt;p&gt;While that definitely &lt;em&gt;worked&lt;&#x2F;em&gt;, there&#x27;s a lot about it that should have just
about any experienced web developer cringing.  Most notably, we have two
separate templates that are literally copies of one another with only a single
&lt;em&gt;word&lt;&#x2F;em&gt; changed between them.  This is about as blatant a violation of &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Don%27t_repeat_yourself&quot;&gt;don&#x27;t
repeat yourself&lt;&#x2F;a&gt; as
you could ever hope to find.&lt;&#x2F;p&gt;
&lt;p&gt;So, let&#x27;s fix that.  And, in the process, we&#x27;ll get to know another set of
Gutenberg&#x27;s key features: base templates, extends, and blocks.&lt;&#x2F;p&gt;
&lt;p&gt;To implement this, create another copy of &lt;code&gt;index.html&lt;&#x2F;code&gt;.  (Yes, I know we&#x27;re
trying to &lt;em&gt;reduce&lt;&#x2F;em&gt; the amount of copying, but just bear with me.)  You can
name this one whatever you like, so long as it has an &lt;code&gt;.html&lt;&#x2F;code&gt; extension.  I&#x27;ll
go with &lt;code&gt;base.html&lt;&#x2F;code&gt;.  Then, replace everything inside the body tag with&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;block &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;endblock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;What does that do?  It creates a &lt;code&gt;block&lt;&#x2F;code&gt; that has the name &amp;quot;content&amp;quot;.  What
this means is that any other file can extend &lt;code&gt;base.html&lt;&#x2F;code&gt; and substitute in
content inside that block.&lt;&#x2F;p&gt;
&lt;p&gt;Let&#x27;s set that up now.  Delete all the text in &lt;code&gt;index.html&lt;&#x2F;code&gt; and replace it
with the following:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;base.html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; %}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;block &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;section&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;safe &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;endblock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;You may be able to guess what this does: it tells Gutenberg that you want to
extend the &lt;code&gt;base.html&lt;&#x2F;code&gt; template, and that it should substitute in the stuff
inside the &amp;quot;content&amp;quot; block for the &amp;quot;content&amp;quot; block in &lt;code&gt;base.html&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;A few points are worth noting here:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;code&gt;extends&lt;&#x2F;code&gt; line must be the first line in the template.  As a direct
consequence, a template may only extend one parent template.&lt;&#x2F;li&gt;
&lt;li&gt;However, you can chain extensions—that is, another template could extend
&lt;code&gt;index.html&lt;&#x2F;code&gt; even though &lt;code&gt;index.html&lt;&#x2F;code&gt; is extending &lt;code&gt;base.html&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Templates can have more than one &lt;code&gt;block&lt;&#x2F;code&gt;.  For example, I will frequently
have at least three blocks in my &lt;code&gt;base.html&lt;&#x2F;code&gt;: &lt;code&gt;page_speciffic_css&lt;&#x2F;code&gt;,
&lt;code&gt;content&lt;&#x2F;code&gt;, and &lt;code&gt;page_specific_js&lt;&#x2F;code&gt;.  That lets me easily add in any of
those elements if necessary in a child template.&lt;&#x2F;li&gt;
&lt;li&gt;Blocks can have default values in the parent template.  For instance,
if you had put &amp;quot;Hello, World!&amp;quot; inside the &amp;quot;content&amp;quot; template in
&lt;code&gt;base.html&lt;&#x2F;code&gt;, then that text would be displayed whenever you extended
&lt;code&gt;base.html&lt;&#x2F;code&gt; but &lt;em&gt;did not&lt;&#x2F;em&gt; provide replacement text for the &amp;quot;content&amp;quot;
block.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Let&#x27;s make the same changes in &lt;code&gt;page.html&lt;&#x2F;code&gt;.  Just like with &lt;code&gt;index.html&lt;&#x2F;code&gt;, we
can delete the entirety of our current text and replace it with&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;base.html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; %}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;block &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;page&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;safe &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;endblock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We haven&#x27;t changed our rendered HTML at all—as you can confirm with
&lt;code&gt;gutenberg serve&lt;&#x2F;code&gt;, but we&#x27;ve moved our source HTML into a single file, which
will make it much easier to maintain.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dealing-with-the-css&quot;&gt;Dealing with the CSS&lt;&#x2F;h2&gt;
&lt;p&gt;While we&#x27;re refactoring, let&#x27;s deal with the CSS.  This tutorial isn&#x27;t about
coding CSS, so we won&#x27;t refactor the actual code.  But let&#x27;s at least get it
out of a &lt;code&gt;&amp;lt;style&amp;gt;&lt;&#x2F;code&gt; tag mixed in with our HTML.&lt;&#x2F;p&gt;
&lt;p&gt;Now, at this point there are two directions you could go.  The more standard
way to go would be to replace your inline CSS with a &lt;code&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot;&amp;gt;&lt;&#x2F;code&gt;
tag and put our CSS in an external file.  Gutenberg supports going this route,
and even comes with built-in support for compiling your CSS from Sass files.&lt;br &#x2F;&gt;
If you want to do this, just create &lt;code&gt;.sass&lt;&#x2F;code&gt; or &lt;code&gt;.scss&lt;&#x2F;code&gt; files in your &lt;code&gt;sass&lt;&#x2F;code&gt;
directory.  Then, during site build, those files will be automatically compiled
to your static directory and can be linked from your HTML files.  If you want
more information on going that route, the
&lt;a href=&quot;https:&#x2F;&#x2F;www.getgutenberg.io&#x2F;documentation&#x2F;content&#x2F;sass&#x2F;&quot;&gt;docs&lt;&#x2F;a&gt; are
helpful as always.&lt;&#x2F;p&gt;
&lt;p&gt;However, in this guide I&#x27;m going to demonstrate going another way.  We&#x27;re going
to include CSS inline in our built file, but break it out into a separate file
in our source.  This gives us most of the advantages of splitting our CSS out
into a separate file—we separate our concerns, and we can link the same CSS
file from multiple HTML pages—without paying the cost of additional HTTP
requests that can unnecessarily slow down sites load their CSS with external
requests.  The only disadvantage to this approach is that CSS isn&#x27;t cached,
which matters for sites loading large quantities of CSS (e.g.,
&lt;a href=&quot;https:&#x2F;&#x2F;getbootstrap.com&#x2F;&quot;&gt;bootstrap&lt;&#x2F;a&gt;) but doesn&#x27;t matter at all when we&#x27;re
loading only a KB or so.&lt;&#x2F;p&gt;
&lt;p&gt;Now that we&#x27;ve picked our approach, how do we do it?  Simple.  We move our
CSS into a separate template file, which I&#x27;ll call &lt;code&gt;css.html&lt;&#x2F;code&gt;.  So that file
should look like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#b58900;&quot;&gt;body &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;auto;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;max-width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;650&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;line-height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1.6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;font-size&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;18&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#444&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;padding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0 10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;h2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;h3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;line-height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1.2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;(Depending on your text editor, you may need to tell it to apply CSS syntax
highlighting to this file.)&lt;&#x2F;p&gt;
&lt;p&gt;Then, replace the CSS that was in your &lt;code&gt;base.html&lt;&#x2F;code&gt; with the single line
&lt;code&gt;{% include &amp;quot;css.html&amp;quot; %}&lt;&#x2F;code&gt;.  Including files really is that easy.&lt;&#x2F;p&gt;
&lt;p&gt;If you&#x27;d like to see the source code for where we are now, it&#x27;s in the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;codesections&#x2F;gutenberg-simple-demo&#x2F;tree&#x2F;v07&quot;&gt;GitHub repo&lt;&#x2F;a&gt;.
You can also check out the &lt;a href=&quot;https:&#x2F;&#x2F;v07--gutenberg-simple-demo.netlify.com&#x2F;&quot;&gt;live site&lt;&#x2F;a&gt;, though note that it won&#x27;t have changed at all.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;even-better-system-for-css&quot;&gt;Even better system for CSS&lt;&#x2F;h2&gt;
&lt;p&gt;I wanted to show you how to &lt;code&gt;include&lt;&#x2F;code&gt; files because it&#x27;s simple, useful, and
good enough for many use cases.  But I also want to take a moment to explore
&lt;code&gt;macros&lt;&#x2F;code&gt;, which are far more powerful and are one of Gutenberg&#x27;s killer
features.  In fact, I recommend using macros to handle your CSS.&lt;&#x2F;p&gt;
&lt;p&gt;But first, let&#x27;s make our CSS just a &lt;em&gt;little&lt;&#x2F;em&gt; more advanced so that we can
see the power of macros when dealing with our CSS.  Lets add a bit of CSS
that applies only to our homepage, not to our About page.&lt;&#x2F;p&gt;
&lt;p&gt;Imagine you want the following CSS to apply to the homepage:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#b58900;&quot;&gt;h1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;text-align&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: center;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#85144b &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;* maroon *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now, we &lt;em&gt;could&lt;&#x2F;em&gt; do this with includes—we could put this in a separate file,
and then &lt;code&gt;include&lt;&#x2F;code&gt; it in our &lt;code&gt;index.html&lt;&#x2F;code&gt; file, but not in our &lt;code&gt;base.html&lt;&#x2F;code&gt;
file or our &lt;code&gt;page.html&lt;&#x2F;code&gt; file.  But, though this would work, it could get a
bit messy—we&#x27;d need to artificially split our CSS into separate files even
when, as in this case, the size&#x2F;complexity doesn&#x27;t justify it.&lt;&#x2F;p&gt;
&lt;p&gt;Luckily, macros give us a better option.  Here&#x27;s what you do: rename &lt;code&gt;css.html&lt;&#x2F;code&gt;
to &lt;code&gt;css_macros.html&lt;&#x2F;code&gt; (optional, but recommended).  Then, update it to have
the following content:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;macro &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;global_styles&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;() %}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;body {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;margin: 40px auto;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;max-width: 650px;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;line-height: 1.6;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;font-size: 18px;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;color: #444;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;padding: 0 10px
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;h1,h2,h3 {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;line-height: 1.2;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;endmacro &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;global_styles &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;macro &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;homepage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;() %}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;h1 {
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;text-align: center;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;color: #85144b &#x2F;* maroon *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;endmacro &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;homepage &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Then revise your &lt;code&gt;base.html&lt;&#x2F;code&gt; file to look like the following:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;css_macros.html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;as css &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;DOCTYPE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Gutenberg Demo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;charset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;UTF-8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;style&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{{ css::global_styles() }}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% block page_specific_styles %}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% endblock page_specific_styles %}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;style&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;nav&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Home&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;about&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;About&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;nav&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;block &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;endblock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As you can see, it now starts with an &lt;code&gt;import&lt;&#x2F;code&gt; line, which imports the macro
and then calls the macro inside the &lt;code&gt;&amp;lt;style&amp;gt;&lt;&#x2F;code&gt; tag.  It also now has a second
block, a possibility we mentioned above.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, update your &lt;code&gt;index.html&lt;&#x2F;code&gt; file to the following:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;base.html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; %}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;import &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;css_macros.html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;as css &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;block &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;page_specific_styles &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;css&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;::&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;homepage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;() }}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;endblock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;page_specific_styles &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;block &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;section&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;safe &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;endblock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And now, launch the live site.  If all goes well, you&#x27;ll have a site that&#x27;s
only slightly changed from when you were using includes, but that is now
powered by the full strength of macros.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;give-border&quot;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;v08--gutenberg-simple-demo.netlify.com&#x2F;&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;gutenberg-quickstart-2&#x2F;v08.png&quot; alt=&quot;v08 screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;aside&gt;
  &lt;p&gt;Why are macros better than includes here?  A few reasons:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Explicit dependencies&lt;&#x2F;strong&gt;: using macros puts all your &lt;code&gt;import&lt;&#x2F;code&gt; statements in a single location at the top of your code.  Conversely, &lt;code&gt;include&lt;&#x2F;code&gt; statements are scattered throughout your file, which can make it harder
to see what&#x27;s there.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Namespacing&lt;&#x2F;strong&gt;: Notice how we called both of our CSS macros using the prefix &lt;code&gt;css::&lt;&#x2F;code&gt;?  Macros give you a built-in way to namespace your functionality without needing to rename files or created a more complicated directory structure.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;File organization&lt;&#x2F;strong&gt;: As mentioned, macros give us the freedom to organize our files however makes sense for the scope of our project.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Power&lt;&#x2F;strong&gt;: We&#x27;re not using the full power of macros here—they can become much more powerful and flexible when you start passing in arguments.  Getting used to macros in this simple case will help when you need their more powerful features.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;aside&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;Ok, that&#x27;s it for now.  We&#x27;ve gone from a single-page, single template site
to a multi-page site making full use of multiple templates, separate CSS files,
and the power of macros.  Next time, we&#x27;ll dive into sections and look at
iterating through Gutenberg pages—we&#x27;ll add a blog to our example site.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>How to avoid SEO penalties when using Netlify</title>
                <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
                <link>https://www.codesections.com/blog/netlify/</link>
                <guid>https://www.codesections.com/blog/netlify/</guid>
                <description>&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;&#x2F;h2&gt;
&lt;p&gt;I&#x27;ve been really happy with my Netlify hosting.  It&#x27;s fast, free, and deploys
my site on a global CDN.  Even better, Netlify has all sorts of advanced
deploy previews and other features that I&#x27;m only starting to play with.&lt;&#x2F;p&gt;
&lt;p&gt;All that said, today I realized that one consequence of how Netlify does things
is that sites could end up penalized by Google and other search engines.&lt;br &#x2F;&gt;
Specifically, because Netlify makes multiple versions of your site available,
your site could be penalized for having &amp;quot;duplicate content&amp;quot;—the same penalty
that search engines apply to content mills that steal other people&#x27;s work and
repost it as their own.&lt;&#x2F;p&gt;
&lt;aside&gt;
I have no interest in playing SEO games or trying to get my site ranked
more highly than it organically would be.  I basically figure that the way
to get more readers is to write things that people want to read.  Plus, it&#x27;s
not like I&#x27;m planing to add ads to the site or profit off my readers in any
way.  At the same time, however, I don&#x27;t want simple mistakes to make my 
content harder to find for those who are interested in it.
&lt;&#x2F;aside&gt;
&lt;p&gt;What is the problem, exactly?  Well, with default settings Netlify makes
every page available as a page on your domain &lt;em&gt;and&lt;&#x2F;em&gt; as a page in a subdomain
inside Netlify.com.  So, for example, the page you are reading right now
would be available by default at both
&lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;netlify&quot;&gt;www.codesections.com&#x2F;blog&#x2F;netlify&lt;&#x2F;a&gt; and at
&lt;a href=&quot;https:&#x2F;&#x2F;codesections.netlify.com&#x2F;blog&#x2F;Netlify&quot;&gt;codesections.netlify.com&#x2F;blog&#x2F;netlify&lt;&#x2F;a&gt;;
since it shows up at both locations, it would be counted as duplicate
content.&lt;&#x2F;p&gt;
&lt;p&gt;In fact, the problem is even worse than that: Netlify may also (depending on
your settings) publish different branches of your site to different URLS (even
with the same content) and will create &amp;quot;deploy-previews&amp;quot; that allow you to
test live deploys before publishing them to your primary domain.  These features
are &lt;strong&gt;really&lt;&#x2F;strong&gt; great, and I make use of both of them.  (In fact, branch deploys
are what let me easily have
&lt;a href=&quot;https:&#x2F;&#x2F;passgen.codesections.com&quot;&gt;passgen.codesections.com&lt;&#x2F;a&gt; as a subdomain
in my site).  But they mean that you could end up with more than just two
copies of each page on your site—way more, in fact.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-solution&quot;&gt;The Solution&lt;&#x2F;h2&gt;
&lt;p&gt;Fortunately, the solution is very simple.  You to entirely avoid this issue,
you need to take two steps.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;First, tell Netlify to redirect traffic from your Netlify subdomain to your
primary domain.  This is a simple matter of setting the appropriate
&lt;code&gt;_redirects&lt;&#x2F;code&gt; file in the root of your site.  What you need to do is to tell
Netlify to redirect all traffic from the &lt;code&gt;.netlify&lt;&#x2F;code&gt; subdomain back to your
site.  Here&#x27;s what mine looks like:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;# Redirect default Netlify subdomain to primary domain
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;https:&#x2F;&#x2F;codesections.netlify.com&#x2F;*&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; https:&#x2F;&#x2F;www.codesections.com&#x2F;:splat 301!
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Just replace &lt;code&gt;codesections&lt;&#x2F;code&gt; with your base url, and save that file as
&lt;code&gt;_redirects&lt;&#x2F;code&gt; in your site root.  Once you&#x27;ve done that, you&#x27;ll have solved
the bigger half of the problem.&lt;&#x2F;p&gt;
&lt;p&gt;To solve the second half, you&#x27;ll need to add &lt;code&gt;rel=&amp;quot;canonical&amp;quot;&lt;&#x2F;code&gt; tags to all
the pages for your site.  Depending on how you build your site, that could
be easy or painful.  I use &lt;a href=&quot;https:&#x2F;&#x2F;www.getgutenberg.io&#x2F;&quot;&gt;Gutenberg&lt;&#x2F;a&gt;,
which makes this process incredibly easy.  (Exactly as I&#x27;d expect from such
a powerful static site generator.)&lt;&#x2F;p&gt;
&lt;p&gt;All I need to do is to create a new variable in my &lt;code&gt;config.toml&lt;&#x2F;code&gt; file
that&#x27;s equal to my base url, and then add it to my templates.&lt;&#x2F;p&gt;
&lt;p&gt;Specifically, I add this line to the &lt;code&gt;[extra]&lt;&#x2F;code&gt; section of my &lt;code&gt;config.toml&lt;&#x2F;code&gt;
file:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#268bd2;&quot;&gt;live_base_url &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;= &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;https:&#x2F;&#x2F;www.codesections.com&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;and then add this line to each of my templates inside the &lt;code&gt;&amp;lt;head&amp;gt;&lt;&#x2F;code&gt; section:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;link &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;rel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;canonical&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;{{ config.extra.live_base_url }}{{ current_path }}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;(Why are we using our own &lt;code&gt;live_base_url&lt;&#x2F;code&gt; instead of Gutenberg&#x27;s built-in
&lt;code&gt;base_url&lt;&#x2F;code&gt;?  Because you may want to &lt;a href=&quot;https:&#x2F;&#x2F;www.getgutenberg.io&#x2F;documentation&#x2F;deployment&#x2F;netlify&#x2F;&quot;&gt;change the
base_url&lt;&#x2F;a&gt; if
you use Netlify&#x27;s deploy previews, and we don&#x27;t want to limit ourselves from
using that very helpful feature.)&lt;&#x2F;p&gt;
&lt;p&gt;And that&#x27;s it!  Your site now has no duplicate content, and won&#x27;t be unfairly
lumped in with sites that have scraped content.&lt;&#x2F;p&gt;
&lt;p&gt;If you have any questions, feel free to reach out to me in any of the ways
listed on &lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;about&#x2F;#contact&quot;&gt;my contact page&lt;&#x2F;a&gt;—I&#x27;d be happy to help.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Gutenberg Quick Start: from 0 to Hello, World</title>
                <pubDate>Thu, 12 Jul 2018 00:00:00 +0000</pubDate>
                <link>https://www.codesections.com/blog/gutenberg-quickstart-1/</link>
                <guid>https://www.codesections.com/blog/gutenberg-quickstart-1/</guid>
                <description>&lt;p&gt;Gutenberg is a fantastic static site generator.  It is likely the fastest
generator in existence, it&#x27;s got an easy-to-use yet powerful templating syntax,
and it supports advanced features like syntax highlighting and Sass compilation
out of the box.&lt;&#x2F;p&gt;
&lt;p&gt;This quick start guide will give you everything you need to know to build a
custom static site, with your own templates, and taking advantage of all of
Gutenberg&#x27;s powerful features.  At each stage, you&#x27;ll be able to see demo
sites that show exactly what a site like the one I&#x27;ve described looks like, and
you&#x27;ll be able to see the exact code that generated that demo site—it&#x27;s all on
GitHub, and there&#x27;ll be links at every step.&lt;&#x2F;p&gt;
&lt;p&gt;In this first part, we&#x27;ll start with creating a simple, single-page site.  It
won&#x27;t be much, but it will give us a firm foundation to build on.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;installation-and-initialization&quot;&gt;Installation and initialization&lt;&#x2F;h2&gt;
&lt;p&gt;The first step, of course, is to install Gutenberg by following the
&lt;a href=&quot;https:&#x2F;&#x2F;www.getgutenberg.io&#x2F;documentation&#x2F;getting-started&#x2F;installation&#x2F;&quot;&gt;Installation instructions&lt;&#x2F;a&gt;
in its documentation.&lt;&#x2F;p&gt;
&lt;p&gt;Once you&#x27;ve installed it, you&#x27;ll have access to three new terminal commands:
&lt;code&gt;gutenberg build&lt;&#x2F;code&gt;, which will build output HTML and other static files for your
website, &lt;code&gt;gutenberg serve&lt;&#x2F;code&gt;, which will create a test server with live reload
(we&#x27;ll use that a lot when testing our site), and &lt;code&gt;gutenberg init&lt;&#x2F;code&gt;, which
starts a new site.&lt;&#x2F;p&gt;
&lt;p&gt;Lets use this last command now.  Navigate to the parent folder that you would
like to contain your Gutenberg site (in my case, went to &lt;code&gt;~&#x2F;projects&lt;&#x2F;code&gt;).  Then
we need to pick out a name for our site; we&#x27;ll be using &lt;code&gt;demo&lt;&#x2F;code&gt; in this example.&lt;&#x2F;p&gt;
&lt;p&gt;Run &lt;code&gt;gutenberg init demo&lt;&#x2F;code&gt;.  Gutenberg will ask you a few questions.  If you
have a domain name already picked out, feel free to provide it—but that won&#x27;t
matter until we deploy our site much later.  Answer &lt;code&gt;n&lt;&#x2F;code&gt; to all the other
questions (we&#x27;ll return to these more advanced features soon).&lt;&#x2F;p&gt;
&lt;p&gt;When you&#x27;ve finished, you should have a new folder.  Navigate to that folder,
and you&#x27;ll see a directory that looks like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;demo&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; config.toml
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; content
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; static
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;├──&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; templates
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;└──&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; themes
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now, run &lt;code&gt;gutenberg serve&lt;&#x2F;code&gt; and you&#x27;ll get your first site.  Navigate to the
URL, and you&#x27;ll see it live!  (Admittedly, it&#x27;s not—yet—all that impressive).&lt;&#x2F;p&gt;
&lt;p&gt;If everything has gone according to plan, you should see something like this
(with this and all other screenshots, click for a live version).&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;give-border&quot;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;v01--gutenberg-simple-demo.netlify.com&#x2F;&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;gutenberg-quickstart-1&#x2F;v1.png&quot; alt=&quot;v1 screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;our-first-template&quot;&gt;Our first template&lt;&#x2F;h2&gt;
&lt;p&gt;As you can see, we just got a placeholder template.  However, it tells us what
we need to do: make an &lt;code&gt;index.html&lt;&#x2F;code&gt; template.&lt;&#x2F;p&gt;
&lt;p&gt;So, navigate to the &lt;code&gt;demo&#x2F;templates&lt;&#x2F;code&gt; folder and create a &lt;code&gt;index.html&lt;&#x2F;code&gt; file.  in
that file, type the following code:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#839496;&quot;&gt;{{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;section&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;What does that do?  Well, Gutenberg uses the &lt;a href=&quot;https:&#x2F;&#x2F;tera.netlify.com&#x2F;&quot;&gt;Tera&lt;&#x2F;a&gt;
templating language, which has basically the same syntax as
&lt;a href=&quot;http:&#x2F;&#x2F;jinja.pocoo.org&#x2F;docs&#x2F;2.10&#x2F;&quot;&gt;Jinja2&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;shopify.github.io&#x2F;liquid&#x2F;basics&#x2F;introduction&#x2F;&quot;&gt;Liquid&lt;&#x2F;a&gt;,
and &lt;a href=&quot;https:&#x2F;&#x2F;twig.symfony.com&#x2F;&quot;&gt;Twig&lt;&#x2F;a&gt; templating languages.  If you don&#x27;t
know any of those languages, don&#x27;t worry—we&#x27;ll cover all the essentials in
due course.&lt;&#x2F;p&gt;
&lt;p&gt;For now, it&#x27;s enough to know that surrounding words in &lt;code&gt;{{}}&lt;&#x2F;code&gt; lets you access
variables defined outside your template.  Specifically, &lt;code&gt;{{ section.content }}&lt;&#x2F;code&gt;
tells Tera to go to the current &lt;strong&gt;section&lt;&#x2F;strong&gt; and get the &lt;strong&gt;content&lt;&#x2F;strong&gt; of that
section.&lt;&#x2F;p&gt;
&lt;p&gt;So, what is the content of our section?  Well, we have to make it.  To do that,
navigate to the &lt;code&gt;demo&#x2F;content&lt;&#x2F;code&gt; folder and create a new file called &lt;code&gt;_index.md&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Type the following code into that file:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#839496;&quot;&gt;+++
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;title = &amp;quot;Gutenberg demo site&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;+++
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Hello, world
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;What is up with the first bit, inside the &lt;code&gt;+++&lt;&#x2F;code&gt;?  Well, it&#x27;s the
&amp;quot;front-matter&amp;quot;—basically a way for you to include meta-data &lt;em&gt;about&lt;&#x2F;em&gt; a page or
section without actually including the data in the section itself.&lt;&#x2F;p&gt;
&lt;p&gt;OK, now we have an &lt;code&gt;index.html&lt;&#x2F;code&gt; template, and an &lt;code&gt;_index.md&lt;&#x2F;code&gt; content page.
Lets run our server command and see what we get.  If you&#x27;re following along,
you should get something like this (again, click for the live site):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;give-border&quot;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;v02--gutenberg-simple-demo.netlify.com&#x2F;&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;gutenberg-quickstart-1&#x2F;v2.png&quot; alt=&quot;Screenshot of v2&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;And your code, minimal though it is, should &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;codesections&#x2F;gutenberg-simple-demo&#x2F;tree&#x2F;v01&quot;&gt;look like the code in this
branch&lt;&#x2F;a&gt;.  Well,
sort of, anyway: your code won&#x27;t have the LICENSE or README files, since those
are there to explain the demo project; but your project &lt;em&gt;will&lt;&#x2F;em&gt; have a couple
of empty folders—one quirk of git is that it typically &lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;3030230&#x2F;does-git-ignore-empty-folders&quot;&gt;ignores empty
folders)&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;fixing-our-content&quot;&gt;Fixing our content&lt;&#x2F;h2&gt;
&lt;p&gt;So, was that what you expected?  We got our content, &amp;quot;Hello, world&amp;quot;, but we
also got something else, the printed &lt;code&gt;&amp;lt;p&amp;gt;&lt;&#x2F;code&gt; HTML tags that surround it.  Why
did that happen?  It happened because Gutenberg is protecting us—whenever we
pass it HTML content, it will automatically &lt;em&gt;sanatize&lt;&#x2F;em&gt; the HTML.  That is,
Gutenberg will automatically prevent the HTML from rendering &lt;em&gt;as HTML&lt;&#x2F;em&gt;, and
will instead replace it with encoded characters that present the HTML as plain
text.  This is a nice default for a templating language to have (to prevent
&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Cross-site_scripting&quot;&gt;cross-site scripting&lt;&#x2F;a&gt;
attacks), but not really relevant to building a static site where we control
all of our content.  So, how do we turn it off?&lt;&#x2F;p&gt;
&lt;p&gt;Pretty easily, as it turns out. What we need to do is edit our &lt;code&gt;index.html&lt;&#x2F;code&gt;
template to change &lt;code&gt;{{ section.content }}&lt;&#x2F;code&gt; to &lt;code&gt;{{ section.content | safe }}&lt;&#x2F;code&gt;.
This is our first &lt;strong&gt;filter&lt;&#x2F;strong&gt;, a command after a &lt;code&gt;|&lt;&#x2F;code&gt; that tells Gutenberg to
process the provided text differently.  In this case &lt;code&gt;safe&lt;&#x2F;code&gt; tells Gutenberg
&lt;em&gt;not&lt;&#x2F;em&gt; to sanitize the text.&lt;&#x2F;p&gt;
&lt;p&gt;After that change, we get a site that looks like this (click for live site):&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;give-border&quot;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;v03--gutenberg-simple-demo.netlify.com&#x2F;&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;gutenberg-quickstart-1&#x2F;v3.png&quot; alt=&quot;Screenshot of v03&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;adding-some-formatting&quot;&gt;Adding some formatting&lt;&#x2F;h2&gt;
&lt;p&gt;We&#x27;ve made it!  A (very) basic webpage saying &amp;quot;Hello, world&amp;quot;.  But lets see if
we can make it at least a little prettier; lets add a tiny bit of CSS and
Markdown formatting.&lt;&#x2F;p&gt;
&lt;p&gt;First, the CSS.  Lets open up our template and add seven lines of CSS.  And,
while we&#x27;re at it, lets add in enough HTML to generate an (almost) valid
page.  Change the &lt;code&gt;templates&#x2F;index.html&lt;&#x2F;code&gt; page to have the following content:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;DOCTYPE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;charset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;UTF-8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;style&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;body &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;auto;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;max-width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;650&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;line-height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1.6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;font-size&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;18&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#444&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;padding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0 10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;h2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;h3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;line-height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1.2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;style&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;section&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;safe &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now, open up the &lt;code&gt;content&#x2F;_index.md&lt;&#x2F;code&gt; file and add it some Markdown-formatted
text.  You can use all of the
&lt;a href=&quot;https:&#x2F;&#x2F;daringfireball.net&#x2F;projects&#x2F;markdown&#x2F;basics&quot;&gt;Markdown&lt;&#x2F;a&gt; syntax, and
you can add any text you want.  Here&#x27;s what I added:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#839496;&quot;&gt;+++
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;title = &amp;quot;Gutenberg demo site&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;+++
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;# Hello, world
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;in culpa qui officia deserunt mollit anim id est laborum
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;*  Basic markdown formatting
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;*  Including lists
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;*  And &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#839496;&quot;&gt;_italics_
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;*  And &lt;&#x2F;span&gt;&lt;span style=&quot;font-weight:bold;color:#839496;&quot;&gt;**bold**
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;With those two changes, we&#x27;re starting to get something that at least
resembles an actual website:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;give-border&quot;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;v04--gutenberg-simple-demo.netlify.com&#x2F;&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;gutenberg-quickstart-1&#x2F;v4.png&quot; alt=&quot;v04 screenshots&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;As always, click for the live site, and visit the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;codesections&#x2F;gutenberg-simple-demo&#x2F;tree&#x2F;v04&quot;&gt;relevant
branch&lt;&#x2F;a&gt; of
the GitHub repo for the code.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;final-touches&quot;&gt;Final touches&lt;&#x2F;h2&gt;
&lt;p&gt;We need to make two additional changes before we can declare our &amp;quot;Hello, world&amp;quot;
site done.  First, we need to add a title to our page, which is required to
have a valid HTML5 document.  This should be old-hat by now: just open up the
&lt;code&gt;index.html&lt;&#x2F;code&gt; template and add in the title tag.  When you&#x27;re done, it should
look like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;DOCTYPE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Gutenberg Demo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;charset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;UTF-8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;style&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;body &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;auto;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;max-width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;650&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;line-height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1.6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;font-size&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;18&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#444&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;padding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0 10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;h2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;h3 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;line-height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1.2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;style&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;section&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;safe &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Finally, we should add a favicon, one of those little pictures that shows up
in the tab bar.  This isn&#x27;t &lt;strong&gt;stictly&lt;&#x2F;strong&gt; required, but it sure helps our site
look a bit better and it will let us see the process for uploading static
files.&lt;&#x2F;p&gt;
&lt;p&gt;Since we don&#x27;t have a favicon of our own, let&#x27;s borrow Gutenberg&#x27;s.  I&#x27;ve
&lt;a href=&quot;https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;codesections&#x2F;gutenberg-simple-demo&#x2F;v05&#x2F;static&#x2F;favicon.ico&quot;&gt;saved a copy of the file&lt;&#x2F;a&gt; to the GitHub repository.  Go
ahead and download it now, and save it to &lt;code&gt;static&#x2F;favicon.ico&lt;&#x2F;code&gt;.  Having
done that, what else do we need to do?&lt;&#x2F;p&gt;
&lt;p&gt;Nothing!  Fire up your server, and you should see something like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;span class=&quot;give-border&quot;&gt;
&lt;a href=&quot;https:&#x2F;&#x2F;v05--gutenberg-simple-demo.netlify.com&#x2F;&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;gutenberg-quickstart-1&#x2F;v5.png&quot; alt=&quot;v5 screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;p&gt;
&lt;p&gt;How does this magic work?  To understand this, let&#x27;s talk a bit about how
Gutenberg generates your site.  At a big-picture level, it takes all the files
in your &lt;code&gt;content&lt;&#x2F;code&gt; directory, processes them according to rules in your
&lt;code&gt;templates&lt;&#x2F;code&gt; directory (including by parsing Markdown files into HTML), and
then places the output files in your &lt;code&gt;public&lt;&#x2F;code&gt; directory.  Next, it also places
all the files in the &lt;code&gt;static&lt;&#x2F;code&gt; directory directly into &lt;code&gt;public&lt;&#x2F;code&gt;—without
processing them at all.&lt;&#x2F;p&gt;
&lt;p&gt;Thus, when we put &lt;code&gt;favicon.ico&lt;&#x2F;code&gt; in the &lt;code&gt;static&lt;&#x2F;code&gt; directory, and then ran the
&lt;code&gt;serve&lt;&#x2F;code&gt; command, it was copied directly into the &lt;code&gt;public&lt;&#x2F;code&gt; directory and was
immediately available to our generated site.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;So, that&#x27;s everything you need to know to build a very basic site with
Gutenberg.  Once again, feel free to look at any of the live demo sites we
built today (&lt;a href=&quot;https:&#x2F;&#x2F;v01--gutenberg-simple-demo.netlify.com&#x2F;&quot;&gt;v1&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;v02--gutenberg-simple-demo.netlify.com&#x2F;&quot;&gt;v2&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;v03--gutenberg-simple-demo.netlify.com&#x2F;&quot;&gt;v3&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;v04--gutenberg-simple-demo.netlify.com&#x2F;&quot;&gt;v4&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;v05--gutenberg-simple-demo.netlify.com&#x2F;&quot;&gt;v5&lt;&#x2F;a&gt;), or to check out the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;codesections&#x2F;gutenberg-simple-demo&#x2F;tree&#x2F;master&quot;&gt;source repository&lt;&#x2F;a&gt;, which has the code for each version in separate branches.&lt;&#x2F;p&gt;
&lt;p&gt;In the next part of this tutorial, we&#x27;ll walk through how to add multiple
pages to your site, including how to manage multiple templates in a way that&#x27;s
powerful and maintainable.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Benchmarking &amp; Comparing Static Site Generators: Gutenberg versus Hugo</title>
                <pubDate>Mon, 02 Jul 2018 00:00:00 +0000</pubDate>
                <link>https://www.codesections.com/blog/gutenberg-vs-hugo/</link>
                <guid>https://www.codesections.com/blog/gutenberg-vs-hugo/</guid>
                <description>&lt;p&gt;As of this post, this blog is now powered by the static site generator
&lt;a href=&quot;https:&#x2F;&#x2F;www.getgutenberg.io&#x2F;&quot;&gt;Gutenberg&lt;&#x2F;a&gt; instead of &lt;a href=&quot;https:&#x2F;&#x2F;gohugo.io&quot;&gt;hugo&lt;&#x2F;a&gt;.
I was pretty happy about Hugo and don&#x27;t have much bad to say about it, but
I&#x27;m even happier with Gutenberg.  This post provides an in-depth comparison
between the two on five dimensions (speed, template syntax, features,
documentation&#x2F;support, and hackability) and explains why I decided to switch.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;speed&quot;&gt;Speed&lt;&#x2F;h2&gt;
&lt;p&gt;In some sense, this is the least important of the five metrics—both Hugo and
Gutenberg are fast.  Really fast.  So fast that, at least with small sites,
you&#x27;ll likely never have a noticeable wait when using either program.&lt;&#x2F;p&gt;
&lt;p&gt;However, I&#x27;m still starting with speed because Hugo&#x27;s tagline has always been
that it&#x27;s &amp;quot;the world&#x27;s fastest framework for building static sites&amp;quot;, and I
really wanted to know if that&#x27;s actually the case.  Hugo is constantly
bragging about it&#x27;s speed, but Gutenberg is built in Rust which—at least to
hear the Rust partisans tell it—should give it a definite speed edge.  So,
who is the ultimate speed champion?&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Well, it actually depends.  If you&#x27;re generating a blog or other site
&lt;strong&gt;without&lt;&#x2F;strong&gt; any code samples, then Gutenberg is the undisputed champion.&lt;br &#x2F;&gt;
When I ran a test on my blog with the most basic settings, Gutenberg built
the site in an average of 21.3 milliseconds, while Hugo took more than twice
as long, with a sluggish 54.5 milliseconds.  (See what I mean about both
being so fast that you&#x27;ll never notice any difference?)&lt;&#x2F;p&gt;
&lt;p&gt;But, if I turn on syntax highlighting, Hugo edges to the lead again.
Syntax highlighting, you may recall, is what lets me have nicely colored
code samples like&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;DOCTYPE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;xmlns&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;xhtml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;xml:lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;xmlns:fb&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;http:&#x2F;&#x2F;www.facebook.com&#x2F;2008&#x2F;fbml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;http-equiv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;X-UA-Compatible&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;IE=edge&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt; &#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;http-equiv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;content-type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;text&#x2F;html;charset=utf-8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt; &#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;script &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;text&#x2F;javascript&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;.NREUM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;||&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;NREUM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;={})).loader_config={
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;xpid:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;UQ8EUVRACQAFVVdbAQk=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;.NREUM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;||&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;NREUM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;={})
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;__nr_require&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;){
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;){&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;]){&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;]={exports:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;{}};&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;call&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;.exports,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;){
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;];&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;||&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;)},&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;.exports)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;].exports}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;typeof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;__nr_require&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;__nr_require&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;.length;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;++)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;]);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;without styling all those colors by hand.  That&#x27;s an absolutely &lt;em&gt;key&lt;&#x2F;em&gt;
feature for me, or for any technical blog.  And (with the amount of
syntax highlighting I had before this post), it slowed Gutenberg down
to 95.1 ms, but only slowed Hugo down to 84.7 ms.  So, at least in my
typical use case, Hugo&#x27;s claim to be the fastest stands up—but just by a
whisker.&lt;&#x2F;p&gt;
&lt;p&gt;But there&#x27;s a complicating factor: Gutenberg&#x27;s syntax highlighting is not
slower because it&#x27;s poorly coded, it&#x27;s slower because it&#x27;s &lt;strong&gt;better&lt;&#x2F;strong&gt;.  But
more about that when we get to the feature comparison.&lt;&#x2F;p&gt;
&lt;p&gt;For now, I&#x27;ll score this as a tie, and leave you with a full chart of my
benchmark results.&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt; Command &lt;&#x2F;th&gt;&lt;th align=&quot;right&quot;&gt; Mean [ms] &lt;&#x2F;th&gt;&lt;th align=&quot;right&quot;&gt; Min…Max [ms] &lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td align=&quot;left&quot;&gt; &lt;code&gt;gutenberg build&lt;&#x2F;code&gt; (without syntax highlighting)  &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt; 21.3 ± 0.5 &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt; 19.9…22.8  &lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td align=&quot;left&quot;&gt; &lt;code&gt;hugo&lt;&#x2F;code&gt; (without syntax highlighting)             &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt; 54.5 ± 2.1 &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt; 51.3…59.7  &lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td align=&quot;left&quot;&gt; &lt;code&gt;hugo&lt;&#x2F;code&gt; (with syntax highlighting)                &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt; 84.7 ± 2.2 &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt; 81.1…91.3  &lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td align=&quot;left&quot;&gt; &lt;code&gt;gutenberg build&lt;&#x2F;code&gt; (with syntax highlighting)     &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt; 95.1 ± 5.0 &lt;&#x2F;td&gt;&lt;td align=&quot;right&quot;&gt; 90.3…109.2 &lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;Note that all of these benchmarks were taken with the
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;sharkdp&#x2F;hyperfine&quot;&gt;Hyperfine&lt;&#x2F;a&gt; benchmarking tool, and
thus represent the average of multiple test runs.  Also note, of course,
that these results are specific to both my site and my computer.  In
particular, my site currently has
&lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;projects&#x2F;codesections-website&#x2F;&quot;&gt;a lot&lt;&#x2F;a&gt; of
syntax highlighting, so it&#x27;s entirely possible that Gutenberg might eke out
a win on a site with less syntax highlighting.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;template-syntax&quot;&gt;Template Syntax&lt;&#x2F;h2&gt;
&lt;p&gt;This is another area that could either be all important or totally irrelevant,
depending entirely on your use case.  It&#x27;s entirely possible to use Hugo,
Gutenberg, or any other static site generator entirely by selecting themes
built by other people without ever building your own theme or customizing
an existing theme.  In that case, you don&#x27;t need to care about the syntax
at all.  However, if you do intend to customize a theme or if—like me—you
want the control that comes from building your own theme from scratch, then
you&#x27;ll spend a lot of time interacting with the template syntax.&lt;&#x2F;p&gt;
&lt;p&gt;Hugo&#x27;s syntax was one of it&#x27;s major pain points for me, and Gutenberg&#x27;s is a
big improvement.  Apparently I&#x27;m not alone: frustration with Hugo&#x27;s template
language is one of the &lt;a href=&quot;https:&#x2F;&#x2F;vincent.is&#x2F;announcing-gutenberg&#x2F;&quot;&gt;main reasons that Gutenberg was built in the first
place&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The issue here is that Hugo relies on the Go templating syntax, which means
it relies on numerous conventions that may be second nature to someone coding
in Go every day, but that are pretty foreign to the rest of us. Conversely,
even though Gutenberg is written in Rust, it doesn&#x27;t try to implement a
Rust-specific template syntax.  Instead, it uses
&lt;a href=&quot;https:&#x2F;&#x2F;tera.netlify.com&#x2F;&quot;&gt;Tera&lt;&#x2F;a&gt;.  As the Tera website says, &amp;quot;Used to Jinja2,
Django templates, Liquid or Twig? You will feel right at home&amp;quot;; Tera is
essentially a re-implementation of several popular and battle-tested
templating languages.  As noted, this includes Liquid, which is the same
templating language used by Jekyll, another static site generator known for
the ease of its templating system.  So, we should expect Gutenberg to have
a strong edge here.&lt;&#x2F;p&gt;
&lt;p&gt;But let&#x27;s make this a bit more concrete.&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;s a simple template from Gutenberg:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;base.html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; %}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;block &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;h2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;page&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;title &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;h2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;page&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;safe &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;endblock &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;content &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;%}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And here&#x27;s the same thing in Hugo:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#839496;&quot;&gt;{{ define &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; }}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{{ .&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;Title &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{{.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;Content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{{ end }}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Even though these two snippets are &lt;strong&gt;very&lt;&#x2F;strong&gt; similar, there are a few key
differences—and they all come down to one philosophical difference: Gutenberg
is explicit where Hugo is implicit.  Gutenberg uses &lt;code&gt;{% code %}&lt;&#x2F;code&gt; to mark a
control structure, but &lt;code&gt;{{ code }}&lt;&#x2F;code&gt; to mark a template; Hugo uses &lt;code&gt;{{ code }}&lt;&#x2F;code&gt;
for both.  Gutenberg uses &lt;code&gt;endblock&lt;&#x2F;code&gt;, &lt;code&gt;endif&lt;&#x2F;code&gt;, &lt;code&gt;endfor&lt;&#x2F;code&gt;, and similar to end
various block; Hugo uses &lt;code&gt;end&lt;&#x2F;code&gt; for everything.  Gutenberg specifies the base
template that a particular template extends; Hugo applies a &lt;a href=&quot;https:&#x2F;&#x2F;gohugo.io&#x2F;templates&#x2F;lookup-order&#x2F;&quot;&gt;complex set of
rules&lt;&#x2F;a&gt; to automatically extend
various templates.&lt;&#x2F;p&gt;
&lt;p&gt;All of these differences are minor, but they add up to a significantly
different overall experience.  And, having tried both, the experience is
a lot better with the Gutenberg&#x2F;Tera&#x2F;Jinja2&#x2F;Liquid style.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;features&quot;&gt;Features&lt;&#x2F;h2&gt;
&lt;p&gt;This one is going to depend heavily on your use case: Hugo and Gutenberg
share the same basic features, but both have features built in that the other
one lacks. Both (of course) parse Markdown into html; both support themes
(though Hugo has more available); and both support using shortcodes as
quick ways to, for example, embed YouTube videos (though, again, Hugo has
more pre-built ones available).  And both support basic syntax highlighting.&lt;&#x2F;p&gt;
&lt;p&gt;Hugo pulls ahead in a few areas (in addition to the better theme and
shortcode selection): it has great support for multi-language sites
using full i18n.  And it lets you output content in as many formats as you
like, including JSON or Google&#x27;s Accelerated Mobile Pages format.  So, if you
need either of those, Hugo will have an edge.  Finally, Hugo also has slightly
better support for easily integrating external comments (e.g., Disqus) or
external hosts—but neither is exactly hard to do manually.&lt;&#x2F;p&gt;
&lt;p&gt;On the other hand, Gutenberg has three key features that Hugo lacks, at least
out of the box.  Gutenberg can compile Sass files to generate CSS output.
Hugo doesn&#x27;t have that functionality built in, though you can use &lt;a href=&quot;http:&#x2F;&#x2F;danbahrami.io&#x2F;articles&#x2F;building-a-production-website-with-hugo-and-gulp-js&#x2F;&quot;&gt;external
tools&lt;&#x2F;a&gt; to accomplish the same thing.  Similarly, Gutenberg will
optionally generate an automatic search index; Hugo lacks that feature, but
can implement it using &lt;a href=&quot;https:&#x2F;&#x2F;gohugo.io&#x2F;tools&#x2F;search&#x2F;#readout&quot;&gt;several external plugins&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;(Note that the speed comparisons above didn&#x27;t include either of these features, or the multi-language feature in Hugo.  All of these would slow down
site generation.)&lt;&#x2F;p&gt;
&lt;p&gt;The last feature where Gutenberg pulls ahead is syntax highlighting.  As I
already mentioned, both Gutenberg and Hugo are capable of applying syntax
highlighting to any code samples, but Gutenberg is more capable.  Specifically,
&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Keats&#x2F;gutenberg&#x2F;issues&#x2F;325&quot;&gt;Gutenberg performs&lt;&#x2F;a&gt;
&amp;quot;context-aware highlighting&amp;quot;, in contrast to Hugo, which only &amp;quot;highlights
keywords&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;In practice, this means that Gutenberg is capable of applying different
highlighting rules for in different situations.  Let&#x27;s see this in action
by returning to example syntax highlighting I showed before.  As a refresher,
here&#x27;s what it looks like with Gutenberg:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;DOCTYPE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;xmlns&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;xhtml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;xml:lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;xmlns:fb&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;http:&#x2F;&#x2F;www.facebook.com&#x2F;2008&#x2F;fbml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;http-equiv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;X-UA-Compatible&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;IE=edge&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt; &#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;http-equiv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;content-type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;text&#x2F;html;charset=utf-8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt; &#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;script &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;text&#x2F;javascript&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;.NREUM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;||&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;NREUM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;={})).loader_config={
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;xpid:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;UQ8EUVRACQAFVVdbAQk=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;.NREUM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;||&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;NREUM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;={})
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;__nr_require&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;){
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;){&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;]){&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;]={exports:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;{}};&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;call&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;.exports,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;){
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;];&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;||&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;)},&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;.exports)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;].exports}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;typeof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;__nr_require&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;__nr_require&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;.length;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;++)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;]);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;And here&#x27;s what it looks like with Hugo:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;gutenberg-vs-hugo&#x2F;hugo-syntax-highlighting.png&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;gutenberg-vs-hugo&#x2F;hugo-syntax-highlighting.png&quot; alt=&quot;Syntax highlighting in Hugo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;As you can see, the Hugo version works fine on the HTML but totally fails
with the inline JavaScript.  That&#x27;s because Hugo is looking for keywords but
doesn&#x27;t have enough contextual awareness to know whether it&#x27;s inside a
&lt;code&gt;script&lt;&#x2F;code&gt; tag.  This is &lt;em&gt;most&lt;&#x2F;em&gt; noticeable when one language is nested inside
another, but shows up more subtlety in a few other ways—for instance,
Gutenberg can correctly highlight the units in a CSS file, but Hugo can&#x27;t
tell the difference between &lt;code&gt;px&lt;&#x2F;code&gt; and any other uses of &amp;quot;px&amp;quot; in a file.&lt;&#x2F;p&gt;
&lt;p&gt;Of course, how much this feature matters to you will depend entirely on how
much you want to highlight complex&#x2F;nested code.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;documentation-support&quot;&gt;Documentation&#x2F;Support&lt;&#x2F;h2&gt;
&lt;p&gt;Hugo and Gutenberg both have &lt;strong&gt;excellent&lt;&#x2F;strong&gt; documentation and support, but they
each have very &lt;strong&gt;different&lt;&#x2F;strong&gt; documentation and support.  Hugo comes with a
somewhat overwhelming 22,400 lines of (English) documentation detailing
just about anything you could possibly do with it (though, oddly, without
&lt;em&gt;quite&lt;&#x2F;em&gt; as much detail on the confusing templating syntax as would be ideal).
If that&#x27;s not enough, there&#x27;s a &lt;a href=&quot;https:&#x2F;&#x2F;www.giraffeacademy.com&#x2F;static-site-generators&#x2F;hugo&#x2F;&quot;&gt;whole series of video
tutorials&lt;&#x2F;a&gt;,
and, if you have questions, you can turn to &lt;a href=&quot;https:&#x2F;&#x2F;discourse.gohugo.io&#x2F;t&#x2F;syntax-highlighting&#x2F;10243&quot;&gt;numerous questions on Hugo&#x27;s
forum&lt;&#x2F;a&gt; or on &lt;a href=&quot;https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;tagged&#x2F;hugo&quot;&gt;Stack
Overflow&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Conversely, Gutenberg ships with a tightly organized but less comprehensive
1,618 lines of documentation (though this doesn&#x27;t count the &lt;a href=&quot;https:&#x2F;&#x2F;tera.netlify.com&#x2F;docs&#x2F;installation&#x2F;&quot;&gt;separate
documentation&lt;&#x2F;a&gt; for the Tera
templating syntax Gutenberg uses).  This documentation is small enough that
you can easily read through it and get an understanding of the whole way
Gutenberg works.  On the other hand, if the documentation &lt;strong&gt;does&lt;&#x2F;strong&gt; leave you
with unanswered questions, you may well be stuck—you won&#x27;t find video
tutorials, project forums, or a ton of Stack Overflow questions.  On the
&lt;a href=&quot;http:&#x2F;&#x2F;quotationsbook.com&#x2F;quote&#x2F;11809&#x2F;&quot;&gt;third hand&lt;&#x2F;a&gt;, when researching this
post, I &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Keats&#x2F;gutenberg&#x2F;issues&#x2F;325&quot;&gt;opened an issue on
GitHub&lt;&#x2F;a&gt;, and the primary
maintainer got back to me almost immediately.&lt;&#x2F;p&gt;
&lt;p&gt;So, depending on your outlook and preferences, either set of documentation
could be a better fit.  But, by the standard of many projects, it&#x27;s hard
to go wrong either way.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hackability&quot;&gt;Hackability&lt;&#x2F;h2&gt;
&lt;p&gt;How easy is it to improve each of the projects? I&#x27;d like to talk about this
from a couple different perspectives.  First, how likely is it that other
people will contribute to either project, either to fix bugs or add new
features?&lt;&#x2F;p&gt;
&lt;p&gt;From this perspective, Hugo seems to have a real advantage.  It&#x27;s currently
the &lt;a href=&quot;https:&#x2F;&#x2F;www.staticgen.com&#x2F;&quot;&gt;third-most popular static site generator&lt;&#x2F;a&gt;,
with over 25,000 stars on GitHub.  In contrast, Gutenberg barely cracks the
top 40, with only 927 stars.  Similarly, Hugo has &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;gohugoio&#x2F;hugo&quot;&gt;already had contributions
from 535 contributors&lt;&#x2F;a&gt;, and 6 contributors
have made over 100 contributions.  Conversely, Gutenberg &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Keats&#x2F;gutenberg&quot;&gt;has only 34
contributors&lt;&#x2F;a&gt;, and the lead developer is
the only one who has made more than 10.  So, at least in the short term,
it seems certain that Hugo will see more and faster development, with more
eyes to fix bugs and develop features.&lt;&#x2F;p&gt;
&lt;p&gt;As they say, &lt;a href=&quot;https:&#x2F;&#x2F;quoteinvestigator.com&#x2F;2013&#x2F;10&#x2F;20&#x2F;no-predict&#x2F;&quot;&gt;predictions are hard, especially about the future&lt;&#x2F;a&gt;.  But I&#x27;m willing to bet that
this discrepancy continues: Hugo is written in Go, a language that&#x27;s famously
easy to learn and that &lt;a href=&quot;https:&#x2F;&#x2F;insights.stackoverflow.com&#x2F;survey&#x2F;2018&#x2F;#technology&quot;&gt;7.1% of developers already
know&lt;&#x2F;a&gt;.  It seems
like Go has a lot of momentum behind it, and I&#x27;m willing to bet that
Hugo won&#x27;t lack for contributors anytime soon.&lt;&#x2F;p&gt;
&lt;p&gt;Gutenberg, on the other hand, is written in Rust—which, despite being the
&lt;a href=&quot;https:&#x2F;&#x2F;insights.stackoverflow.com&#x2F;survey&#x2F;2018&#x2F;#technology&quot;&gt;most-loved language&lt;&#x2F;a&gt; for the last three years in a row, hasn&#x27;t (yet?) caught on with
a wider audience.  What&#x27;s more, Rust is known for its long-ish learning curve,
so it seems unlikely that many potential contributors will pick it up simply
for the sake of submitting a quick patch to Gutenberg.  All in all, it seems
likely that Hugo will continue to see significantly more developer effort
in the foreseeable future.&lt;&#x2F;p&gt;
&lt;p&gt;But that&#x27;s only half the equation: What if you plan to make changes yourself,
rather than waiting&#x2F;hoping someone else will?  Would it be easier to
contribute to Gutenberg or to Hugo if you want to build your own feature
(either as a contribution or a fork)?&lt;&#x2F;p&gt;
&lt;p&gt;Well, let&#x27;s start with the obvious: If you know or plan to learn Go, it will
be easier to hack on Hugo; if you know or plan to learn Rust, it will be
easier to hack on Gutenberg.  But let&#x27;s set that aside.  Assuming you know
both languages, which program would be easier to work on?&lt;&#x2F;p&gt;
&lt;p&gt;Well, just as Hugo has more documentation and more contributors, it also has
more code.  Way more code.  In fact, Gutenberg has just over 6,000 lines of
Rust code, spread over ~50 files.  Hugo, by contrast, has over 50,000 lines
of Go code spread over 350 files.  Judging by size alone, the Gutenberg
codebase seems far more manageable, and making meaningful contributions seems
far more feasible.  What&#x27;s more, Gutenberg&#x27;s code also seems to be well
commented and well laid out, so it seems like contributions are entirely
feasible.  If you know both Go and Rust, Gutenberg seems like the far easier
project to jump into.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion-i-ll-be-using-gutenberg&quot;&gt;Conclusion: I&#x27;ll be using Gutenberg&lt;&#x2F;h2&gt;
&lt;p&gt;Based on all of the above, I could see a strong argument for Hugo.  It&#x27;s
got more momentum, it&#x27;s got more themes, and it&#x27;s written in a growing
language that would be easy to pick up.  But I think the case for
Gutenberg is even stronger, at least for me.  It has features that
are useful to me—especially the superior templating language and better
syntax highlighting.  And it seems to have more potential, given its
speed and the inherent advantages of Rust.  And, if there are issues
that others don&#x27;t resolve, well that will just give me a reason to dive
in myself.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Hexo Review</title>
                <pubDate>Mon, 18 Jun 2018 16:57:52 -0400</pubDate>
                <link>https://www.codesections.com/blog/hexo-review/</link>
                <guid>https://www.codesections.com/blog/hexo-review/</guid>
                <description>&lt;p&gt;As I&#x27;ve &lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;why-static-site-generators-are-great&#x2F;&quot;&gt;written about&lt;&#x2F;a&gt; a &lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;greatness-of-static-site-generators-ii&#x2F;&quot;&gt;couple of times&lt;&#x2F;a&gt;
already, I think static site generators are pretty great.  But that
still leaves picking the right static site generator.&lt;&#x2F;p&gt;
&lt;p&gt;As I&#x27;ve mentioned before, this site is built with &lt;a href=&quot;https:&#x2F;&#x2F;gohugo.io&#x2F;&quot;&gt;Hugo&lt;&#x2F;a&gt;, and I&#x27;m currently very happy with the setup.  However,
I didn&#x27;t start with Hugo.  My first experience with a static site
generator was actually with &lt;a href=&quot;https:&#x2F;&#x2F;hexo.io&#x2F;&quot;&gt;Hexo&lt;&#x2F;a&gt;—a static site
generator that I wanted to love but found that I just could not.&lt;&#x2F;p&gt;
&lt;p&gt;This post is all about what drew me to Hexo in the first place.  And
then, part two of this review, I&#x27;ll get into what ultimately pushed
me away from it.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;what-i-loved-about-hexo&quot;&gt;What I loved about Hexo&lt;&#x2F;h3&gt;
&lt;p&gt;Hexo has two huge advantages over Hugo (at least in my book).  First,
it&#x27;s got a much better templating language.  When writing the files
that determine the layout or overall style of your site, Hugo forces
you to use a custom Hugo-specific syntax built on Go (a.k.a Golang), the language in which Hugo is written.  And—though this is perhaps
subjective—it&#x27;s just not the prettiest of languages.&lt;&#x2F;p&gt;
&lt;p&gt;On the other hand, Hexo gives you your choice of templating languages:
it supports Swig, EJS, Haml, or Pug (formerly known as Jade).  The
details of these don&#x27;t matter too much—what matters is that you get
your choice of several well-regarded templating languages instead of
being forced into one.&lt;&#x2F;p&gt;
&lt;p&gt;To be fair, this wouldn&#x27;t matter that much to a lot of people.  It&#x27;s
entirely possible to use either Hugo or Hexo without ever writing a
single template: both of them have an abundance of themes to choose
from.  Pretty much regardless of your taste, you can find something
that fits your style, and can easily tweak it to meet your needs.&lt;&#x2F;p&gt;
&lt;p&gt;However, for whatever reason (stubbornness? need for control? desire
to learn all the things?), I am determined to write my own
theme for whatever static site generator I end up using.  (Which
might explain why my site is currently as minimalist as it is, though
I keep making improvements).&lt;&#x2F;p&gt;
&lt;p&gt;As a result, I knew I&#x27;d be spending a fair bit of time with the
templating language of my chosen tool, and the better options Hexo
provided were a clear point in its favor.&lt;&#x2F;p&gt;
&lt;p&gt;Second, and just as importantly, Hexo is written in JavaScript.&lt;br &#x2F;&gt;
JavaScript is a language I already know, and it&#x27;s one that I plan
to continue to work heavily (even as I expand into other languages,
too).  This means that, if I ever encounter a bug or am &lt;em&gt;really&lt;&#x2F;em&gt;
missing a particular feature, I would have a shot at coding up a patch
myself.  Plus, it would be nice to be able to contribute back to the
tool that I use for my site.&lt;&#x2F;p&gt;
&lt;p&gt;Conversely, Hugo is written in Go, a language that I don&#x27;t know
and can&#x27;t foresee spending any serious time with in the near future.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;asside class=&quot;note&quot;&gt;What, exactly do I have against Go?  Well, that
should probably be it&#x27;s own post, but the short version is that I
think Go is very good at solving Google&#x27;s problems, but Google&#x27;s
problems aren&#x27;t my problems, and they&#x27;re probably not yours either.
&lt;br&gt;&lt;br&gt;
If you read what the inventors of Go have said about the language,
it&#x27;s clear that they built it to solve three problems: Google had
massive programs that were taking forever to compile in C or C++
(so Go is built to have super-fast compile times); Google had large
teams need to work together but were hampered by the fact that
different programmers used different subsets of the same language
(so Go is built with only one way to accomplish any given goal
instead of syntactical options), and Google relies on hiring large
numbers of very smart recent college graduates, and thus needs to
train them quickly (so Go has a syntax very similar to C&#x2F;C++ and
JavaScript, languages that recent grads are likely to have seen).
&lt;br&gt;&lt;br&gt;
Now, I don&#x27;t have any of those problems—the compile time of my
programmes is typically measured in milliseconds, not hours, I&#x27;m
mostly working in small teams or on solo projects, and I&#x27;ve got to
plans to hire hoards of recent CS grads from MIT.  So, it just
doesn&#x27;t seem to be the right fit.
&lt;br&gt;&lt;br&gt;
Now, none of that is to say that Go is a &lt;em&gt;bad&lt;&#x2F;em&gt; language.  In fact,
it&#x27;s still one I&#x27;d like to learn.  It&#x27;s just lower on my list than…
oh, at least a half-dozen others. (Rust, I&#x27;m coming for you soon!)&lt;&#x2F;aside&gt;&lt;&#x2F;p&gt;
&lt;p&gt;So, Hexo had two strong points in its favor: a better templating
language and a better (for me) underlying language.  Those two
advantages were enough to get me to try it out.  In part two of this
review, I&#x27;ll talk about what hidden disadvantages made my stay with
Hexo a short one.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Just How Secure Is pass-gen?</title>
                <pubDate>Thu, 14 Jun 2018 17:44:45 -0400</pubDate>
                <link>https://www.codesections.com/blog/how-secure-is-pass-gen/</link>
                <guid>https://www.codesections.com/blog/how-secure-is-pass-gen/</guid>
                <description>&lt;p&gt;The other day, I posted on Mastodon that &lt;a href=&quot;www.gitlab.com&#x2F;codesections&#x2F;pas-gen&quot;&gt;pass-gen&lt;&#x2F;a&gt; (my new passphrase generator written in pure bash and designed to follow the Unix philosophy) has achieved 100 bits of entropy with default settings and is now 128 times as secure as when it first launched.
But how secure is 100 bits of entropy, really?  And how do you even go about
measuring the security of a passphrase generator, really?&lt;&#x2F;p&gt;
&lt;h2 id=&quot;attack-vectors&quot;&gt;Attack Vectors&lt;&#x2F;h2&gt;
&lt;p&gt;The security of a given password depends entirely on the method used to
attack that password.  As xkcd &lt;a href=&quot;https:&#x2F;&#x2F;xkcd.com&#x2F;538&#x2F;&quot;&gt;famously pointed out&lt;&#x2F;a&gt;, basically all passwords are weak against physical attacks:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;how-secure-is-pass-gen&#x2F;security.png&quot;&gt;&lt;img src=&quot;&#x2F;blog&#x2F;how-secure-is-pass-gen&#x2F;security.png&quot; alt=&quot;xkcd 538&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;But let&#x27;s set aside the $5-wrench attack for the moment, and dive into the crypto-nerd&#x27;s imagined attack.  Just what would it take to actually crack
the sort of password that pass-gen creates?&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;d like to take a look at three attacks and explain why—even with worst-case
assumptions, stacking the deck as far as possible in favor of the would-be
crackers—pass-gen&#x27;s passwords would remain secure.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;old-fashioned-brute-force&quot;&gt;Old-fashioned brute force&lt;&#x2F;h3&gt;
&lt;p&gt;The most basic way to crack a password is, of course, to simply try every
single possible combination of characters.  In theory, this method is
guaranteed to work: the cracker will eventually get the correct password if
they wait long enough.  In practice, little things like impatience, old age,
and&#x2F;or the heat death of the universe tend to get in the way, and this method
is rarely successful against any but the most basic of passwords.&lt;&#x2F;p&gt;
&lt;p&gt;Just to sure, though, how would a pass-gen password fare against a brute-force
attack?  Well, as an example, let&#x27;s consider this password I just generated:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;EMBOSS||comfort||Laborer||HANDLER||&lt;&#x2F;code&gt;​&lt;code&gt;powdered||Scarf119&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Calculating the difficulty of brute-forcing our password is a simple matter of
figuring out how many characters a cracker would need to include to match our
password and then raising that number to the power of the length of our
password.  Here, our password includes lowercase letters (26 possibilities),
uppercase letters (26), numbers (10), and special characters (33).  So, the
full size of the &amp;quot;alphabet&amp;quot; our would-be cracker would need to search would
be 95 characters, and they&#x27;d be trying to crack a 53-character password.  That
would be… challenging.&lt;&#x2F;p&gt;
&lt;p&gt;The website &lt;a href=&quot;https:&#x2F;&#x2F;www.grc.com&#x2F;haystack.htm&quot;&gt;password haystacks&lt;&#x2F;a&gt; automates
the calculation of just how long this password would take to crack.  Here&#x27;s
what it says (with extremely favorable assumptions about the hardware
available to the cracker).  According to that site, our password would be
cracked in: &amp;quot;2.12 billion trillion trillion trillion trillion trillion
trillion centuries&amp;quot;.&lt;&#x2F;p&gt;
&lt;p&gt;That is about 1,000 times longer than the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Heat_death_of_the_universe#Time_frame_for_heat_death&quot;&gt;projected lifespan of the
universe&lt;&#x2F;a&gt;, so I think we&#x27;re safe.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;list-of-known-passwords&quot;&gt;List of known passwords&lt;&#x2F;h3&gt;
&lt;p&gt;Of course, a far more common attack is for a cracker to use a list of known
passwords.  The all-too-often-correct assumption is that people will reuse
passwords, and crackers maintain lists billions of past passwords that people
have previously used.&lt;&#x2F;p&gt;
&lt;p&gt;The whole point of using a password generator (and then storing the password
in a password vault like &lt;a href=&quot;https:&#x2F;&#x2F;www.passwordstore.org&#x2F;&quot;&gt;pass&lt;&#x2F;a&gt;, however, is
that you &lt;strong&gt;don&#x27;t&lt;&#x2F;strong&gt; reuse passwords.  Each password should be used for a single
account and for a single account only.  If you need to pick a new password,
pass-gen makes it easy to do so, and pass (or another password manager)
makes it easy to store that password.  So just don&#x27;t reuse passwords, and this
attack is no more of a threat than the brute-force attack.&lt;&#x2F;p&gt;
&lt;p&gt;&amp;quot;But,&amp;quot; I can already hear you asking, &amp;quot;what if I don&#x27;t reuse my password, but
someone else just happens to have used the same password before?&amp;quot;  That is
not going to happen.  I was going to calculate out the odds of that
happening.  I was going to imagine that every single one of the 5,115,553,456
passwords in Troy Hunt&#x27;s &lt;a href=&quot;https:&#x2F;&#x2F;haveibeenpwned.com&#x2F;&quot;&gt;Have I Been Pwned&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;password database had been generated with pass-gen and then calculate the odds
of someone else having generated your password.&lt;&#x2F;p&gt;
&lt;p&gt;I was going to do that, but I couldn&#x27;t find a calculator that would show me an
answer other than &amp;quot;0&amp;quot;.  Suffice it to say, it&#x27;s just not going to happen.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dictionary-attack&quot;&gt;Dictionary attack&lt;&#x2F;h3&gt;
&lt;p&gt;Finally, we&#x27;re down to the main event: the only strategy that has a prayer of
working against a well-designed passphrase.&lt;&#x2F;p&gt;
&lt;p&gt;So, let&#x27;s start by stacking the deck fully in favor of the cracker: they know
that the password was generated with pass-gen.  They know that it was generated
using the default settings.  They know that it was generated from the default
word list, rather from any of the dozen+ other wordlists that ship with pass
gen.&lt;&#x2F;p&gt;
&lt;p&gt;So, how big is their search space?&lt;&#x2F;p&gt;
&lt;p&gt;Well, given that the pass-gen password is created using a combination of
words, symbols and numbers, we can calculate the total number of possible
passwords using the following formula:&lt;&#x2F;p&gt;
&lt;div style=&quot;text-align: center; font-size: 1.25em&quot;&gt;w&lt;sup&gt;p&lt;&#x2F;sup&gt; * s * n&lt;&#x2F;div&gt;
&lt;p&gt;where &lt;em&gt;w&lt;&#x2F;em&gt; = number of words in our wordlist, &lt;em&gt;p&lt;&#x2F;em&gt; = the number of words we pick
for our password, &lt;em&gt;s&lt;&#x2F;em&gt;  = the number of symbols on our symbol list, and &lt;em&gt;n&lt;&#x2F;em&gt; =
the number of numbers in our password.&lt;&#x2F;p&gt;
&lt;p&gt;That got a bit abstract, so let&#x27;s go through it with actual numbers. As of
today, the default search list includes 8,429 words.  However, we effectively
have three times that many passwords, because we have three possible
capitalization schemes: we pass-gen could produce &amp;quot;example&amp;quot;, &amp;quot;Example&amp;quot;, or
&amp;quot;EXAMPLE&amp;quot;—all three of which are different words for our purposes.&lt;&#x2F;p&gt;
&lt;p&gt;Next, the default configuration chooses 6 of these words for the password.
Additionally, pass-gen randomly selects a padding character (or set of two
characters) from a list of 54 potential characters, and follows it with a
digit between 000 and 999.  We can plug those numbers into our formula.  Thus,
(&lt;strong&gt;drumroll please&lt;&#x2F;strong&gt;) the total possible number of possible passwords is&lt;&#x2F;p&gt;
&lt;div style=&quot;text-align: center; font-size: 1.25em&quot;&gt;(8,429 * 3)&lt;sup&gt;6&lt;&#x2F;sup&gt; * 54 * 1000 = 1.4118 * 10&lt;sup&gt;31&lt;&#x2F;sup&gt;&lt;&#x2F;div&gt;
&lt;p&gt;Or, put differently, 14 followed by 30 zeros.&lt;&#x2F;p&gt;
&lt;p&gt;Is that a big number?  Well, yes, obviously.  Ok, better questions: &lt;em&gt;in the
context of password security&lt;&#x2F;em&gt; is that a big &lt;em&gt;enough&lt;&#x2F;em&gt; number?&lt;&#x2F;p&gt;
&lt;p&gt;Well, one way security researchers come at that question is to calculate how
many bits of entropy the password space generates.  That is, what power would
we need to raise two to in order to get the large number up above?  It turns
out that the answer is about 103, so we can say that pass-gen&#x27;s password has
103 bits of entropy.&lt;&#x2F;p&gt;
&lt;p&gt;There doesn&#x27;t seem to be a standard recommendation for password entropy, but
I&#x27;m satisfied that 103 bits is extremely high.  I&#x27;ve found recommendations as
low as
&lt;a href=&quot;https:&#x2F;&#x2F;security.stackexchange.com&#x2F;questions&#x2F;54846&#x2F;how-many-bits-of-entropy-should-i-aim-at-for-my-password&quot;&gt;33 bits&lt;&#x2F;a&gt;,
and as high as &lt;a href=&quot;https:&#x2F;&#x2F;blog.webernetz.net&#x2F;password-strengthentropy-characters-vs-words&#x2F;&quot;&gt;80
bits&lt;&#x2F;a&gt;.
The &lt;a href=&quot;https:&#x2F;&#x2F;www.eff.org&#x2F;dice&quot;&gt;EFF Dice&lt;&#x2F;a&gt; passwords—which come from a
reputable, paranoid organisation—contain 77 bits of entropy, so I&#x27;m inclined
to think that anything over that amount is sufficient.  (And, recall that the
scale is exponential, so entropy of 103 bits doesn&#x27;t mean that the password is
~25% harder to crack than one with 77 bits of entropy; it means that it is
over 67 &lt;em&gt;million&lt;&#x2F;em&gt; times harder to crack.)&lt;&#x2F;p&gt;
&lt;p&gt;Or, circling back to the password haystacks calculator linked above, we can
see that a password with 103 bits of entropy would take 35.33 million
centuries to crack.  That&#x27;s not exactly heat-death-of-the-universe time, but
it&#x27;s not next Tuesday, either.  And recall that the haystacks number assumes
extremely* powerful hardware for the potential crackers.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;Cutting through the math, the calculations, and the details, the bottom line
is clear: if not reused, the passwords generated by pass-gen are secure
against any possible cryptographic attack.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Image Compression for Website Speed: Turning it up to 11</title>
                <pubDate>Tue, 12 Jun 2018 16:38:54 -0400</pubDate>
                <link>https://www.codesections.com/blog/image-compression-for-website-speed/</link>
                <guid>https://www.codesections.com/blog/image-compression-for-website-speed/</guid>
                <description>&lt;p&gt;A few months ago, I got very into maximizing the speed of my website.  I feel
pretty good about what I accomplished:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;blog&#x2F;image-compression-for-website-speed&#x2F;pingdom.png&quot;&gt;&lt;img src=&quot;&#x2F;blog&#x2F;image-compression-for-website-speed&#x2F;pingdom-min.jpg&quot; alt=&quot;100% score from Pingdom tools&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;(I actually prefer the results from &lt;a href=&quot;https:&#x2F;&#x2F;www.webpagetest.org&#x2F;result&#x2F;180612_B9_3853bf53a2703c0582863edfd1f34791&#x2F;&quot;&gt;webpagetest.org&lt;&#x2F;a&gt;, and not just because it show my site as loading even faster.  It&#x27;s open-source and seems to have a better methodology.  But it doesn&#x27;t generate as pretty a picture, so I went with the Pingdom screenshot above.)&lt;&#x2F;p&gt;
&lt;p&gt;My home page loads in well under a second, and transfers only 2.4kb of data.  All of the pages in my site loaded their above-the-fold content without any blocking scripts or external CSS.  Plus, my site is served of of Netlify&#x27;s global CDN, so it attains basically the same speed for visitors from anywhere in the world.  I was generally satisfied with that result, and stopped thinking much about my site speed.&lt;&#x2F;p&gt;
&lt;p&gt;Then, today, I realized that I&#x27;d let things slip a bit; I&#x27;d uploaded a few
images without giving any thought to compression, and a couple of pages were
much larger—and therefore slower—than they had any right to be.&lt;&#x2F;p&gt;
&lt;p&gt;So, I decided to fix that.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;from-png-to-inline-svg&quot;&gt;From .PNG to inline .SVG&lt;&#x2F;h2&gt;
&lt;p&gt;The first step was to deal with the codesections logo on the &lt;a href=&quot;&#x2F;blog&quot;&gt;blog home page&lt;&#x2F;a&gt;.  This logo, as you might have noticed, is a section symbol surrounded by angle brackets: &amp;lt;§&amp;gt;.  To render that image, I&#x27;d lazily used a PNG file I had lying around from a previous project.  At 27kb, it wasn&#x27;t that large for a PNG file, but it was much larger than it needed to be and—since the logo is at the top of the page—meant that the above-the-fold content for my main blog page could never load in the first round trip of data sent by the server. (Due to a &lt;a href=&quot;https:&#x2F;&#x2F;tylercipriani.com&#x2F;blog&#x2F;2016&#x2F;09&#x2F;25&#x2F;the-14kb-in-the-tcp-initial-window&#x2F;&quot;&gt;quirk of the TCP protocol&lt;&#x2F;a&gt;, only 14kb of data are sent in the first round trip.)&lt;&#x2F;p&gt;
&lt;p&gt;So, I need to get that image a lot smaller.  The first step is to switch from the PNG file I&#x27;d lazily inserted and to an SVG. If you&#x27;re not familiar with SVGs (&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Scalable_Vector_Graphics&quot;&gt;Scalable Vector Graphics&lt;&#x2F;a&gt;), here are the basics: An SVG is a recording of an image that tells the computer how to draw it using shapes and lines.  So to draw a black circle, you might have an SVG &lt;a href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;SVG&#x2F;Element&#x2F;circle&quot;&gt;like this&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;svg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;viewBox&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;0 0 100 100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;xmlns&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;circle &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;cx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;cy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;svg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This contrasts with JPEG and PNG files, which (to grossly oversimplify), store information about the color of each pixel in the image.&lt;&#x2F;p&gt;
&lt;p&gt;All this means that, at least for simple images, there&#x27;s the possibility that an SVG can take up far less space—if it can describe a few simple shapes, it can create the same image with less data.&lt;&#x2F;p&gt;
&lt;p&gt;So, my first task is to get the logo as an SVG instead of a PNG.  I happen to also have an SVG version of the logo, so this task is easy—and, as an added bonus, it gets me a better-looking version of the logo too. So, we&#x27;ve gone from this image:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;image-compression-for-website-speed&#x2F;android-chrome-384x384.png&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;image-compression-for-website-speed&#x2F;android-chrome-384x384.png&quot; alt=&quot;PNG logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;which takes up 28 kb of data, to this image:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;image-compression-for-website-speed&#x2F;original-logo.svg&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;image-compression-for-website-speed&#x2F;original-logo.svg&quot; alt=&quot;First svg logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;Which takes up &amp;quot;only&amp;quot; 9.8kb.  But 9.8 is still way to large a fraction of our ~14kb budget.  How can we get it down further?&lt;&#x2F;p&gt;
&lt;p&gt;Well, after opening up this image for editing in Inkscape (a free-as-in-freedom SVG editor) and zooming in, we see something like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;image-compression-for-website-speed&#x2F;inkscape-screenshot.jpg&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;image-compression-for-website-speed&#x2F;inkscape-screenshot-min.jpg&quot; alt=&quot;Inkscape screenshot&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;If you look closely, you should be able to see a whole mess of grey boxes in that screenshot.  Each one of those is a &amp;quot;node&amp;quot;, and each one represents us telling the computer to draw a line from one point to another.  Looking at how many nodes we have, it&#x27;s clear what&#x27;s going on: We&#x27;re telling the computer &amp;quot;draw a straight line.  And then another. And then another …&amp;quot; and on and on.  We could be much more efficient if we just told the computer &amp;quot;draw one long straight line&amp;quot;.  And so that&#x27;s exactly what we&#x27;ll do.&lt;&#x2F;p&gt;
&lt;p&gt;Lets pause, first, to ask how the SVG got this way in the first place.  Why is the straight line in that angle bracket being represented as dozens of little lines instead of the one long line it should be?  This almost certainly happened because the SVG was created by converting a PNG or JPG to SVG.  The line in the PNG wasn&#x27;t perfectly straight—it was close but, pixels being square and all, it wasn&#x27;t quite 100% straight.  So, the SVG conversion did it&#x27;s best to approximate the almost-straight line by joining a series of straight lines.&lt;&#x2F;p&gt;
&lt;p&gt;But we can do better than that.  We know that the line really is straight, so we can delete all the nodes except for the first and the last and tell Inkscape to draw a line just from the first to last.  And, although it&#x27;s a bit more complicated, we can do the same with the curves as well.  After deleting the relevant nodes, we can get down to this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;image-compression-for-website-speed&#x2F;codesections_v3.svg&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;image-compression-for-website-speed&#x2F;codesections_v3.svg&quot; alt=&quot;revised SVG logo&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This image is now down to 2.6kb.  Is that the best we can do?&lt;&#x2F;p&gt;
&lt;p&gt;Not quite.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hand-editing-svg-files&quot;&gt;Hand-editing SVG files&lt;&#x2F;h2&gt;
&lt;p&gt;Remember how I said that an SVG is literally telling the computer to draw lines and shapes?  And remember the example of the plane black circle?  What that showed us was that SVGs are really just text files, which means we can open them up as text files and edit them by hand.&lt;&#x2F;p&gt;
&lt;p&gt;If we open up this latest SVG, here&#x27;s what we get:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;?&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;xml &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;version=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;1.0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; encoding=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;UTF-8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; standalone=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;no&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;?&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;svg
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;xmlns:dc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;http:&#x2F;&#x2F;purl.org&#x2F;dc&#x2F;elements&#x2F;1.1&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;xmlns:cc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;http:&#x2F;&#x2F;creativecommons.org&#x2F;ns#&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;xmlns:rdf&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;02&#x2F;22-rdf-syntax-ns#&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;xmlns:svg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;xmlns&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;http:&#x2F;&#x2F;www.w3.org&#x2F;2000&#x2F;svg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;svg4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;viewBox&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;0 0 697.000000 697.000000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;929.333&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;929.333&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;version&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;metadata
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;metadata10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;rdf:RDF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;cc:Work
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;         &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;rdf:about&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;dc:format&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;image&#x2F;svg+xml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;dc:format&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;dc:type
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;           &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;rdf:resource&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;http:&#x2F;&#x2F;purl.org&#x2F;dc&#x2F;dcmitype&#x2F;StillImage&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;dc:title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;dc:title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;cc:Work&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;rdf:RDF&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;metadata&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;defs
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;defs8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;path
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;style&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;fill:#000000;fill-opacity:1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;id&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;path2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;M 291.7501,128.4998 C 259.12035,154.45085 252.33043,196.38614
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;268.2,229.7 c 11.12395,20.29793 32.32727,29.24885 40.80011,37.54985
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;-36.56595,16.77496 -57.53011,44.33155 -59.25002,85.50003 -1.77838,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;64.12102 56.47868,91.467 99.00003,111.75004 39.87151,11.6827 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;56.99316,62.95427 29.25001,96.00003 -8.28965,12.60803 -52.14788,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;18.05768 -60.60013,-4.19995 -21.73612,-76.01451 -86.49645,-28.5634
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;-40.6499,24.44996 37.74022,20.30559 82.86095,23.41328 120.75004,-1.5
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;19.44032,-14.39791 39.56987,-47.70337 36.75001,-81.00003 -5.53921,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;-34.28839 -21.4429,-44.78456 -49.50002,-66.00002 61.99383,-32.5635
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;74.45652,-124.43646 21.75001,-155.25006 C 364.5592,249.90487
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;307.64442,232.63183 300.75011,196.74982 290.8481,145.89728 325.9521,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;132.17336 357,132.2498 c 29.40633,1.41536 33.74607,31.8798 41.25014,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;45.75002 31.72169,28.76918 39.619,-12.37961 34.50001,-27.00001 C 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;415.26091,98.989802 327.84563,104.77506 291.7501,128.4998 Z m 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;69.7500,292.5001 C 268.95774,381.01565 271.30101,320.71831 331.5,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;279.24985 c 100.47547,9.35417 81.67411,111.46981 30.00013,141.75005
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;z M 0.75000026,347.49988 C 42.664217,395.84147 168.85857,539.80643 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;207.75007,581.49996 c 0.37902,-33.59273 0.82917,-57.36989 0.75,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;-94.50003 -41.88686,-46.67619 -85.69273,-96.55522 -123.00004,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;-139.50005 37.58387,-49.87042 85.61892,-98.45817 123.00004,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;-143.25005 0.63705,-16.36965 -0.56839,-81.03471 -1.5,-93.00004
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;C 136.89127,195.44151 71.521089,271.04919 0.75000026,347.49988
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;Z M 487.50017,111.9998 c -0.49348,32.0443 -0.0766,56.35026 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;-1.7e-4,90.75003 38.75787,45.35593 96.72358,111.80538 123.75021,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;143.25005 C 568.4583,396.8741 526.8563,446.06682 487.5,490.74993
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;c 0.91441,10.6116 1.72887,82.29659 1.50017,90.75003 C 544.01547,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;518.88602 633.62692,420.84172 696.75024,345.99988 645.15898,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;287.19487 534.88535,164.32884 487.50017,111.9998 Z&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;svg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;That&#x27;s certainly a lot more complex than our circle example!  But even without parsing the whole SVG syntax, we can make a few observations right off the bat.  First, we can see that the top of the document contains a lot of metadata—data that we may be able to cut if we don&#x27;t need to record that much information.&lt;&#x2F;p&gt;
&lt;p&gt;Second, we can notice that the numbers in the long block of text are &lt;strong&gt;really precise&lt;&#x2F;strong&gt;.  In most of the numbers, we have 8 decimals of precision—far more than we&#x27;re likely to need, especially considering that we&#x27;re planning to use this image as a header in our logo.&lt;&#x2F;p&gt;
&lt;p&gt;So, lets edit our file to remove that precision and strip out some of the metadata we don&#x27;t need.  What does that leave us with?&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;svg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;175&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;175&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;viewBox&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;0 0 700 700&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;path &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;M 291,128 C 259,154 252,196 268,229 c 11,20 32,29 40,37 -36,16
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;-57,44 -59,85 -1,64 56,91 99,111 39,11 56,62 29,96 -8,12 -52,18 -60,-4 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;-21,-76 -86,-28 -40,24 37,20 82,23 120,-1 19,-14 39,-47 36,-81 -5,-34 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;-21,-44 -49,-66 61,-32 74,-124 21,-155 C 364,249 307,232 300,196 290,145
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;325,132 357,132 c 29,1 33,31 41,45 31,28 39,-12 34,-27 C 415,98 327,104
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;291,128 Z m 69,292 C 268,381 271,320 331,279 c 100,9 81,111 30,141 z M 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;0,347 C 42,395 168,539 207,581 c 0,-33 0,-57 0,-94 -41,-46 -85,-96 -123
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;,-139 37,-49 85,-98 123,-143 0,-16 -0,-81 -1,-93 C 136,195 71,271 0,347
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;Z M 487,111 c -0,32 -0,56 -1.7e-4,90 38,45 96,111 123,143 C 568,396 526,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;446 487,490 c 0,10 1,82 1,90 C 544,518 633,420 696,345 645,287 534,164
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;487,111 Z&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;svg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;At this point, we&#x27;ve reduced the file size down below a single kilobyte—in fact, we&#x27;ve gotten it down to only 817 bytes.&lt;&#x2F;p&gt;
&lt;p&gt;We can pull one final trick, however: we can &amp;quot;inline&amp;quot; the SVG; that is, we can include it directly into our HTML instead of linking it as an external file.  This has two advantages.  First, it means that our page has one fewer HTTP request to make, which further speeds up page load time.  Second, it means that we can compress the text of the SVG at the same time we compress our HTML—which means we can compress both a little bit more.  It&#x27;s always easier to compress a longer file than to compress two shorter files, since there will be more repetition and textual compression thrives on repetition.&lt;&#x2F;p&gt;
&lt;p&gt;So, we now have our image into the page, and have done so in a way that takes up hardly any space at all—less than one-twenty-eighth of what we started with.  We&#x27;ve achieved an ~97% reduction in storage space devoted to the image, and can declare victory.&lt;&#x2F;p&gt;
&lt;p&gt;At least, we can declare victory over the images that can be converted to SVGs. In the next post in this series, I&#x27;ll talk about how I&#x27;m compressing the images that &lt;strong&gt;can&#x27;t&lt;&#x2F;strong&gt; be converted to SVGs, including all the JPGs in this post itself.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>My (Paranoid) Git Setup</title>
                <pubDate>Sun, 10 Jun 2018 07:55:24 -0400</pubDate>
                <link>https://www.codesections.com/blog/my-git-setup/</link>
                <guid>https://www.codesections.com/blog/my-git-setup/</guid>
                <description>&lt;p&gt;Until recently, I had a very simple git workflow: I worked in a local repository, and then pushed my changes to a single remote, which lived at GitHub.  In the case of the &lt;a href=&quot;https:&#x2F;&#x2F;www.gitlab.com&#x2F;codesections&#x2F;codesections-website&quot;&gt;code for this site&lt;&#x2F;a&gt;, pushing to GitHub would automatically trigger a rebuild of the website and publish the changes live to the Internet. (Thanks, &lt;a href=&quot;https:&#x2F;&#x2F;www.netlify.com&quot;&gt;Netlify&lt;&#x2F;a&gt;!)&lt;&#x2F;p&gt;
&lt;p&gt;This setup had the virtue of simplicity, but it had three important drawbacks:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;I had no backups of any changes I&#x27;d made but not published.  For example, if I had a draft blog post, it lived &lt;em&gt;only&lt;&#x2F;em&gt; on my laptop, and thus could easily be lost.  This isn&#x27;t &lt;em&gt;that&lt;&#x2F;em&gt; big of a deal with my current workflow—unlike some &lt;a href=&quot;https:&#x2F;&#x2F;fosstodon.org&#x2F;@h4ck3r9&#x2F;100174544939337521&quot;&gt;some&lt;&#x2F;a&gt; bloggers, I don&#x27;t tend to keep a ton of posts as drafts.  Still, though, I&#x27;d like to not lose what I do have, and I always might keep more drafts in the future.&lt;&#x2F;li&gt;
&lt;li&gt;I was relying heavily on GitHub to publish updates to my site.  If GitHub were down or locked me out of my account or something, I would have no &lt;em&gt;easy&lt;&#x2F;em&gt; way to make posts to my blog.  I could migrate to a different git host or manually update Netlify, but it wouldn&#x27;t be seamless.&lt;&#x2F;li&gt;
&lt;li&gt;I had only one backup of the site, and that was on GitHub.  If anything happen to my computer, I&#x27;d be 100% relying on GitHub for all of my site content.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;So, over the past week, I decided to fix all of these issues.  With my new setup, I have:&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;A git server on a Raspberry Pi on my home LAN.&lt;&#x2F;li&gt;
&lt;li&gt;A git server on a cheep shared host.&lt;&#x2F;li&gt;
&lt;li&gt;A GitHub-hosted repository.&lt;&#x2F;li&gt;
&lt;li&gt;A GitLab-hosted repository.&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;And here&#x27;s my new workflow: As I&#x27;m working on content locally, I commit my changes and then &lt;code&gt;git push&lt;&#x2F;code&gt;, which is configured to push my changes &lt;em&gt;only&lt;&#x2F;em&gt; to the Pi.  When I&#x27;m ready to publish changes, run &lt;code&gt;git push all&lt;&#x2F;code&gt;, which pushes to all four remote repos, and triggers Netlify to rebuild the site.  (I also switched to using GitLab as the main repository that Netlify builds off of, but that was more of a reaction to the GitHub acquisition than a change related to the above.)&lt;&#x2F;p&gt;
&lt;p&gt;This means that I have a local backup of everything on the Pi and that I have three additional backups of the published content.  What&#x27;s more, if I ever lose access to GitLab, I could seamlessly switch back to GitHub and tell Netlify to build off of that repo, which eliminates a point of failure.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;m very happy with this new workflow, but it took a bit of figuring to get it all set up.  The rest of this post provides a guide for how to set up a similar workflow.  This may be old hat for people with a bit more git experience, but it took me some googling to figure out, so I thought it might be helpful to others.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;how-to-set-up-a-similar-workflow&quot;&gt;How to set up a similar workflow&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;1-initialize-a-local-git-repo-and-make-your-initial-commit&quot;&gt;1. Initialize a local git repo and make your initial commit&lt;&#x2F;h3&gt;
&lt;p&gt;(If you already have a local git repo set up, you can skip this step.)&lt;&#x2F;p&gt;
&lt;p&gt;From within the directory that contains your project, run &lt;code&gt;git init&lt;&#x2F;code&gt;, which creates a new repository.  Then run &lt;code&gt;git add .&lt;&#x2F;code&gt; to begin tracking all the files in the directory, and &lt;code&gt;git commit -am &amp;quot;Intial commit&amp;quot;&lt;&#x2F;code&gt; to commit the current state of your repository locally.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;2-push-your-changes-to-the-raspberry-pi-or-other-server-for-backup&quot;&gt;2. Push your changes to the Raspberry Pi (or other server for backup)&lt;&#x2F;h3&gt;
&lt;p&gt;First, SSH into the server you intend to use for backup of unpublished content—in my case, the local Pi.  For my setup, this means running &lt;code&gt;ssh pi@192.168.0.102&lt;&#x2F;code&gt;, but your command will differ depending on the username and IP address.&lt;&#x2F;p&gt;
&lt;p&gt;From the server, run &lt;code&gt;git init --bare &amp;lt;name_of_project&amp;gt;&lt;&#x2F;code&gt;.  The &lt;code&gt;--bare&lt;&#x2F;code&gt; flag tells git that there isn&#x27;t a local working directory, which will prevent it from viewing the lack of files as a problem.&lt;&#x2F;p&gt;
&lt;p&gt;Then, end the SSH session and run &lt;code&gt;git remote add origin &amp;lt;username&amp;gt;@&amp;lt;IP&amp;gt;:&amp;lt;path&#x2F;to&#x2F;project&amp;gt;&lt;&#x2F;code&gt;.  In my case, when setting up the repo for this site, I ran &lt;code&gt;git remore add origin pi@192.168.0.102:&#x2F;home&#x2F;pi&#x2F;projects&#x2F;codesections&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Run &lt;code&gt;git push --set-upstream master&lt;&#x2F;code&gt; to push to the server.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3-add-the-remote-servers-for-production-deployment&quot;&gt;3.  Add the remote servers for production deployment&lt;&#x2F;h3&gt;
&lt;p&gt;Up through this point, we&#x27;ve been using very basic git commands.  Here&#x27;s where it gets (slightly) more advanced.&lt;&#x2F;p&gt;
&lt;p&gt;In this example, we&#x27;ll be setting up three additional servers: one remote sever, a GitHub one, and a GitLab one.  But you could omit one or two of these severs if desired.&lt;&#x2F;p&gt;
&lt;p&gt;If you are running three, first SSH into the remote server and initialize the bare repo (the same process from step 2, above).  Then create new GitHub and GitLab repos using their web interface.&lt;&#x2F;p&gt;
&lt;p&gt;Finally, run the following commands:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git remote add all &amp;lt;gitlab-git-url&amp;gt;&lt;&#x2F;code&gt;.  (So, in my case &lt;code&gt;git remote add all git@gitlab.com:codesections&#x2F;codesections-website&lt;&#x2F;code&gt;.)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;git remote set-url all &amp;lt;github-git-url&amp;gt;&lt;&#x2F;code&gt;. (So, in my case &lt;code&gt;git remote set-url git@github.com:dsock&#x2F;codesections&lt;&#x2F;code&gt;.)&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;git remote set-url all &amp;lt;remote-server-url&amp;gt;&lt;&#x2F;code&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;git remote set-url all &amp;lt;pi-git-url&amp;gt;&lt;&#x2F;code&gt;. (In my case, &lt;code&gt;git remote set-url pi@192.168.0.102:&#x2F;home&#x2F;pi&#x2F;projects&#x2F;codesections&lt;&#x2F;code&gt;.)&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Now, you can run &lt;code&gt;git push all&lt;&#x2F;code&gt; to push your changes to all the remote repos.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Announcing pass-gen</title>
                <pubDate>Thu, 07 Jun 2018 16:44:57 -0400</pubDate>
                <link>https://www.codesections.com/blog/announcing-pass-gen/</link>
                <guid>https://www.codesections.com/blog/announcing-pass-gen/</guid>
                <description>&lt;p&gt;As I mentioned &lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;fixing-the-one-problem-with-password-managers&#x2F;&quot;&gt;last time&lt;&#x2F;a&gt;, I think many password managers have a serious flaw: they don&#x27;t have a way for you to generate a secure, memorable passphrase.  That means that, if you ever have to type your password in, you&#x27;re stuck typing in something like &lt;code&gt;{!]&amp;amp;Sk)r&amp;quot;ss|$K40:]PP&#x27;&#x27;3k-&lt;&#x2F;code&gt;—and nobody wants to type &lt;code&gt;{!]&amp;amp;Sk)r&amp;quot;ss|$K40:]PP&#x27;&#x27;3k-&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I also said that I&#x27;ve been using &lt;a href=&quot;https:&#x2F;&#x2F;www.bartbusschots.ie&#x2F;s&#x2F;publications&#x2F;software&#x2F;xkpasswd&#x2F;&quot;&gt;hsxkpasswd&lt;&#x2F;a&gt; to solve that issue and generate usable passphrases.  I like hsxkpasswd a lot, but there&#x27;s one thing I hate about it—it&#x27;s written in Perl.  It&#x27;s the only Perl program I have on my current computer, and it feels really burdensome to install an entire programming language just to generate a simple passphrase.  So, after being bugged by that, I finally decided to do something about it.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ve written pass-gen, a pure bash password generator.  I just used it to generate a password, and I got &lt;code&gt;UPTURNED!&lt;&#x2F;code&gt;​&lt;code&gt;gone!&lt;&#x2F;code&gt;​&lt;code&gt;DASH!&lt;&#x2F;code&gt;​&lt;code&gt;renewable!&lt;&#x2F;code&gt;​&lt;code&gt;GUIDE!&lt;&#x2F;code&gt;​&lt;code&gt;joystick!524&lt;&#x2F;code&gt;—hopefully much easier to type.  I had several goals for pass-gen:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;No dependencies.  The whole idea was to get away from Perl, so I don&#x27;t want to pull in Python, Node, or anything else that isn&#x27;t part of a bare Linux install.&lt;&#x2F;li&gt;
&lt;li&gt;Security.  I want pass-gen to be at least as secure as hsxkpasswd.  (I think I well exceeded this goal; based on my calculations, pass-gen should provide 93 bits of entropy using default settings, thanks largely to finding some better wordlists).&lt;&#x2F;li&gt;
&lt;li&gt;Customizability.  One of the features I love about hsxkpasswd is how customizable it is, and I want pass-gen to be just as customizable, if not more so.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;I believe I&#x27;ve achieved these goals with the initial v0.0.1 release, and would love to have any thoughts or feedback.  The current version has essentially achieved feature parity with hsxkpasswd—the only feature I&#x27;m missing is the ability to report on the entropy of generated passwords.&lt;&#x2F;p&gt;
&lt;p&gt;It also has what I hope will be a large advantage compared to hsxkpasswd in the security department.  This is largely due to the great work done by the Electronic Freedom Foundation, which has put together &lt;a href=&quot;https:&#x2F;&#x2F;www.eff.org&#x2F;dice&quot;&gt;several wordlists&lt;&#x2F;a&gt; designed to be used for dice-generated passwords.  Because pass-gen isn&#x27;t limited to physical dice, it uses a custom wordlist that combines all three of the EFF lists.  Since this list is much larger than the default hsxkpasswd wordlist, pass-gen provides far better out-of-the-box security.&lt;&#x2F;p&gt;
&lt;p&gt;Of course, both tools allow you to use custom wordlists.  And pass-gen ships with well over a dozen potential wordlists, many of which are vastly longer than even the combined EFF list and thus could provide even better security—though at the cost of not having been vetted for usability.&lt;&#x2F;p&gt;
&lt;p&gt;In the spirit of any good Linux&#x2F;Unix&#x2F;FOSS tool, pass-gen ships with an extensive man page, in addition to supporting a &lt;code&gt;--help&lt;&#x2F;code&gt; command and having a README.  Additionally, I&#x27;m happy to answer any questions about it, either here or on &lt;a href=&quot;https:&#x2F;&#x2F;fosstodon.org&#x2F;@codesections&quot;&gt;Mastodon&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;The source code is available at both &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;codesections&#x2F;pass-gen&quot;&gt;GitLab&lt;&#x2F;a&gt; and &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dsock&#x2F;pass-gen&quot;&gt;GitHub&lt;&#x2F;a&gt;, though I expect to primarily use GitLab going forward.&lt;&#x2F;p&gt;
&lt;p&gt;If you have any ideas for improvements, please let me know and I&#x27;ll add them to the roadmap (I already have ideas!).  If you like the project as it is, I&#x27;d greatly appreciate your sharing it with others; I think this could be an easy way for people who make good use of the command line to improve the usability of their passwords without any cost to security.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title></title>
                <pubDate>Sun, 03 Jun 2018 14:26:44 -0400</pubDate>
                <link>https://www.codesections.com/projects/reg-exp/capital-words/</link>
                <guid>https://www.codesections.com/projects/reg-exp/capital-words/</guid>
                <description>&lt;div class=&quot;content-wrapper&quot;&gt;
&lt;section class=&quot;page-header&quot;&gt;
&lt;h1 class=&quot;page-title&quot;&gt;RegEx Game&lt;&#x2F;h1&gt;
&lt;div class=&quot;page-discription&quot;&gt;
  &lt;h2 class=&quot;page-discription__title&quot;&gt;Capital Words&lt;&#x2F;h2&gt;
  &lt;p class=&quot;page-discription__details&quot;&gt;Validate whether a given string starts with a capital letter&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;a href=&quot;..&quot;&gt;
  &lt;div class=&quot;button button--back&quot;&gt;Back
  &lt;&#x2F;div&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;section&gt;
&lt;section class=&quot;regex-input&quot;&gt;
&lt;span class=&quot;regex-input__boarder&quot;&gt;&#x2F;&lt;&#x2F;span&gt;
&lt;input class=&quot;regex-solution&quot; type=&quot;text&quot; placeholder=&quot;RegEx solution…&quot;&gt; 
&lt;span class=&quot;regex-input__boarder&quot;&gt;&#x2F;&lt;&#x2F;span&gt;
&lt;div class=&quot;result-msg&quot;&gt;Make all words turn green to complete the challenge&lt;&#x2F;div&gt;
&lt;section class=&quot;desired-output&quot;&gt;
&lt;div class=&quot;should-match desired-output__title&quot;&gt;
  Should match
  &lt;div class=&quot;should-match-string&quot;&gt;Erik&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;PC&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;Microsoft&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;Hack Reactor&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;London&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;Alabama&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;should-not-match desired-output__title&quot;&gt;Should &lt;strong&gt;not&lt;&#x2F;strong&gt; match
  &lt;div class=&quot;should-not-match-string&quot;&gt;table&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;computer&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;hello&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;hEllo&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;$Hello&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;section&gt;
&lt;&#x2F;section&gt;&lt;&#x2F;div&gt;
</description>
            </item>
        
            <item>
                <title></title>
                <pubDate>Sun, 03 Jun 2018 14:26:44 -0400</pubDate>
                <link>https://www.codesections.com/projects/reg-exp/find-prices/</link>
                <guid>https://www.codesections.com/projects/reg-exp/find-prices/</guid>
                <description>&lt;div class=&quot;content-wrapper&quot;&gt;
&lt;section class=&quot;page-header&quot;&gt;
&lt;h1 class=&quot;page-title&quot;&gt;RegEx Game&lt;&#x2F;h1&gt;
&lt;div class=&quot;page-discription&quot;&gt;
  &lt;h2 class=&quot;page-discription__title&quot;&gt;Find Prices&lt;&#x2F;h2&gt;
  &lt;p class=&quot;page-discription__details&quot;&gt;Determine whether the given string is a valid price&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;a href=&quot;..&quot;&gt;
  &lt;div class=&quot;button button--back&quot;&gt;Back
  &lt;&#x2F;div&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;section&gt;
&lt;section class=&quot;regex-input&quot;&gt;
&lt;span class=&quot;regex-input__boarder&quot;&gt;&#x2F;&lt;&#x2F;span&gt;
&lt;input class=&quot;regex-solution&quot; type=&quot;text&quot; placeholder=&quot;RegEx solution…&quot;&gt; 
&lt;span class=&quot;regex-input__boarder&quot;&gt;&#x2F;&lt;&#x2F;span&gt;
&lt;div class=&quot;result-msg&quot;&gt;Make all words turn green to complete the challenge&lt;&#x2F;div&gt;
&lt;section class=&quot;desired-output&quot;&gt;
&lt;div class=&quot;should-match desired-output__title&quot;&gt;
  Should match
  &lt;div class=&quot;should-match-string&quot;&gt;$123&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;$0&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;$0.50&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;$99.99&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;$102472349.17&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;should-not-match desired-output__title&quot;&gt;Should &lt;strong&gt;not&lt;&#x2F;strong&gt; match
  &lt;div class=&quot;should-not-match-string&quot;&gt;hello&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;123&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;$0.577&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;$123.4.3&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;$823.h&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;section&gt;
&lt;&#x2F;section&gt;&lt;&#x2F;div&gt;
</description>
            </item>
        
            <item>
                <title></title>
                <pubDate>Sun, 03 Jun 2018 14:26:44 -0400</pubDate>
                <link>https://www.codesections.com/projects/reg-exp/hex-color-code/</link>
                <guid>https://www.codesections.com/projects/reg-exp/hex-color-code/</guid>
                <description>&lt;div class=&quot;content-wrapper&quot;&gt;
&lt;section class=&quot;page-header&quot;&gt;
&lt;h1 class=&quot;page-title&quot;&gt;RegEx Game&lt;&#x2F;h1&gt;
&lt;div class=&quot;page-discription&quot;&gt;
  &lt;h2 class=&quot;page-discription__title&quot;&gt;Hex Color Code&lt;&#x2F;h2&gt;
  &lt;p class=&quot;page-discription__details&quot;&gt;Determine Whether a given string is a valid Hex color code.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;a href=&quot;..&quot;&gt;
  &lt;div class=&quot;button button--back&quot;&gt;Back
  &lt;&#x2F;div&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;section&gt;
&lt;section class=&quot;regex-input&quot;&gt;
&lt;span class=&quot;regex-input__boarder&quot;&gt;&#x2F;&lt;&#x2F;span&gt;
&lt;input class=&quot;regex-solution&quot; type=&quot;text&quot; placeholder=&quot;RegEx solution…&quot;&gt; 
&lt;span class=&quot;regex-input__boarder&quot;&gt;&#x2F;&lt;&#x2F;span&gt;
&lt;div class=&quot;result-msg&quot;&gt;Make all words turn green to complete the challenge&lt;&#x2F;div&gt;
&lt;section class=&quot;desired-output&quot;&gt;
&lt;div class=&quot;should-match desired-output__title&quot;&gt;
  Should match
  &lt;div class=&quot;should-match-string&quot;&gt;#FFF&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;#abcabc&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;#123&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;#4d2&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;#83e9db&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;should-not-match desired-output__title&quot;&gt;Should &lt;strong&gt;not&lt;&#x2F;strong&gt; match
  &lt;div class=&quot;should-not-match-string&quot;&gt;#ffff&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;fff&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;123123&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;%FFF&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;#897f&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;#44444444&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;section&gt;
&lt;&#x2F;section&gt;&lt;&#x2F;div&gt; 
</description>
            </item>
        
            <item>
                <title></title>
                <pubDate>Sun, 03 Jun 2018 14:26:44 -0400</pubDate>
                <link>https://www.codesections.com/projects/reg-exp/one-a/</link>
                <guid>https://www.codesections.com/projects/reg-exp/one-a/</guid>
                <description>&lt;div class=&quot;content-wrapper&quot;&gt;
&lt;section class=&quot;page-header&quot;&gt;
  &lt;h1 class=&quot;page-title&quot;&gt;RegEx Game&lt;&#x2F;h1&gt;
  &lt;div class=&quot;page-discription&quot;&gt;
    &lt;h2 class=&quot;page-discription__title&quot;&gt;Does a Word Contain One &#x27;a&#x27;&lt;&#x2F;h2&gt;
    &lt;p class=&quot;page-discription__details&quot;&gt;Validate whether the given word contains one and only one letter &#x27;a&#x27;.&lt;&#x2F;p&gt;
  &lt;&#x2F;div&gt;
  &lt;a href=&quot;..&quot;&gt;
    &lt;div class=&quot;button button--back&quot;&gt;Back
    &lt;&#x2F;div&gt;
  &lt;&#x2F;a&gt;
&lt;&#x2F;section&gt;
&lt;section class=&quot;regex-input&quot;&gt;
  &lt;span class=&quot;regex-input__boarder&quot;&gt;&#x2F;&lt;&#x2F;span&gt;
  &lt;input class=&quot;regex-solution&quot; type=&quot;text&quot; placeholder=&quot;RegEx solution…&quot;&gt; 
  &lt;span class=&quot;regex-input__boarder&quot;&gt;&#x2F;&lt;&#x2F;span&gt;
  &lt;div class=&quot;result-msg&quot;&gt;Make all words turn green to complete the challenge&lt;&#x2F;div&gt;
&lt;section class=&quot;desired-output&quot;&gt;
  &lt;div class=&quot;should-match desired-output__title&quot;&gt;
    Should match
    &lt;div class=&quot;should-match-string&quot;&gt;Apple&lt;&#x2F;div&gt;
    &lt;div class=&quot;should-match-string&quot;&gt;Jan&lt;&#x2F;div&gt;
    &lt;div class=&quot;should-match-string&quot;&gt;hamburger&lt;&#x2F;div&gt;
    &lt;div class=&quot;should-match-string&quot;&gt;David&lt;&#x2F;div&gt;
    &lt;div class=&quot;should-match-string&quot;&gt;Sophia&lt;&#x2F;div&gt;
    &lt;div class=&quot;should-match-string&quot;&gt;example&lt;&#x2F;div&gt;
  &lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match desired-output__title&quot;&gt;Should &lt;strong&gt;not&lt;&#x2F;strong&gt; match
    &lt;div class=&quot;should-not-match-string&quot;&gt;Aaron&lt;&#x2F;div&gt;
    &lt;div class=&quot;should-not-match-string&quot;&gt;Tim&lt;&#x2F;div&gt;
    &lt;div class=&quot;should-not-match-string&quot;&gt;Ingi&lt;&#x2F;div&gt;
    &lt;div class=&quot;should-not-match-string&quot;&gt;Canvas&lt;&#x2F;div&gt;
    &lt;div class=&quot;should-not-match-string&quot;&gt;PC&lt;&#x2F;div&gt;
    &lt;div class=&quot;should-not-match-string&quot;&gt;hackreactor&lt;&#x2F;div&gt;
  &lt;&#x2F;div&gt;
&lt;&#x2F;section&gt;
&lt;&#x2F;section&gt;&lt;&#x2F;div&gt;
</description>
            </item>
        
            <item>
                <title></title>
                <pubDate>Sun, 03 Jun 2018 14:26:44 -0400</pubDate>
                <link>https://www.codesections.com/projects/reg-exp/username-validation/</link>
                <guid>https://www.codesections.com/projects/reg-exp/username-validation/</guid>
                <description>&lt;div class=&quot;content-wrapper&quot;&gt;
&lt;section class=&quot;page-header&quot;&gt;
&lt;h1 class=&quot;page-title&quot;&gt;RegEx Game&lt;&#x2F;h1&gt;
&lt;div class=&quot;page-discription&quot;&gt;
  &lt;h2 class=&quot;page-discription__title&quot;&gt;Username Validation&lt;&#x2F;h2&gt;
  &lt;p class=&quot;page-discription__details&quot;&gt;Determine whether a given username is valid according to the following restrictions: A username has to be between 6 and 10 characters and can only contain alphanumeric characters and &#x27;_&#x27;!&lt;&#x2F;p&gt;
  &lt;p class=&quot;page-discription__details&quot;&gt;&lt;strong&gt;Note:&lt;&#x2F;strong&gt; In production environments, having a maximum length for a password is a very bad practice.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;a href=&quot;..&quot;&gt;
  &lt;div class=&quot;button button--back&quot;&gt;Back
  &lt;&#x2F;div&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;section&gt;
&lt;section class=&quot;regex-input&quot;&gt;
&lt;span class=&quot;regex-input__boarder&quot;&gt;&#x2F;&lt;&#x2F;span&gt;
&lt;input class=&quot;regex-solution&quot; type=&quot;text&quot; placeholder=&quot;RegEx solution…&quot;&gt; 
&lt;span class=&quot;regex-input__boarder&quot;&gt;&#x2F;&lt;&#x2F;span&gt;
&lt;div class=&quot;result-msg&quot;&gt;Make all words turn green to complete the challenge&lt;&#x2F;div&gt;
&lt;section class=&quot;desired-output&quot;&gt;
&lt;div class=&quot;should-match desired-output__title&quot;&gt;
  Should match
  &lt;div class=&quot;should-match-string&quot;&gt;myname&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;ingikim&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;ingi_kim&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;alpha123&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;should-not-match desired-output__title&quot;&gt;Should &lt;strong&gt;not&lt;&#x2F;strong&gt; match
  &lt;div class=&quot;should-not-match-string&quot;&gt;myreallylongname&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;@symbol&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;ingi-kim&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;name&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;jfah&amp;amp;kf&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;section&gt;
&lt;&#x2F;section&gt;&lt;&#x2F;div&gt;
</description>
            </item>
        
            <item>
                <title></title>
                <pubDate>Sun, 03 Jun 2018 14:26:44 -0400</pubDate>
                <link>https://www.codesections.com/projects/reg-exp/valid-number/</link>
                <guid>https://www.codesections.com/projects/reg-exp/valid-number/</guid>
                <description>&lt;div class=&quot;content-wrapper&quot;&gt;
&lt;section class=&quot;page-header&quot;&gt;
&lt;h1 class=&quot;page-title&quot;&gt;RegEx Game&lt;&#x2F;h1&gt;
&lt;div class=&quot;page-discription&quot;&gt;
  &lt;h2 class=&quot;page-discription__title&quot;&gt;Valid Number?&lt;&#x2F;h2&gt;
  &lt;p class=&quot;page-discription__details&quot;&gt;Match a valid phone number&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;a href=&quot;..&quot;&gt;
  &lt;div class=&quot;button button--back&quot;&gt;Back
  &lt;&#x2F;div&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;section&gt;
&lt;section class=&quot;regex-input&quot;&gt;
&lt;span class=&quot;regex-input__boarder&quot;&gt;&#x2F;&lt;&#x2F;span&gt;
&lt;input class=&quot;regex-solution&quot; type=&quot;text&quot; placeholder=&quot;RegEx solution…&quot;&gt; 
&lt;span class=&quot;regex-input__boarder&quot;&gt;&#x2F;&lt;&#x2F;span&gt;
&lt;div class=&quot;result-msg&quot;&gt;Make all words turn green to complete the challenge&lt;&#x2F;div&gt;
&lt;section class=&quot;desired-output&quot;&gt;
&lt;div class=&quot;should-match desired-output__title&quot;&gt;
  Should match
  &lt;div class=&quot;should-match-string&quot;&gt;(123) 321-4444&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;444-444-9898&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;000.123.4321&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;(111) 111-1111&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;752-491-4234&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;should-not-match desired-output__title&quot;&gt;Should &lt;strong&gt;not&lt;&#x2F;strong&gt; match
  &lt;div class=&quot;should-not-match-string&quot;&gt;(2342) 342-444&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;4447864673&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;(231) 770-000&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;111.111.232.1&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;888,888,8976&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;section&gt;
&lt;&#x2F;section&gt;&lt;&#x2F;div&gt; 
</description>
            </item>
        
            <item>
                <title></title>
                <pubDate>Sun, 03 Jun 2018 14:26:44 -0400</pubDate>
                <link>https://www.codesections.com/projects/reg-exp/validate-password/</link>
                <guid>https://www.codesections.com/projects/reg-exp/validate-password/</guid>
                <description>&lt;div class=&quot;content-wrapper&quot;&gt;
&lt;section class=&quot;page-header&quot;&gt;
&lt;h1 class=&quot;page-title&quot;&gt;RegEx Game&lt;&#x2F;h1&gt;
&lt;div class=&quot;page-discription&quot;&gt;
  &lt;h2 class=&quot;page-discription__title&quot;&gt;Validate Password&lt;&#x2F;h2&gt;
  &lt;p class=&quot;page-discription__details&quot;&gt;Validate a password to have the following criteria: 8-16 characters must include: 1 lowercase, 1 uppercase, 1 number only lowercase, uppercase, and numbers are valid&lt;&#x2F;p&gt;
  &lt;p class=&quot;page-discription__details&quot;&gt;&lt;strong&gt;Note:&lt;&#x2F;strong&gt; In a production environment, having a maximum length for a password is a very bad practice, and banning special characters is a bad practice.&lt;&#x2F;p&gt;
&lt;&#x2F;div&gt;
&lt;a href=&quot;..&quot;&gt;
  &lt;div class=&quot;button button--back&quot;&gt;Back
  &lt;&#x2F;div&gt;
&lt;&#x2F;a&gt;
&lt;&#x2F;section&gt;
&lt;section class=&quot;regex-input&quot;&gt;
&lt;span class=&quot;regex-input__boarder&quot;&gt;&#x2F;&lt;&#x2F;span&gt;
&lt;input class=&quot;regex-solution&quot; type=&quot;text&quot; placeholder=&quot;RegEx solution…&quot;&gt; 
&lt;span class=&quot;regex-input__boarder&quot;&gt;&#x2F;&lt;&#x2F;span&gt;
&lt;div class=&quot;result-msg&quot;&gt;Make all words turn green to complete the challenge&lt;&#x2F;div&gt;
&lt;section class=&quot;desired-output&quot;&gt;
&lt;div class=&quot;should-match desired-output__title&quot;&gt;
  Should match
  &lt;div class=&quot;should-match-string&quot;&gt;Password1234&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;111xxxYY&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;123456aA&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;fhewoh123EWD&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-match-string&quot;&gt;12345abcdeFGHIJK&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;div class=&quot;should-not-match desired-output__title&quot;&gt;Should &lt;strong&gt;not&lt;&#x2F;strong&gt; match
  &lt;div class=&quot;should-not-match-string&quot;&gt;#Password1234&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;12345aA&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;no$pesialCharacter5&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;paws&amp;amp;*fsB&lt;&#x2F;div&gt;
  &lt;div class=&quot;should-not-match-string&quot;&gt;ThisIsTooLongOfAPassword&lt;&#x2F;div&gt;
&lt;&#x2F;div&gt;
&lt;&#x2F;section&gt;
&lt;&#x2F;section&gt;&lt;&#x2F;div&gt;
</description>
            </item>
        
            <item>
                <title>This Website</title>
                <pubDate>Sun, 03 Jun 2018 13:42:25 -0400</pubDate>
                <link>https://www.codesections.com/projects/codesections-website/</link>
                <guid>https://www.codesections.com/projects/codesections-website/</guid>
                <description>&lt;p&gt;The website you&#x27;re reading right now!  I tried to do things a bit differently with this website.&lt;&#x2F;p&gt;
&lt;p&gt;In building this website, I had three main goals.  I wanted the site to:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;have understandable source code,&lt;&#x2F;li&gt;
&lt;li&gt;be self-sufficient, and&lt;&#x2F;li&gt;
&lt;li&gt;be the &lt;a href=&quot;https:&#x2F;&#x2F;hackernoon.com&#x2F;10-things-i-learned-making-the-fastest-site-in-the-world-18a0e1cdf4a7&quot;&gt;fastest site in the world&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Here is my analysis of how well I managed to meet these goals.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;understandable-source-code&quot;&gt;Understandable Source Code&lt;&#x2F;h2&gt;
&lt;p&gt;Why do I want to write a page with understandable source code?  To answer that, I want to first talk about Richard Feynman and transistor radios.&lt;&#x2F;p&gt;
&lt;p&gt;The Nobel-prize-winning physicist Richard Feynman wrote about his early childhood experience repairing transistor radios in the 1930s.  In case you haven&#x27;t seen a transistor radio, they look like this:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;&#x2F;radio-min-20.jpg&quot;&gt;&lt;img src=&quot;&#x2F;radio-min-20.jpg&quot; alt=&quot;Transistor radio; image credit: Wikipedia&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;By contrast, a modern radio receiver is so small that millions of people &lt;a href=&quot;https:&#x2F;&#x2F;www.cnet.com&#x2F;how-to&#x2F;unlock-the-secret-fm-tuner-in-your-android-phone&#x2F;&quot;&gt;had one inside their cellphones and didn&#x27;t even realize it&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Why am I talking about radios on a page about this website?  Because Feynman was able to learn and apply basic physics in a way that children today basically can&#x27;t.  Radios have gotten too miniaturized, have had their complexity hidden away where no one can learn from it.  And I see the same thing happening with websites&lt;&#x2F;p&gt;
&lt;p&gt;Here&#x27;s a (slightly modified) copy of the markup from the beginning of &lt;a href=&quot;http:&#x2F;&#x2F;info.cern.ch&#x2F;hypertext&#x2F;WWW&#x2F;TheProject.html&quot;&gt;an extremely early website&lt;&#x2F;a&gt;:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;The World Wide Web project&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;World Wide Web&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;The WorldWideWeb (W3) is a wide-area
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;“WhatIs.html”&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;hypermedia&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;information retrieval initiative aiming to
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;give universal access to a large universe
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;of documents.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Everything there is online about W3 is
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;linked directly or indirectly to this document,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;including an &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;“Summary.html”&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;executive
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;summary&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; of the project.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Even if you&#x27;ve never read a word of markup before in your life, you can probably just about figure out what that does—that it creates a header (with a title for the page) and then creates a body of the document that consists of several paragraphs with some text and a few links to other html pages.&lt;&#x2F;p&gt;
&lt;p&gt;In contrast to that, consider this excerpt from the markup for a &lt;a href=&quot;http:&#x2F;&#x2F;www.businessinsider.com&#x2F;flashback-this-is-what-the-first-website-ever-looked-like-2011-6&quot;&gt;modern news article&lt;&#x2F;a&gt; &lt;em&gt;about&lt;&#x2F;em&gt; that early site.  The markup starts like this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;DOCTYPE&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;xmlns&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;http:&#x2F;&#x2F;www.w3.org&#x2F;1999&#x2F;xhtml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;xml:lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;en&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;xmlns:fb&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;http:&#x2F;&#x2F;www.facebook.com&#x2F;2008&#x2F;fbml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;http-equiv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;X-UA-Compatible&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;IE=edge&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt; &#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;http-equiv&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;content-type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;text&#x2F;html;charset=utf-8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt; &#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;script &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;text&#x2F;javascript&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;.NREUM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;||&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;NREUM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;={})).loader_config={
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;xpid:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;UQ8EUVRACQAFVVdbAQk=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;};
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;.NREUM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;||&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;NREUM&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;={})
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;__nr_require&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;){
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;function &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;){&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;]){&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;]={exports:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;{}};&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;].&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;call&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;.exports,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;){
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;t&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;][&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;];&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;||&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;)},&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;.exports)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;].exports}&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;function&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;typeof &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;__nr_require&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;__nr_require&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;for&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;.length;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;++)&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;o&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;]);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;That is, with JavaScript that has been inlined an minified to the point of being gibberish, even to experienced programmers. Even if we give the article the benefit of skipping past 502 lines (!) of inline JavaScript, we get to this:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;nav &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;l-nav l-nav-centered&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;data-nav data-e2e-name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;l-nav&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;data-track-page-area&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;Navigation&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;section &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;container&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;ul &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;row verticals list-unstyled&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;li &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;verticals-flex-grow verticals-listitem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;data-vertical-label&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;tech&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;sai&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;verticals-listitem-link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;data-e2e-name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;vertical-listitem-link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;data-vertical-listitem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;Tech&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;span &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;verticals-listitem-label&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Tech&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;span&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;                                      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;li &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;verticals-flex-grow verticals-listitem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;data-vertical-label&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;finance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;clusterstock&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;verticals-listitem-link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;data-e2e-name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;vertical-listitem-link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;data-vertical-listitem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;Finance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;span &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;verticals-listitem-label&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Finance&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;span&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;                                      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;li &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;verticals-flex-grow verticals-listitem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;data-vertical-label&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;politics&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;politics&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;verticals-listitem-link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;data-e2e-name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;vertical-listitem-link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;data-vertical-listitem&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;Politics&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;span &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;verticals-listitem-label&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Politics&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;span&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;All that is to say that html and CSS markup, at their best, can be like the transistor radio.  They can be a toy that anyone motivated and curious enough can pull apart and see how it works.  For so many of today&#x27;s programmers, who grew up with (or before) the Internet, that&#x27;s exactly what html was.&lt;&#x2F;p&gt;
&lt;p&gt;But I worry that today&#x27;s html is much more like the tiny, miniaturized radio inside a cell phone—a marvel of engineering, perhaps, but so complex that it (seems to be) outside the realm of understanding for any non-expert.&lt;&#x2F;p&gt;
&lt;p&gt;So, with this website, I&#x27;m pushing back against that trend.  I&#x27;ve built a highly performant, modern website—but one with markup that is just as understandable as the websites from 1991. Like the radios that Feynman repaired, this is a website that anyone can take apart to see how it works.&lt;&#x2F;p&gt;
&lt;p&gt;To that end, I&#x27;ve left in the comments and have not minified any of the source.  This bloats the page a bit, because those comments get sent to your computer even if you don&#x27;t read them.   Nevertheless, I&#x27;ve kept the page tiny and &lt;em&gt;fast&lt;&#x2F;em&gt;—the total page weight is still under 14kb, which means it loads in a single http request.&lt;&#x2F;p&gt;
&lt;p&gt;Below, I have an annotated copy of the markup from the home page.  Anytime I do something non-standard or that is debatable, I&#x27;ll provide a comment explaining why I made the choice I did and what I&#x27;m trying to achieve. If you disagree with any of my choices, feel free to let me know via email, twitter, or any of the contact methods in the site footer.  I&#x27;d love to discuss it with you.&lt;&#x2F;p&gt;
&lt;div style=&quot;position: relative; left: calc(50% - 48.5vw); display: flex; width: 97vw;&quot;&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;charset&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;UTF-8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;viewport&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;width=device-width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;link &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;rel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;apple-touch-icon&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;sizes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;180x180&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;apple-touch-icon.png&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;link &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;rel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;icon&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;image&#x2F;png&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;sizes&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;16x16&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;favicon-16x16.png&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;link &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;rel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;manifest&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;manifest.json&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;link &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;rel&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;mask-icon&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;safari-pinned-tab.svg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;#5bbad5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;theme-color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;#d9d9d9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;style&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt; 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*==================================*\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;##All CSS for this page
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;\*==================================*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*  Theme colors:
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;*
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;*  #fd0     yellow (menu bar [old])
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;*  #cde     pastel blue (note boxes)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;*  #000     true black (site header)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;*  #4F82BB; Dark Blue  (Nav bar)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;*  #223     near black (text &amp;amp; logo)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;*  #fff     white (menu text)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;*  #07e     sky blue (links)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*==================================*\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;##Global
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;\*==================================*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;font-family&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;-apple-system&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;               &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;BlinkMacSystemFont&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;               &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;Segoe UI&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;#39;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;               &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;Roboto&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;               &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;Helvetica Neue&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;#39;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;               &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;Arial&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;, sans-serif;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#223&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*near black*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*==================================*\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;##Nav bar
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;\*==================================*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.nav-bar &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;position&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: fixed;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;z-index&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;left&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;padding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;background-color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#4F82BB&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*Dark Blue*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;box-shadow&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0 3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px rgba&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;.3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.nav-bar--top &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.nav-bar__container &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: flex;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;max-width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;700&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*max comfortable line length*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;padding-left&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;padding-right&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;8&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: auto;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;justify-content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: space-between;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.nav-bar__button &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;position&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: relative;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*  This isn&amp;#39;t needed for display of this element,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;*  but important for the :after pseudo element
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;*  below. *&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;cursor&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: pointer;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;background-color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: inherit;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1.25&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.nav-bar__button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;:not(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.nav-bar__button--current-page&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;white&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.nav-bar__link &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: inherit;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;text-decoration&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: none;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.nav-bar__link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;::selection &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;background-color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: inherit;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: inherit;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.nav-bar__link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;:after &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;position&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: absolute;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;bottom&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;left&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &amp;quot;&amp;quot;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;transition&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: all &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0.4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;s &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;ease;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;border-top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;solid &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#223&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*near black*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.nav-bar__button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;:not(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.nav-bar__button--current-page&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.nav-bar__link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;:hover:after &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.svg__logo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;40&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;@media &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;max-width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;599&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;) { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*Phone only*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.nav-bar__button &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;font-size&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1.382&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;line-height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1.382&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*  The goal is creating a larger target for
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;*  touch navigation while also shrinking
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;*  the amount of horizontal space devoted to
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;     &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;*  the menu.*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;@media &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;min-width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;600&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;) {  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*Tablet-portrait &amp;amp; up*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.nav-bar__button &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;font-size&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.svg__logo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;64&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*==================================*\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;##Main content
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;\*==================================*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.content-main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin-top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;min-height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;calc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;vh - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;2.9&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*  This equals [fullscreen - (top margin) -
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;*  (space for the 2-line footer, with margin)]*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;max-width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;700&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*  Match nav container width*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin-left&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: auto;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin-right&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: auto;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;padding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;.1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;font-size&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1.15&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;line-height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1.6&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#444&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;article &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;padding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;.75&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;padding-top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;border-style&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: solid;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;border-color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#f2f2f2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;border-radius&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;13.3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;border-width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1.5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin-top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin-bottom&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;box-shadow&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;25&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#f2f2f2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;@media &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;min-width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;:  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;600&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;) { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*Tablet-portrait &amp;amp; up*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;article &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin-top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.site-header&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin-bottom&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin-top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;text-align&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: left;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;font-size&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1.618&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;font-weight&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;400&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;line-height&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;.85&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.content-p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#223&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*near black*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin-top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin-bottom&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#07e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*sky blue*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;text-decoration&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: none;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.note &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;background-color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#cde&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;* Pastel blue*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: block;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;padding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;.5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin-top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#0d1d25&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*near black*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;border&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: solid &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#0d1d25&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;* Near black*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;p code&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;ul code &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;padding&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#c0341d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;background-color&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;#fbe5e1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;border-radius&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;3&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;pre &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;overflow&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: scroll;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;img &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;100&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;%&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.highlight &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;overflow&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: auto;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.header__blog &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: auto;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;175&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: fit-content;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;position&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: relative;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin-top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;-5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin-bottom&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;-15&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;@media &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;min-width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;:  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;600&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;) { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*Tablet-portrait &amp;amp; up*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;header__blog &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin-right&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;calc&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;50&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;% - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;55&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.blog-title &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;position&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: absolute;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: inline;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;54&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.blog-title--left &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;right&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;180&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: none;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.blog-title--right &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;left&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;180&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: none;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;@media &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;min-width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;:  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;600&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;) { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*Tablet-portrait &amp;amp; up*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.blog-title--right&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.blog-title--left &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: inline;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.pagination-nav &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;display&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: flex;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;justify-content&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: space-around;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;@media &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;min-width&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;:  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;600&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;px&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;) { &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*Tablet-portrait &amp;amp; up*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.site-header &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;font-size&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;:  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;2.618&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;padding-top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;vh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;padding-bottom&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;vh&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&#x2F;*==================================*\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;##Footer
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;\*==================================*&#x2F;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;.footer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;margin-top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#6c71c4;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;em&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;text-align&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;: center;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;style&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;nav &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;nav-bar nav-bar--top&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;nav-bar__container&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;nav-bar__button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;nav-bar__link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Home&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;nav-bar__button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;nav-bar__link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;about&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;About&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;nav-bar__button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;!-- The code for the site logo, which is an inline SVG because that loads faster--&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;svg &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;svg__logo&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;viewBox&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;0 60 700 700&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;circle &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;r&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;412.74&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;fill&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;#4F82bb&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;cy&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;250&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;cx&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;350&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;circle&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;        
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;path &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;d&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;M 291,128 C 259,154 252,196 268,229 c 11,20
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;32,29 40,37 -36,16 -57,44 -59,85 -1,64 56,91 99,111 39,11
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;56,62 29,96 -8,12 -52,18 -60,-4 -21,-76 -86,-28 -40,24 37,20
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;82,23 120,-1 19,-14 39,-47 36,-81 -5,-34 -21,-44 -49,-66 61,-32
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;74,-124 21,-155 C 364,249 307,232 300,196 290,145 325,132 357,132
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;c 29,1 33,31 41,45 31,28 39,-12 34,-27 C 415,98 327,104 291,128 Z
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;m 69,292 C 268,381 271,320 331,279 c 100,9 81,111 30,141 z M 0,347
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;C 42,395 168,539 207,581 c 0,-33 0,-57 0,-94 -41,-46 -85,-96
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;-123,-139 37,-49 85,-98 123,-143 0,-16 -0,-81 -1,-93 C 136,195
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;71,271 0,347 Z M 487,111 c -0,32 -0,56 -1.7e-4,90 38,45 96,111
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;123,143 C 568,396 526,446 487,490 c 0,10 1,82 1,90 C 544,518
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;633,420 696,345 645,287 534,164 487,111 Z&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt; &#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;svg&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;nav-bar__button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;nav-bar__link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;blog&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Blog&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;nav-bar__button&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;nav-bar__link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;projects&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Projects&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;nav&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;section &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;content-main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;h1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;site-header&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; I’m Daniel Sockwell, a
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;web developer who started coding in an odd way: 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;I was a lawyer in New York, when my firm needed
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;a coding lawyer.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;content-p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Lawyers and programmers are
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;both incredibly logical, but somehow they don&amp;#39;t
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;always speak the same language.  My goal is to
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;bridge that gap, by being skilled in both
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;domains—and the first step in doing that is
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;leveling up my programming skills.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt; 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;content-p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;As part of that process,
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;I&amp;#39;ve built this site to provide a home for the
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;projects&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;projects&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;I&amp;#39;ll build along the way—and to take the
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;opportunity to build a
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;projects&#x2F;codesections-website&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;website that is like Richard
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Feynman’s radios&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;section&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;footer &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;footer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;footer_copyright&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;© 2018 |
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;index.xml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;type&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;application&#x2F;rss+xml&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;RSS &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; |
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;license&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  Some Rights Reserved&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div &lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;class=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;footer_contact&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;https:&#x2F;&#x2F;gitlab.com&#x2F;codesections&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;GitLab&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; |
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;dsock&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;GitHub&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; |
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;daniel-sockwell&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;LinkedIn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; |
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;https:&#x2F;&#x2F;fosstodon.org&#x2F;@codesections&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Mastodon&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; |
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;link&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;mailto:daniel-public-email@codesections.com&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Email&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;footer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;script &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;src&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;livereload.js?port=1112&amp;amp;mindelay=10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;script&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;&lt;pre class=&quot;commentary__pre&quot;&gt;


    Prevents phones from &quot;zooming out&quot;
    to display a window&#x2F;viewport into
    the page.  This behavior is helpful
    for sites that are not optimized
    for mobile presentation, but isn&#x27;t
    helpful for this site because it
    contains mobile-specific css styles



















    These next several lines link to
    various favicon icons (the little
    icon that shows up in your tab on
    most modern browsers.  Many sites
    just link to 1 favicon, but that
    results in either sending much too
    large of an icon to all browsers
    (reducing page speed) on in sending
    an icon that isn&#x27;t optimized the
    the relevant browser.  This code
    instead sends just the correct icon
    for each browser.  See
    [realfavicongenerator.net](https:&#x2F;&#x2F;realfavicongenerator.net&#x2F;)
    (which is also the site I used to
    generate these icons) for more
    details.


















    This is the CSS style for the site. 
    A few notes:

    First, some people would consider
    it poor practice to inline all the CSS
    as I have instead of linking to an external
    file with the css. Linking to an external
    file has several advantages that make it
    much more widely used:

    &lt;ul&gt;
      &lt;li&gt;It is more maintainable.  Different
      pages on the site can all link to the same
      css file, which means that changing
      formatting for a particular element only
      requires changing the single css file. 
      In contrast, if I want to change, say, the
      color of the navigation bar, then I have to
      change that piece of css in all my files.
      &lt;&#x2F;li&gt;
      &lt;li&gt;
      It is typically faster for repeat visitors
      (or people who visit the site more than once).
      Once someone has downloaded the css for the first
      time, the css file will be cached locally, and
      they won&#x27;t need to request it from the server. 
      This means that subsequent requests will be able
      to load the local resource, which is faster.
      &lt;&#x2F;li&gt;
      &lt;li&gt;
      It allows resources to be downloaded in parallel.
      Modern browsers can download multiple files at the
      same time, which means that the browser can download
      something else while it is downloading the first
      css file (such as an image or other css file). 
      In contrast, with inline css, the browser won&#x27;t start
      downloading any resources until it has fully
      downloaded and parsed the html file.
      &lt;&#x2F;li&gt;
    &lt;&#x2F;ul&gt;

    So, given all those arguments, why did I decide to
    inline the css for this page?  A few reasons.
    First of all, most of those arguments only apply
    to this site very slightly (if at all). 
    This site is small enough that editing multiple
    files isn&#x27;t much of a burden [EDIT: and is now
    done with a Static Site Generator, eliminating 
    the need to edit multiple files], and I&#x27;m
    prioritizing speed and simplicity so much that
    each page of this site fits into the initial
    14kb TCP request--so my speed penalty for repeat
    visitors for inline css is minimal (at most
    ~20ms, even on very slow systems).

    There are also a few advantages to inlining my css. 
    Most importantly, it reduces load time for first-time
    visitors.  You only get one chance to make a first
    impression, and I want this it to be a fast one.
    Inlining all css (and keeping the page size below 14kb)
    means that we can load the page in a single round-trip
    from the server--the fastest possible scenario.
    (This isn&#x27;t true for pages that have images, but most
    of my pages don&#x27;t, and even when they do it still
    reduces the number of requests.)

    Inlining the css also has advantages for my project
    of making this site as simple as Feynman&#x27;s radios. It
    lets me have a single source file that I can point to
    and say, &quot;There it is.  That file has all you need to
    know to understand that page on the site&quot;.  And I
    appreciate that simplicity.

    Second, the css is written with the BEM
    (Block-Element-Modifier) methodology. See getbem.com
  &lt;&#x2F;pre&gt;
&lt;&#x2F;div&gt;
&lt;h2 id=&quot;self-sufficient-website&quot;&gt;Self-Sufficient Website&lt;&#x2F;h2&gt;
&lt;p&gt;[Coming soon]&lt;&#x2F;p&gt;
&lt;h2 id=&quot;fast&quot;&gt;Fast&lt;&#x2F;h2&gt;
&lt;p&gt;[Coming soon]&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Reg Experiment</title>
                <pubDate>Sun, 03 Jun 2018 13:39:00 -0400</pubDate>
                <link>https://www.codesections.com/projects/regular-expression-project/</link>
                <guid>https://www.codesections.com/projects/regular-expression-project/</guid>
                <description>&lt;p&gt;A clone of &lt;a href=&quot;http:&#x2F;&#x2F;regexmatch.herokuapp.com&#x2F;#&#x2F;&quot;&gt;RegExceptional&lt;&#x2F;a&gt;, a HackReactor final project that consists of a matching game to help teach regular expressions.  My goal is to show that we can get exactly the same functionality without any frameworks and that the resulting site will not only look nearly identical, but will also load less data and do so faster.  The clone I built reduces the initial data transfer by 99.83%, and cuts the page load time from 600ms to right around 100ms, which I&#x27;m prepared to score as a victory.&lt;&#x2F;p&gt;
&lt;!--more--&gt;
</description>
            </item>
        
            <item>
                <title>Fixing the One Problem With Password Managers</title>
                <pubDate>Sun, 03 Jun 2018 11:43:27 -0400</pubDate>
                <link>https://www.codesections.com/blog/fixing-the-one-problem-with-password-managers/</link>
                <guid>https://www.codesections.com/blog/fixing-the-one-problem-with-password-managers/</guid>
                <description>&lt;p&gt;I recently tweaked the way I use my password manager, and it&#x27;s already
saved me considerable frustration.  Not only that, it&#x27;s also brought my
usage more in line with the Unix philosophy of using tools that do only
one thing, and do it well—and illustrated, once again, why that philosophy
is so great.&lt;&#x2F;p&gt;
&lt;p&gt;This post explains my tweak, and how you can apply it.  But first, some
background.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;password-managers&quot;&gt;Password managers&lt;&#x2F;h2&gt;
&lt;p&gt;I love password managers like Pass, 1Pass, KeePass, KeePassXC, LastPass (ok,
I&#x27;m sensing a theme here—and awarding zero points for creative naming!).&lt;&#x2F;p&gt;
&lt;p&gt;As Troy Hunt, the mad genius behind &lt;a href=&quot;https:&#x2F;&#x2F;HaveIBeenPwned.com&quot;&gt;HaveIBeenPwned&lt;&#x2F;a&gt;,
is fond of writing, &lt;a href=&quot;https:&#x2F;&#x2F;www.troyhunt.com&#x2F;only-secure-password-is-one-you-cant&#x2F;&quot;&gt;The only secure password is the one you can’t
remember&lt;&#x2F;a&gt;.
That is, if you can remember a password, then
it&#x27;s probably too short to be secure.  If it&#x27;s not, it might well be
&lt;a href=&quot;https:&#x2F;&#x2F;xkcd.com&#x2F;792&#x2F;&quot;&gt;one you&#x27;ve used before&lt;&#x2F;a&gt;—which
is even worse, since it means someone who figures out one of your passwords
suddenly has access to much more of your digital life.  So if you want to
avoid insecure passwords, you basically have to make a record of your
passwords.&lt;&#x2F;p&gt;
&lt;p&gt;And that basically means using a password manager to store an encrypted
vault containing your passwords.  If you pick a good password manager, you can
have it automatically generate a secure password for you, and automatically
type that password in whenever you log in.  Instead of struggling to remember
whether your password is 123qwe or 1q2w3e (both in the &lt;a href=&quot;https:&#x2F;&#x2F;www.huffingtonpost.com&#x2F;entry&#x2F;2016-most-common-passwords_us_587f9663e4b0c147f0bc299d&quot;&gt;top 25 most-used
passwords&lt;&#x2F;a&gt;, by the way), you&#x27;re using
a bulletproof password like &lt;a href=&quot;https:&#x2F;&#x2F;kevq.uk&#x2F;are-password-managers-worth-it&#x2F;&quot;&gt;F^EHHtSIbPyDm2&amp;amp;kHsPhSppNYwzQDg&lt;&#x2F;a&gt;.&lt;br &#x2F;&gt;
&lt;strong&gt;And&lt;&#x2F;strong&gt; you&#x27;re having that password filled in for you
automatically, without any memory struggles at all.  It&#x27;s really great.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;&#x2F;h2&gt;
&lt;p&gt;It&#x27;s really great … right until it&#x27;s not.  And then it&#x27;s really, really, not.  As anyone who&#x27;s used a password manager can tell you, eventually autofill
will fail you.  Maybe you need to log in on a computer or mobile device that
doesn&#x27;t have your passwords synced to it.  Maybe you have to use a service that
&lt;a href=&quot;https:&#x2F;&#x2F;www.troyhunt.com&#x2F;the-cobra-effect-that-is-disabling&#x2F;&quot;&gt;idiotically disables autofill in your
browser&lt;&#x2F;a&gt;.
Maybe you&#x27;ll be on the
phone with tech support on a spotty cell connection during a hail storm.  And,
when you are, you&#x27;ll really wish you could tell them that your password was
&lt;code&gt;qwerty&lt;&#x2F;code&gt; instead of &lt;code&gt;F^EHH&lt;&#x2F;code&gt;​&lt;code&gt;tSIbP&lt;&#x2F;code&gt;​&lt;code&gt;yDm2&amp;amp;k&lt;&#x2F;code&gt;​&lt;code&gt;HsPhSp&lt;&#x2F;code&gt;​&lt;code&gt;pNYw&lt;&#x2F;code&gt;​&lt;code&gt;zQDg&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;What you&#x27;d really like is to have a password that is just as
secure as &lt;code&gt;F^EHH&lt;&#x2F;code&gt;​&lt;code&gt;tSIbP&lt;&#x2F;code&gt;​&lt;code&gt;yDm2&amp;amp;k&lt;&#x2F;code&gt;​&lt;code&gt;HsPhSp&lt;&#x2F;code&gt;​&lt;code&gt;pNYw&lt;&#x2F;code&gt;​&lt;code&gt;zQDg&lt;&#x2F;code&gt; without being
anywhere near as difficult to type (or shout during that hail storm).
Fortunately, this is a famously solved problem:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;fixing-the-one-problem-with-password-managers&#x2F;xkcd_936.jpg&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;fixing-the-one-problem-with-password-managers&#x2F;xkcd_936.jpg&quot; alt=&quot;XKCD comic depicting use of a passphrase instead of a password&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;All you need to do is to use passphrases consisting of simple words
chained together, creating something long enough to be secure while
understandable enough to be easy to remember for long enough to type in.  If
you&#x27;re as paranoid as I am, you&#x27;ll throw in some special characters,
capitalization, or numbers, too, so that your final password is something like
&lt;code&gt;2222@&lt;&#x2F;code&gt;​&lt;code&gt;Correct@&lt;&#x2F;code&gt;​&lt;code&gt;Horse@&lt;&#x2F;code&gt;​&lt;code&gt;Battery@&lt;&#x2F;code&gt;​&lt;code&gt;Staple&lt;&#x2F;code&gt;.  That&#x27;s just as secure as the
unpronounceable password up above, and way easier to shout during a hail storm.&lt;&#x2F;p&gt;
&lt;p&gt;Of course, you really don&#x27;t want to be inventing these sorts of passwords on
your own.  For one thing, humans aren&#x27;t that good at randomness; for another,
that just sounds like a lot of work.  Fortunately, you don&#x27;t have to: Bart
Busschots has put together &lt;a href=&quot;https:&#x2F;&#x2F;xkpasswd.net&quot;&gt;an online tool&lt;&#x2F;a&gt; that
automates generating passwords like that (with
user-configurable settings about how many words, numbers, and special
characters to use).  I don&#x27;t know why any of the top password managers haven&#x27;t
incorporated a system like this into their password generating code (although
KeePassXC, to its credit, does let you generate a passphrase), but no
matter what password manager you use, you can go to that site, get your
passwords, and then save them to your preferred password vault.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;it-gets-even-better&quot;&gt;It gets even better&lt;&#x2F;h2&gt;
&lt;p&gt;If that was the best we could do, it&#x27;d be pretty great: we&#x27;d trade some
inconvenience when we generate the password (when we&#x27;re likely not time
constrained) in return for much greater convenience when we enter the password
without autofill.  But, with the right password manager, we can do
&lt;strong&gt;much&lt;&#x2F;strong&gt; better than that—and we can do it in a way that
exemplifies the advantages of the &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Unix_philosophy&quot;&gt;Unix philosophy&lt;&#x2F;a&gt; of having programs serve one, and only one, function.&lt;&#x2F;p&gt;
&lt;p&gt;Specifically, we can take advantage of the fact that Bart Busschots—in
addition to running the website mentioned above—released a very Unix-y
&lt;a href=&quot;https:&#x2F;&#x2F;www.bartbusschots.ie&#x2F;s&#x2F;publications&#x2F;software&#x2F;xkpasswd&#x2F;&quot;&gt;Perl script&lt;&#x2F;a&gt;
that generates the same sort of passwords, right from the command line.  I won&#x27;t go through the details of how to set up or configure the Perl
script, in part because Bart already lays out the details in &lt;a href=&quot;https:&#x2F;&#x2F;www.bartbusschots.ie&#x2F;s&#x2F;2015&#x2F;08&#x2F;22&#x2F;using-the-hsxkpasswd-terminal-command-part-1-of-2&#x2F;&quot;&gt;two
excellent&lt;&#x2F;a&gt; &lt;a href=&quot;https:&#x2F;&#x2F;www.bartbusschots.ie&#x2F;s&#x2F;2015&#x2F;09&#x2F;06&#x2F;using-the-hsxkpasswd-terminal-command-part-2-of-2&#x2F;&quot;&gt;blog posts&lt;&#x2F;a&gt;.  Suffice it
to say that, after following those directions, you can configure his script to
produce exactly the sort of password you&#x27;d like, whenever you type
&amp;quot;hsxkpasswd&amp;quot; in your terminal.  (Or, if you agree that that&#x27;s too many
consonants in a row to reliably remember, whenever you type whatever you&#x27;ve
aliased it to; I picked &amp;quot;xckd-pass&amp;quot;).&lt;&#x2F;p&gt;
&lt;p&gt;Now that we have a command line tool to generate our passwords, we can feed
those passwords into our password manager … or at least we can if we have a
password manager that follows the Unix philosophy and plays well with standard
input.  Sadly, many of them don&#x27;t.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;meet-pass&quot;&gt;Meet &quot;Pass&quot;&lt;&#x2F;h2&gt;
&lt;p&gt;Fortunately, there&#x27;s a tool called &lt;a href=&quot;https:&#x2F;&#x2F;www.passwordstore.org&#x2F;&quot;&gt;Pass&lt;&#x2F;a&gt;
that bills itself as &amp;quot;the standard unix password manager&amp;quot;.  This is a pretty
bold claim, especially for a program that was written in this century.  But,
despite the pomposity, Pass seems to back up its claims with real performance.&lt;&#x2F;p&gt;
&lt;p&gt;As Pass explains:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Password management should be simple and follow Unix philosophy.
With pass, each password lives &lt;em&gt;inside of a gpg encrypted file&lt;&#x2F;em&gt;
whose filename is
the title of the website or resource that requires the password. These
encrypted files may be organized into meaningful folder hierarchies, copied
from computer to computer, and, in general, manipulated using standard
command line file management utilities.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;That means we can use Pass without trusting it at all; all the encryption
is handled by GPG (the GNU Privacy Guard, which provides some of the best
crypto available anywhere).  It also means that we don&#x27;t need to rely on any
external software to sync our passwords, but can sync them the same way we
would sync any other file.  (I use a git sever running on a Raspberry Pi, but
Github, NextCloud, Dropbox, or any other way of syncing files would work
too).&lt;&#x2F;p&gt;
&lt;p&gt;And, most importantly for our purposes, it means that Pass plays well
with standard input.  Specifically, we can create a new username&#x2F;password
pair with the command &amp;quot;pass insert username&amp;quot;, and then Pass will prompt us
to type a password, and then to retype it to confirm.  This means that we can
use pipe the output from hsxkpasswd into Pass.  We could do that directly,
but we can simplify things with an &lt;em&gt;extremely&lt;&#x2F;em&gt; simple shell script that
does this for us:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#586e75;&quot;&gt;#!&#x2F;bin&#x2F;bash
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;NEWPASSWORD&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;hsxkpasswd&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;if [[ $&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;]]; then
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;-e &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;NEWPASSWORD&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;\n&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;NEWPASSWORD&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;| &lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;pass&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; insert &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;else
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;echo &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;Usage: pass-new &amp;lt;pass-name&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#859900;&quot;&gt;fi
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Once we have this script set somewhere in our path, we can just type &amp;quot;pass-
new [pass-name]&amp;quot; and have a xkcd-style password automatically saved in our
Pass database.  And then, of course, we can access it with all the normal Pass
commands, like &amp;quot;pass [pass-name] -c&amp;quot; to copy the password to our clipboard.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;summing-up&quot;&gt;Summing up&lt;&#x2F;h2&gt;
&lt;p&gt;So, bottom line: What have we done, and what did we accomplish?  Well, we:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Installed and configured &lt;a href=&quot;https:&#x2F;&#x2F;www.bartbusschots.ie&#x2F;s&#x2F;publications&#x2F;software&#x2F;xkpasswd&#x2F;&quot;&gt;hsxkpasswd&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Installed and set up &lt;a href=&quot;https:&#x2F;&#x2F;www.passwordstore.org&#x2F;&quot;&gt;Pass&lt;&#x2F;a&gt;.&lt;&#x2F;li&gt;
&lt;li&gt;Wrote some basic glue code to get them working together.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Having done all this, we can use a single command to create a new passphrase
and automatically add that passphrase to a password manager. That passphrase
is long enough—and contains enough special characters and numbers—to be just
as secure as any impossible-to-pronounce-or-remember password that our
password manager might have generated but is still much easier to type in when
our autofill inevitably fails us.  And all this has been possible because two
tools, written entirely independently, could be easily combined because both
followed the Unix philosophy.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;asside class=&quot;note&quot;&gt;
&lt;strong style=&quot;margin-left: 30%&quot;&gt;Room for improvement&lt;&#x2F;strong&gt;&lt;br&gt;
All that said, I am not &lt;em&gt;100%&lt;&#x2F;em&gt; satisfied with this setup.  The problem
is that hsxkpasswd is a Perl script and thus requires a Perl runtime.  This
was fine a few years ago when Perl was more dominant and most people already
had it installed.  But it feels a bit heavy in today&#x27;s
world—personally, hsxkpasswd is the only reason I have Perl installed on my
current computer.  So, it would be really nice if there were a version of
hsxkpasswd that was written in a more portable language—ideally bash, since
that&#x27;s what Pass is written in.  I&#x27;m currently playing with a bash script along
those lines, and may polish it up for public release if there&#x27;s any interest.
&lt;strong&gt;EDIT: Playing around led to &lt;a href=&quot;https:&#x2F;&#x2F;www.gitlab.com&#x2F;codesections&#x2F;pass-gen&quot;&gt;pass-gen&lt;&#x2F;a&gt;, which implements all my ideas and has now replaced the workaround described in this post.&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;aside&gt;
</description>
            </item>
        
            <item>
                <title>Greatness of Static Site Generators, Part II</title>
                <pubDate>Sun, 03 Jun 2018 11:40:46 -0400</pubDate>
                <link>https://www.codesections.com/blog/greatness-of-static-site-generators-ii/</link>
                <guid>https://www.codesections.com/blog/greatness-of-static-site-generators-ii/</guid>
                <description>&lt;p&gt;In the &lt;a href=&quot;&#x2F;blog&#x2F;why-static-site-generators-are-great&#x2F;&quot;&gt;last post&lt;&#x2F;a&gt;, we talked about the history of website hosting and the rise of dynamic websites powered by PHP.  Now, we’re going to turn to more recent history and see how content delivery networks have changed the nature of the modern web.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;content-delivery-networks-and-the-global-mobile-web&quot;&gt;Content Delivery Networks and the Global, Mobile Web&lt;&#x2F;h2&gt;
&lt;p&gt;One of the biggest advantages of the Internet is how global it is—if your site is hosted in Atlanta, it might get visitors from down the block, but it just as easily might get visitors from New York, or London, or Tokyo.  And that’s pretty incredible.  But it also raises a fundamental problem:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;To see your site, a visitor has to literally wait for data to be transmitted across the distance from your web server to their computer. And, because the world is a big place, and the speed of light is a bit slow, that can be a long wait (especially because the data likely won’t go in a straight line, but will &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Internet_backbone&quot;&gt;instead bounce around in a fascinating way&lt;&#x2F;a&gt; as it makes its way across the globe).&lt;&#x2F;p&gt;
&lt;p&gt;How big of a problem is this, really?  Well, it depends.  It might hardly matter at all, if you have a text-only website that has a local audience who visits it from a desktop computer with a high-speed Internet connection.  On the other hand, if you want your site to have high-definition pictures or, even worse, video, then it’s likely going to be a concern.  And that goes double if you think that many of your visitors might be browsing your site over slower internet connections, like those on cellular networks.  With how popular mobile browsing is these days, pretty much &lt;strong&gt;everyone&lt;&#x2F;strong&gt; should be thinking about that.  So, it depends, but it’s pretty likely that it matters for your site.&lt;&#x2F;p&gt;
&lt;p&gt;Your Atlanta-hosted site might be blazingly fast in Rome, GA, but very slow in Rome, Italy.  If only there were a way for your visitors from Italy to get the same experience that your visitors in Georgia get.&lt;&#x2F;p&gt;
&lt;p&gt;Of course, there is: you can host a second copy of your website in Venice and redirect your Italian visitors to that site.  So then your Italian visitors will get the same experience as your Georgian visitors … unless, of course, we’re talking about the Georgia that boarders Russia, in which case they’ll still be out of luck.  To get those visitors a fast experience, you’ll need to host a copy of your website close to them, and then one (or several!) close to your visitors from Asia.  And, while we’re at it, California isn’t really that close to Atlanta, nor is London that close to Venice …&lt;&#x2F;p&gt;
&lt;p&gt;Clearly, if you really went down that route, you could quickly find yourself hosting dozens of copies of your site.  Is that really worth it, even if it makes your site vastly faster for many visitors?&lt;&#x2F;p&gt;
&lt;p&gt;Well, probably not for the simple example site we’ve been thinking about, but for Google, Amazon, or other huge global companies, absolutely.  And, as far back as the late 90s, other companies understood this need and started building Content Delivery Networks to provide it.  A CDN basically runs local copies of your website, and steers visitors to the closest available copy.&lt;&#x2F;p&gt;
&lt;p&gt;So, CDNs started out as a premium service for large sites.  (Indeed, the CDN that I use, Akamai, which is one of the largest and best CDNs, still largely does business exclusively with large companies.)  But it didn’t stay that way for long.  By the early 2010s, there were multiple CDNs offering services to consumer websites, with cheap or even free plans.  By 2018, if a site isn’t using a CDN, it basically can’t provide the sort of speed that its competitors can offer.&lt;&#x2F;p&gt;
&lt;p&gt;“But wait a second,” I hear you reasonably object.  “How can a CDN host dozens of copies of my site for free when it isn’t even free to host a single copy of my site?”  That’s a very good question, and to answer it, we’ll need to go into a bit more detail, and expose an oversimplification from the explanation above.&lt;&#x2F;p&gt;
&lt;p&gt;When first introducing CDNs, I gave the example of literally running copies of your site all over the globe.  That may sometimes be the way it’s done, but it’s typically not (at least for consumer CDNs).  Instead, a CDN will ask you to label content that isn’t likely to change, like images you post to particular pages.  The CDN will then host that content, and only that content.  For content that changes all the time (including all dynamically generated content) the CDN will direct your visitors back to your main server.&lt;&#x2F;p&gt;
&lt;p&gt;But that raises two questions.  First, even if the CDN is only hosting some of the files, how does that get it cheap enough that they can offer the prices that they do?  And, second, how do CDNs speed up the load times, if users have to wait for a response from the main server anyway?&lt;&#x2F;p&gt;
&lt;p&gt;The first answer turns on the distinction between static content and dynamic content we talked about back when we were discussing PHP.  Remember how I said it was much cheaper to host static content (like the flat HTML files from the 90s) than to host dynamic content (the dynamically generated pages produced by PHP from the early 2000s)?  That’s still true today, and is the reason CDNs work the way they do: because they don’t need to devote any processing power to deciding what to send back to a visitor, or to building a website based on PHP code.  Instead, it can just send back the resource, which is computationally cheap—so cheap that CDNs can offer the great prices that they do.&lt;&#x2F;p&gt;
&lt;p&gt;The answer to the second question is a little more complicated.  The length of time it takes to load a website will depend on &lt;em&gt;both&lt;&#x2F;em&gt; the amount of data transferred &lt;em&gt;and&lt;&#x2F;em&gt; the distance the data has to travel.  So, if your CDN-less Atlanta-hosted site has a visitor from Rome, GA, it will be incredibly fast to send them a small file (like the text of your page), and a bit slow to send them a large file (like a HD picture set as your background).  If your site has a visitor from Rome, Italy, it will be a bit slow even to send the small file (due to the distance), and &lt;strong&gt;very&lt;&#x2F;strong&gt; slow to send the HD picture.&lt;&#x2F;p&gt;
&lt;p&gt;A CDN helps in that situation, because it can handle hosting the image for you (since that’s one of those things that don’t change frequently that you can put on a CDN).  With a CDN, a visitor from Rome would still have to wait a bit for your text to load and (like everyone) they’d have to wait a bit for your large image to load.  But they’d avoid the excruciating wait for a large image being transmitted across a large ocean.&lt;&#x2F;p&gt;
&lt;p&gt;But they still wouldn’t get &lt;em&gt;quite&lt;&#x2F;em&gt; as good an experience as your visitors from Rome, GA—they’d still have to wait for the basic HTML&#x2F;text content of your site to load across the ocean.  The only way to avoid that loading time would be to put your entire site onto the CDN, which isn’t possible … at least not with a dynamic site, built the way sites were built fifteen years ago.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;static-site-generators-the-speed-of-static-with-the-power-of-dynamic&quot;&gt;Static Site Generators: The Speed of Static, with the Power of Dynamic&lt;&#x2F;h2&gt;
&lt;p&gt;With that context, we can at last see the problem that static site generators are built to solve: How can we build a site that has all the power of a dynamic site while also keeping the finished product static?  We want a tool that gives us the power to manage our content and reuse elements just like we can with a site built with PHP, but that also lets us host our entire site on a CDN.&lt;&#x2F;p&gt;
&lt;p&gt;And that’s exactly what a static site generator gives us.  How does it pull that off?&lt;&#x2F;p&gt;
&lt;p&gt;By flipping the order.  Instead of building a copy of the site every time a visitor comes to your site (which requires the web server to use it’s processor to apply the logic in PHP files), a static site generator builds the website on the developer’s computer—that is, on &lt;em&gt;your&lt;&#x2F;em&gt; computer as you’re coding the site.  Instead of writing a PHP file with templating logic (“first the navigation menu, &lt;em&gt;then&lt;&#x2F;em&gt; the content …”) and letting the web server apply that logic, you instead write a template file, and have the static site generator spit out a built file assembled from our separate pieces.  The end result is that you have exactly the same site that you would have had if you’d coded it all by hand like you would have in the early 90s—it’s incredibly fast, totally static, and can be hosted on an CDN for pennies (or even for free).  But, crucially, you didn’t need to build it all by hand, and can reuse (or update) different pieces by making changes to a single file and then updating the site.&lt;&#x2F;p&gt;
&lt;p&gt;This is &lt;em&gt;almost&lt;&#x2F;em&gt; the same as with PHP.  But with two crucial differences.  First, it’s done whenever you add content to the site, instead of every time someone visits the site (which means it’s done much less frequently).  And, second, it’s done on your own computer, which has plenty of processing power to spare that you’ve already paid for, instead of on a web server that you rent (and have to pay for processing power on).&lt;&#x2F;p&gt;
&lt;p&gt;And so that’s the best way to build a website in the late 2010s: write a dynamic website, with each component separated out and easily editable, and then use a static site generator to transform that dynamic site into a set of flat, static files that can be hosted on a CDN.  The power and flexibility of a dynamic site, with the speed and low cost of a static one.&lt;&#x2F;p&gt;
&lt;p&gt;I don’t want to make this sound perfect—there are a few downsides to a static site, and I’ll have more about what those are and how to overcome them soon.  And, even after deciding to use a static site, there’s still the matter of selecting a static site generator—and there are many!  But the basic point stands: these days, there’s no faster or cheaper way to build a website than by using a static site generator.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Why Static Site Generators Are Great</title>
                <pubDate>Sun, 03 Jun 2018 11:37:56 -0400</pubDate>
                <link>https://www.codesections.com/blog/why-static-site-generators-are-great/</link>
                <guid>https://www.codesections.com/blog/why-static-site-generators-are-great/</guid>
                <description>&lt;p&gt;What makes static site generators so great?  And what is a static site generator, anyway?&lt;&#x2F;p&gt;
&lt;p&gt;To answer that, let’s take a step back and think about how a website works.  Skipping over some (interesting and important!) details not relevant here, to display a website all you need to do is to send visitors of the website an HTML document.&lt;&#x2F;p&gt;
&lt;p&gt;As an example, take this stripped-down version of the current &lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&quot;&gt;codesections&lt;&#x2F;a&gt; homepage.  To keep things simple, I&#x27;ve striped out all the CSS and the parts of the HTML related to how the page would look, which leaves us with just the basic HTML.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#002b36;&quot;&gt;
&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;nav&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Home&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;about&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;About&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;writing&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Writing&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;projects&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Projects&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;nav&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;section&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt; 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;I&amp;#39;m Daniel, a web developer who started coding in 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;an odd way:  I was a lawyer in New York, when my firm 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;needed a coding lawyer.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Lawyers and programmers are both incredibly logical, 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;but somehow they don&amp;#39;t always speak the same language.  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;My goal is to bridge that gap by being skilled in both 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;domains—and the first step in doing that is leveling 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;up my programming skills.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;As part of that process, I&amp;#39;ve built this site to 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;provide a home for the &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;projects.html&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;projects
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; I&amp;#39;ll build along the way—and to take the opportunity
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;to build a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;projects&#x2F;this-website&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;website that 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;is like Richard Feynman&amp;#39;s radios&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;section&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;footer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#cb4b16;&quot;&gt;&amp;amp;copy;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; 2018 | &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;&#x2F;license&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Some Rights Reserved&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;dsock&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Github&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; | 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;www.linkedin.com&#x2F;in&#x2F;daniel-sockwell&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;LinkedIn&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt; | 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b58900;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span style=&quot;color:#657b83;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#2aa198;&quot;&gt;mailto:daniel-public-email@codesections.com&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;Email&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;div&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#839496;&quot;&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#268bd2;&quot;&gt;footer&lt;&#x2F;span&gt;&lt;span style=&quot;color:#586e75;&quot;&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Even if you&#x27;re not familiar with HTML, you can probably tell what’s going on
with that code: we&#x27;ve got one section up top that sets up the navigation menu, then a block of code for the main content of the page, and finally a block of code that structures the footer.  That code is enough to set up the whole page (again, skipping over CSS and JavaScript for now), and all you need to do is get that code to the visitors of your website.  So, how do you get it to them?&lt;&#x2F;p&gt;
&lt;p&gt;To answer that, we need a bit of history.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;internet-the-early-years&quot;&gt;Internet: The Early Years&lt;&#x2F;h2&gt;
&lt;p&gt;Well, there are three basic ways.  First, you can just have file on your computer with that exact content.  Then, whenever someone tries to visit www.codesections.com, you send them that HTML file.&lt;&#x2F;p&gt;
&lt;p&gt;This method, known as a “static website”, has the virtue of being very simple, and very fast—all you have to do is send a single file, and it doesn&#x27;t get any faster than that.  In the very early days of the Internet, this was exactly how sites got built.&lt;&#x2F;p&gt;
&lt;p&gt;However, this simple system has a few major drawbacks, too.  Take a look at that code sample again.  As we talked about, it has three sections—and only one of them is specific to the home page.  The navigation menu and the footer need to appear on every page, which means that you need that exact same code on every page.  So, if you&#x27;re coding like it’s 1994, then you’ll need to copy and paste that code into every page.&lt;&#x2F;p&gt;
&lt;p&gt;Worse, if you ever decide to change that code (say, you decide you want to add a new item to the navigation menu), then you&#x27;ll have to make that change on every single page you copied the code into. That’s pretty annoying when you have a site with dozens of pages, but becomes downright overwhelming if you&#x27;re trying to maintain a site with hundreds or thousands of pages.&lt;&#x2F;p&gt;
&lt;p&gt;Even worse, there are a lot of website features that are either very annoying or basically impossible to include with a static website.  Take something as simple as a basic blog.  Here’s what you want: a homepage that displays the ten most recent posts, with a link to the next page with the next ten posts, which links to the next page, and so on.  Well, with a purely static site, you’d have a real chore ahead of you every time you added a new post: you’d need to update the homepage by adding the new post and deleting what is now the eleventh post, and then you’d need to update page two.  And then three.&lt;&#x2F;p&gt;
&lt;p&gt;Clearly, the modern web wouldn&#x27;t be possible if people were coding sites by hand like that.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;static-sites-and-the-rise-of-php&quot;&gt;Static Sites and the Rise of PHP&lt;&#x2F;h3&gt;
&lt;p&gt;So, in the mid-90s, a guy named Rasmus Lerdorf came up with a better system to power his &lt;strong&gt;p&lt;&#x2F;strong&gt;ersonal &lt;strong&gt;h&lt;&#x2F;strong&gt;ome &lt;strong&gt;p&lt;&#x2F;strong&gt;age, which eventually grew into PHP.&lt;&#x2F;p&gt;
&lt;p&gt;The basic idea behind PHP is to dynamically generate a website whenever a visitor navigates to a page.  Here’s how that would work with our example site:  instead of having a single file for the home page, you’d have a file with the home page content, another file with the navigation menu, and a third with the footer.  Then, you’d have some PHP code that basically says “whenever someone asks for the homepage, build that page by inserting the navigation menu, then the content for the home page, and finally the footer”.  Or, if you were building a blog, you could have PHP that says “build the blog home page by inserting the navigation menu, then the ten most recent posts, and then the footer”.&lt;&#x2F;p&gt;
&lt;p&gt;Despite some well-deserved criticism, PHP represented a huge improvement, and it powered the explosion of dynamic websites in the late 90s and early 2000s.  If you were building a website around the turn of the century, a dynamic website built with PHP was definitely the way to go.  Sure, it wasn&#x27;t &lt;em&gt;quite&lt;&#x2F;em&gt; as fast (or as cheap) to get your content to users, since you had to run some logic on your computer every time a visitor requested a page.  But computing power was cheap, and getting even cheaper—and, besides, it was far more costly to pay programmers to maintain a sprawling static site than to have it done automatically with PHP.&lt;&#x2F;p&gt;
&lt;p&gt;Even better, technologies like &lt;a href=&quot;en.wikipedia.org&#x2F;wiki&#x2F;WordPress&quot;&gt;Wordpress&lt;&#x2F;a&gt; and other Content Management Systems put building even
a complex dynamic site within the reach of everyday people, even
without much technical sophistication.&lt;&#x2F;p&gt;
&lt;p&gt;But, as great as dynamic sites were a decade ago, they&#x27;re no longer the best way to build a site.  To understand why not, we need to talk about a couple of technologies that have taken off in the last fifteen or so years.&lt;&#x2F;p&gt;
&lt;p&gt;In the next post, I’ll explain what those technologies are, how they&#x27;ve transformed the demands placed on modern websites, and why they mean that static site generators are the best way to build websites for the modern web.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Recursive Learning</title>
                <pubDate>Sun, 03 Jun 2018 11:32:38 -0400</pubDate>
                <link>https://www.codesections.com/blog/recursive-learning/</link>
                <guid>https://www.codesections.com/blog/recursive-learning/</guid>
                <description>&lt;p&gt;There’s an interestingly recursive nature to learning programming. As part of my ongoing project to build my programming skills to a higher level, I would like to learn Node and modern JavaScript frameworks&#x2F;libraries like React and Redux.  So, that’s my starting point: What do I need to do to learn these new technologies?&lt;&#x2F;p&gt;
&lt;p&gt;Except that conventional wisdom holds (and I agree) that it makes more sense to become very comfortable with vanilla JavaScript before jumping to a framework.  This makes a lot of sense, actually: A framework is a powerful tool, but at the end of the day it is compiling down to JavaScript—if I don’t understand the strengths and weaknesses of JavaScript, I won’t understand the problems that these frameworks were built to solve or the trade-offs they make.  And I won’t be able to learn them nearly as well.&lt;&#x2F;p&gt;
&lt;p&gt;So, I’m off to learn vanilla JavaScript.  Time to read books like Crockford’s &lt;em&gt;JavaScript: The Good Parts&lt;&#x2F;em&gt; and &lt;em&gt;Eloquent JavaScript&lt;&#x2F;em&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Except …&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;To effectively learn JavaScript at a high level, I really should have a text editor that I’m deeply familiar with.  Sure, I&#x27;ve gotten by with the core functionality in Sublime Text—syntax highlighting, tab settings, and simple macros have been very helpful for the projects I&#x27;ve worked on so far.  But I know there’s a lot more to learn.  Before I invest time in learning JavaScript more deeply, I really should dive into the program and figure out its more advanced features.  Doing so will let me take full advantage of Sublime, and will save me significant time in the long run as I learn JavaScript.&lt;&#x2F;p&gt;
&lt;p&gt;Except (and I’m sure you’re sensing a pattern), if I’m going to invest time in learning the features of a text editor, it’s probably worth learning the text editor that &lt;em&gt;best&lt;&#x2F;em&gt; fits my needs and working style.  That could be Sublime Text, but it might well not be—there are many excellent text editors out there, and the little bit of time I&#x27;ve spent with Sublime doesn&#x27;t guarantee that it’s the right fit for me.&lt;&#x2F;p&gt;
&lt;p&gt;[Much research later]  OK, I&#x27;ve now decided that Vim is the text editor I’m going to invest in learning.  (I’ll probably have more about why in a separate post.)  Time to read books like &lt;em&gt;Practical Vim&lt;&#x2F;em&gt; and &lt;em&gt;Modern Vim&lt;&#x2F;em&gt; and invest in setting up a good .vimrc configuration file.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;Except&lt;&#x2F;strong&gt;, Vim famously relies entirely on keyboard navigation, so it’s essential to be an excellent touch typist.  In fact, &lt;em&gt;Practical Vim&lt;&#x2F;em&gt; literally has a chapter titled “Learn to Touch Type, Then Learn Vim”, which states “if you have to look down to find keys on the keyboard, the benefits of learning Vim won’t come fast.  Learning to touch type is imperative.”&lt;&#x2F;p&gt;
&lt;p&gt;Now, I can touch type—I doubt I would have pumped out the volume of writing I&#x27;ve produced over the years if I couldn&#x27;t.  But I’ll admit that my current typing skill is closer to “serviceable” than to “excellent”.  I’m generally fine with alphabetic characters and simple punctuation—the vast majority of what I was typing in a non-programming context.  And, while my accuracy isn&#x27;t great (maybe 95%), it is high enough that I rarely need to pause my writing to correct typos: By the time I have a typo to correct, there’s probably also a spelling error to fix or some other non-typo edit to perform, so the typo doesn&#x27;t cause an extra context switch from writing to revising.&lt;&#x2F;p&gt;
&lt;p&gt;But programming changes that analysis considerably.  When coding, it’s no longer the case that I’m spending nearly all my time dealing with alphabetic characters and a small handful of common punctuation marks (like “,.;’ and :).  Instead, I’m constantly typing numerals and characters such as [{$! — that is, characters that I’m not nearly as accurate on.  What’s more, I’m also not in a situation where I make nearly as many spelling errors: nearly everything I type when programming either a short, common word like “let”, “function”, or “New”, or is a long function or variable name that can be auto completed in my text editor.  This means that fixing the occasional typo is not longer a matter of fixing one more minor error when I&#x27;ve already paused to fix a few spelling errors; instead, the typo is likely the only reason to pause the forward momentum of coding at all.&lt;&#x2F;p&gt;
&lt;p&gt;The bottom line is clear:  I need to improve my typing accuracy and speed if I’m going to learn to make full use of Vim.&lt;&#x2F;p&gt;
&lt;p&gt;So, let me pause here for just a minute.  I’m learning to type more accurately … so that I can learn Vim better … so that I can have a text editor I’m effect with … so that I can learn vanilla JavaScript better … so that I can learn more modern frameworks … so that I can build the sort of tools, apps, and projects that I want to build.  Whew!  I feel vaguely like an old fashioned Sierra or Lucas Arts adventure-game hero, who has to achieve a long string of seemingly unrelated tasks just to take one step closer to their alleged main quest.&lt;&#x2F;p&gt;
&lt;p&gt;(Mind you, I’m &lt;strong&gt;definitely not&lt;&#x2F;strong&gt; complaining.  Each step may be one further removed from my ultimate goal, but each one &lt;em&gt;is&lt;&#x2F;em&gt; connected.  And—even more importantly—each one is valuable, in and of itself. Each one will build my skills, and make me more capable in the long run.  In fact, having the luxury to go down these sorts of recursive rabbit trails is one of the big reasons I want to devote myself to full-time learning for a bit, rather than learning in the context of needing to deliver a finished product on a tight timeline.)&lt;&#x2F;p&gt;
&lt;p&gt;All of that was a long way of saying this:  I&#x27;m currently spending a lot of time getting (much, much) better at typing.  More details on what I&#x27;m doing and what progress I&#x27;ve made to come.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Hello World! (And past writing)</title>
                <pubDate>Sun, 03 Jun 2018 11:31:03 -0400</pubDate>
                <link>https://www.codesections.com/blog/hello-world/</link>
                <guid>https://www.codesections.com/blog/hello-world/</guid>
                <description>&lt;p&gt;Welcome!  Don’t you just love that new-blog smell?&lt;&#x2F;p&gt;
&lt;p&gt;This blog is my new home for technical topics, book reviews, whatever else
catches my attention.  I firmly believe that web developers should have their
own digital space, one that they build, control, and fully understand.  For
me, this site is that space.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;colophon&quot;&gt;Colophon&lt;&#x2F;h2&gt;
&lt;p&gt;As of this writing, this site is built using &lt;a href=&quot;https:&#x2F;&#x2F;gohugo.io&#x2F;&quot;&gt;Hugo&lt;&#x2F;a&gt;
(&lt;strong&gt;EDIT&lt;&#x2F;strong&gt;: The site is now built with Gutenberg, which is &lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;blog&#x2F;gutenberg-vs-hugo&#x2F;&quot;&gt;much better
than Hugo&lt;&#x2F;a&gt;) the
leading static site generator.  It uses a self-written theme and the source
code lives in a publicly available &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;dsock&#x2F;codesections&quot;&gt;GitHub
repository&lt;&#x2F;a&gt; (&lt;strong&gt;EDIT&lt;&#x2F;strong&gt;: Now a
&lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;codesections&#x2F;codesections-website&quot;&gt;GitLab repository&lt;&#x2F;a&gt;).
If you’re curious about what I was trying to achieve with this site, I’ve
written &lt;a href=&quot;&#x2F;projects&#x2F;this-website&quot;&gt;a whole page&lt;&#x2F;a&gt; about what
I was aiming for and how well I did.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;past-writing&quot;&gt;Past writing&lt;&#x2F;h2&gt;
&lt;p&gt;While this is the first post on this blog, it’s far from the first public
writing I’ve done.  Past highlights include:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a name=&quot;continue-reading&quot;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;writing-a-brief-for-the-ipad-judge&quot;&gt;Writing a Brief for the iPad Judge&lt;&#x2F;h2&gt;
&lt;p&gt;One of my first attempts at linking law and technology—and probably the most
widely read item I’ve written so far—was &lt;a href=&quot;https:&#x2F;&#x2F;cblr.columbia.edu&#x2F;writing-a-brief-for-the-ipad-judge&quot;&gt;a post about how legal writing
should change&lt;&#x2F;a&gt;
a post about how legal writing should change when the audience might be
reading it on a tablet or other mobile device.  This post was linked and
discussed by &lt;a href=&quot;http:&#x2F;&#x2F;volokh.com&#x2F;2014&#x2F;01&#x2F;17&#x2F;writing-briefs-judges-read-ipads&#x2F;&quot;&gt;The Volokh
Conspiracy&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;researchingparalegal.com&#x2F;2014&#x2F;01&#x2F;28&#x2F;do-you-know-whether-your-judge-uses-an-ipad-or-tablet-find-out-before-you-submit-your-next-brief&quot;&gt;The Researching Paralegal&lt;&#x2F;a&gt;,
&lt;a href=&quot;http:&#x2F;&#x2F;blog.simplejustice.us&#x2F;2014&#x2F;01&#x2F;27&#x2F;its-not-just-a-formatting-thing&#x2F;&quot;&gt;Simple Justice&lt;&#x2F;a&gt;,
&lt;a href=&quot;https:&#x2F;&#x2F;atcounseltable.wordpress.com&#x2F;2014&#x2F;01&#x2F;24&#x2F;3-ways-to-make-your-brief-read-better-on-an-ipad&#x2F;&quot;&gt;At Counsel Table&lt;&#x2F;a&gt;,
and others.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;legal-and-academic-writing&quot;&gt;Legal and Academic Writing&lt;&#x2F;h2&gt;
&lt;p&gt;As a lawyer and student, I also wrote a ton—though most of that writing was on
behalf of a client or employer or otherwise isn’t publicly available.  One
item that &lt;em&gt;is&lt;&#x2F;em&gt; available, however, is the Law Review article I published,
&lt;a href=&quot;https:&#x2F;&#x2F;cblr.columbia.edu&#x2F;wp-content&#x2F;uploads&#x2F;2014&#x2F;08&#x2F;Sockwell-Intro-+-TOC.pdf&quot;&gt;Deterring Discovery-Driven Deletions of
Data&lt;&#x2F;a&gt;.
This article also lay at the intersection of law and technology, and argued
that the legal framework around civil litigation creates incentives for
companies to delete data that could be be incredibly useful in the right hands.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>About Me</title>
                <pubDate>Sun, 03 Jun 2018 10:41:27 -0400</pubDate>
                <link>https://www.codesections.com/about/</link>
                <guid>https://www.codesections.com/about/</guid>
                <description>&lt;aside&gt;
  &lt;p&gt;This page is about me, Daniel Sockwell, the person.  If you&#x27;re interested in details about this site, there’s a &lt;a href=&quot;..&#x2F;projects&quot;&gt;separate page for that&lt;&#x2F;a&gt; (or you can just &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;codesections&#x2F;codesections-website&quot;&gt;check out the source code for this site&lt;&#x2F;a&gt;).&lt;&#x2F;p&gt;
&lt;&#x2F;aside&gt;
&lt;p&gt;I’m Daniel, and I’m on a mission to bridge the gap between law and
technology.  Before embarking on this project, I  was an attorney at a major
New York law firm, where my practice focused on civil litigation and
emphasized cybersecurity, data privacy, and other intersections between law
and technology.&lt;&#x2F;p&gt;
&lt;p&gt;I grew up in Birmingham, Alabama, and have also lived in California,
Mississippi, New York, North Carolina, and Texas.  When I’m not working on
programming or legal topics, you can find me out hiking in the backcountry,
reading a science fiction book, or playing a board game with my wife (&lt;a href=&quot;https:&#x2F;&#x2F;boardgamegeek.com&#x2F;boardgame&#x2F;28143&#x2F;race-galaxy&quot;&gt;Race for
the Galaxy&lt;&#x2F;a&gt; is a
current favorite).&lt;&#x2F;p&gt;
&lt;h2 id=&quot;contact&quot;&gt;Contact&lt;&#x2F;h2&gt;
&lt;p&gt;Please feel free to reach out to me using any of the methods below.  Please
note that, while I maintain placeholder profiles on Facebook and Twitter, I do
not use either of those services—instead, I use
&lt;a href=&quot;https:&#x2F;&#x2F;joinmastodon.org&#x2F;&quot;&gt;Mastodon&lt;&#x2F;a&gt; as my primary social network.&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th align=&quot;left&quot;&gt; Contact Method &lt;&#x2F;th&gt;&lt;th align=&quot;left&quot;&gt; Link                          &lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td align=&quot;left&quot;&gt; Mastodon&lt;&#x2F;td&gt;&lt;td align=&quot;left&quot;&gt; &lt;a href=&quot;https:&#x2F;&#x2F;fosstodon.org&#x2F;@codesections&quot;&gt;fosstodon.org&#x2F;@codesections&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td align=&quot;left&quot;&gt; GitLab  &lt;&#x2F;td&gt;&lt;td align=&quot;left&quot;&gt; &lt;a href=&quot;https:&#x2F;&#x2F;gitlab.com&#x2F;codesections&quot;&gt;gitlab.com&#x2F;codesections&lt;&#x2F;a&gt;        &lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td align=&quot;left&quot;&gt; GitHub  &lt;&#x2F;td&gt;&lt;td align=&quot;left&quot;&gt; &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;codesections&quot;&gt;github.com&#x2F;codesections&lt;&#x2F;a&gt;        &lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td align=&quot;left&quot;&gt; LinkedIn&lt;&#x2F;td&gt;&lt;td align=&quot;left&quot;&gt; &lt;a href=&quot;https:&#x2F;&#x2F;www.linkedin.com&#x2F;in&#x2F;daniel-sockwell&quot;&gt;linkedin.com&#x2F;in&#x2F;daniel-sockwell&lt;&#x2F;a&gt; &lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td align=&quot;left&quot;&gt; KeyBase &lt;&#x2F;td&gt;&lt;td align=&quot;left&quot;&gt; &lt;a href=&quot;https:&#x2F;&#x2F;keybase.io&#x2F;codesections&quot;&gt;keybase.io&#x2F;codesections&lt;&#x2F;a&gt;        &lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td align=&quot;left&quot;&gt; Email   &lt;&#x2F;td&gt;&lt;td align=&quot;left&quot;&gt; &lt;a href=&quot;mailto:daniel@codesections.com&quot;&gt;daniel@codesections.com&lt;&#x2F;a&gt;                                         &lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td align=&quot;left&quot;&gt;Public Key&lt;&#x2F;td&gt;&lt;td align=&quot;left&quot;&gt; &lt;a href=&quot;https:&#x2F;&#x2F;www.codesections.com&#x2F;public-key.txt&quot;&gt;codesections.com&#x2F;public-key.txt&lt;&#x2F;a&gt; &lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
</description>
            </item>
        
            <item>
                <title>License &amp; Legal</title>
                <pubDate>Sun, 03 Jun 2018 10:41:27 -0400</pubDate>
                <link>https://www.codesections.com/license/</link>
                <guid>https://www.codesections.com/license/</guid>
                <description>&lt;p&gt;All non-code content on this site is licensed under the &lt;a href=&quot;https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by&#x2F;4.0&#x2F;legalcode&quot;&gt;Creative Commons
Attribution 4.0 International License&lt;&#x2F;a&gt;.
This license generally allows for full duplication of all content, including
for commercial use, provided that you attribute this site as the source of
the content.&lt;&#x2F;p&gt;
&lt;p&gt;All code contained in this site is licensed under the &lt;a href=&quot;https:&#x2F;&#x2F;opensource.org&#x2F;licenses&#x2F;MIT&quot;&gt;MIT License&lt;&#x2F;a&gt; unless another license is specified in an
accompanying &lt;code&gt;LICENCE&lt;&#x2F;code&gt; file.  The MIT license also allows for full duplication
of all content, including for commercial use, with attribution&lt;&#x2F;p&gt;
&lt;p&gt;Nothing on this website is legal advice, investment advice, life advice, or
any other sort of advice.  This site also does not create an attorney–client
relationship or any other sort of relationship.&lt;&#x2F;p&gt;
</description>
            </item>
        
            <item>
                <title>Privacy Guarantees</title>
                <pubDate>Sun, 03 Jun 2018 10:41:27 -0400</pubDate>
                <link>https://www.codesections.com/privacy/</link>
                <guid>https://www.codesections.com/privacy/</guid>
                <description>&lt;p&gt;This site does not use cookies or JavaScript analytics (Google or otherwise).
If you would like me to know that you read something here, send me an email or
let me know on Mastodon, because I won&#x27;t know in any other way.&lt;&#x2F;p&gt;
&lt;p&gt;(I do check the server logs to see the total number of requests each page receives
and other basic information.  None of that information is personally identifying.)&lt;&#x2F;p&gt;
</description>
            </item>
        
    </channel>
  </rss>
